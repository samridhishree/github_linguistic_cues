rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text
rectype,issueid,project_owner,project_name,actor,time,text,action,title,text
issue_title,210,pycqa,astroid,pylint-bot,2015-10-10 10:05:10,"Originally reported by: **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**

---

The module was added a while ago, for fixing a recursion problem found in a PyPi package. The code was using string concatenation in order to build a huge base64-encoded image, which unfortunately hit the recursion limit in astroid.rebuilder. The problem is that the code wasn't working by default in CPython, without modifying the recursion limit to something higher. Since the peephole optimizer we have is badly named and it actually doesn't do optimizing (it's just some constant folding) and since the problem it supposed to be fixing shouldn't be handled like this, we could deprecate it and eventually remove it. This also implies the same modification in pylint, where the flag --optimize-ast is exposed.

---
- Bitbucket: https://bitbucket.org/logilab/astroid/issue/210
",start issue,Deprecate and remove astpeepholeoptimizer,origin report claudiu popa bitbucket pcmanticor github pcmanticor the modul ad ago fix recurs problem found pypi packag the code use string concaten order build huge base64encod imag unfortun hit recurs limit astroidrebuild the problem code wasnt work default cpython without modifi recurs limit someth higher sinc peephol optim badli name actual doesnt optim constant fold sinc problem suppos fix shouldnt handl like could deprec eventu remov thi also impli modif pylint flag optimizeast expos bitbucket
issue_closed,210,pycqa,astroid,pylint-bot,2015-12-09 05:55:14,,closed issue,Deprecate and remove astpeepholeoptimizer,
issue_comment,210,pycqa,astroid,pylint-bot,2015-11-12 15:12:46,"_Original comment by_ **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**:

---

Remove the astpeephole

It was initially added in order to remove a recursion error in rebuilder, which
happened when a lot of strings were added together, leading to an
actual recursion error when executing the code. The peepholer was more
of a constant folding algorithm rather than a real peepholer. Since it's
purpose is limited and the original problem is not worth fixing in
astroid, but in the user code, this is removed.
Closes issue #210
",,,origin comment claudiu popa bitbucket pcmanticor github pcmanticor remov astpeephol It initi ad order remov recurs error rebuild happen lot string ad togeth lead actual recurs error execut code the peephol constant fold algorithm rather real peephol sinc purpos limit origin problem worth fix astroid user code remov close issu 210
