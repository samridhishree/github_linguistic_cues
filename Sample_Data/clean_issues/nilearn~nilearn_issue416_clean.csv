rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text
rectype,issueid,project_owner,project_name,actor,time,text,action,title,text
issue_title,416,nilearn,nilearn,banilo,2015-02-08 10:29:49,"Should be self-explanatory
",start issue,[ENH] function for nifti header comparison in _utils,should selfexplanatori
issue_closed,416,nilearn,nilearn,AlexandreAbraham,2015-03-09 13:40:57,,closed issue,[ENH] function for nifti header comparison in _utils,
pull_request_title,416,nilearn,nilearn,banilo,2015-02-08 10:29:49,"Should be self-explanatory
",bd8590ed067be171532d40e0e414bc392afbd7e0,[ENH] function for nifti header comparison in _utils,should selfexplanatori
issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-08 11:06:51,"why would you want to compare headers?  This is a serious question: I don't see the use case of such a generic comparison of all the fields. 
",,,would want compar header thi seriou question I dont see use case gener comparison field
issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-08 11:06:58,"why would you want to compare headers?  This is a serious question: I don't see the use case of such a generic comparison of all the fields. 
",,,would want compar header thi seriou question I dont see use case gener comparison field
issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-09 12:42:57,"I find that a lot of these justifications are ""will be useful"", and not
directly useful. Thus, in favor of the YAGNI principle, I lean on the
options of not doing it.

Also, I believe that exact comparison of headers is seldom a good idea.
Things like cal_min and cal_max are data dependent, and should probably
not be compared. My view is that to do anything with a nifti header, one
should understand what's in there and be a bit specific about it.
",,,I find lot justif use directli use thu favor yagni principl I lean option also I believ exact comparison header seldom good idea thing like calmin calmax data depend probabl compar My view anyth nifti header one understand what bit specif
issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-09 22:28:03,"> In iter_img, we copy the header of the image to the sub_images. As Ga�l
> stated, we do that for now, but we have no clear idea of what's
> contained in the

Actually, in iter_img/index_img, I find that it is what we should be
doing.
",,,actual iterimgindeximg I find
issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-10 06:40:27,"> Yes, but if we want to be accurate, we need to put a value of index *
> t_r for toffset.

:).

That's why I am afraid of nifti headers, it is so easy to screw them up.
",,,that I afraid nifti header easi screw
issue_comment,416,nilearn,nilearn,eickenberg,2015-02-08 11:20:38,"It is true that this does not seem to address https://github.com/nilearn/nilearn/issues/380 in any way.

The proposal resulting from that discussion is more of a copying mechanism, similar to `np.zeros_like` and `np.ones_like` where properties of the input image are copied except if other values are specified in the keyword arguments. The key point of that discussion is _which_ attributes to copy, because some of them are data dependent in different ways.

The contribution here could maybe be used as the analogous diagnostic tool for anybody who relies strongly on header information. In this case, just as in the discussion in #380, different modes of comparison may be possible depending on the context one is working in.

That is the only use case I can think of right now and I am not sure it is valid.
",,,It true seem address way the propos result discuss copi mechan similar properti input imag copi except valu specifi keyword argument the key point discuss attribut copi data depend differ way the contribut could mayb use analog diagnost tool anybodi reli strongli header inform In case discuss 380 differ mode comparison may possibl depend context one work that use case I think right I sure valid
issue_comment,416,nilearn,nilearn,banilo,2015-02-08 12:28:39,"There are at least three ways of looking at a potential usefulness of is_hdr_equal:

a) Michael H. suggested we should look more at how headers are handled/modified/passed on in nilearn -> this might increasingly necessitate broad header comparisons in the future

b) Loic wanted to incorporate a header comparison in the test for index_img but there was no such function, which is why niftis in that test are currently compared with respect to some (data + affine) but not all aspects (+header)

c) Fundamentally, nifti = data + header (includes affine), not nifti = data + affine (header is a blackspot). It would make sense to account for this reality in the API
",,,there least three way look potenti use ishdrequ michael H suggest look header handledmodifiedpass nilearn b loic want incorpor header comparison test indeximg function nifti test current compar respect data affin aspect header c fundament nifti data header includ affin nifti data affin header blackspot It would make sens account realiti api
issue_comment,416,nilearn,nilearn,AlexandreAbraham,2015-02-09 12:39:30,"> why would you want to compare headers? This is a serious question: I don't see the use case of such a generic comparison of all the fields.

If we want to implement #380, such a function would be useful for testing. It should take a `mode` parameter similar to the ones used in the other niimg functions. For the moment, I don't think it is useful.
",,,If want implement 380 function would use test It take paramet similar one use niimg function for moment I dont think use
issue_comment,416,nilearn,nilearn,banilo,2015-02-09 12:46:36,"Very concretely, such a function was needed last week in the index_img test, but was not present.
",,,veri concret function need last week indeximg test present
issue_comment,416,nilearn,nilearn,AlexandreAbraham,2015-02-09 12:51:03,"> I find that a lot of these justifications are ""will be useful"", and not directly useful. Thus, in favor of the YAGNI principle, I lean on the options of not doing it. 

Hence my conclusion: we don't need it for now ;).

> Very concretely, such a function was needed last week in the index_img test, but was not present.

In `iter_img`, we copy the header of the image to the _sub_images_. As Gaël stated, we do that for now, but we have no clear idea of what's contained in the header. Since we don't have clear ideas on that, I think we don't want to integrate code like that. Honestly, I don't feel comptetent enough regarding nifti headers to tell if it's a good idea or not.
",,,henc conclus dont need In copi header imag subimag As gaël state clear idea what contain header sinc dont clear idea I think dont want integr code like honestli I dont feel comptet enough regard nifti header tell good idea
issue_comment,416,nilearn,nilearn,AlexandreAbraham,2015-02-09 23:19:52,"Yes, but if we want to be accurate, we need to put a value of `index * t_r` for `toffset`. 
",,,ye want accur need put valu
issue_comment,416,nilearn,nilearn,AlexandreAbraham,2015-03-09 13:40:57,"I close this one as it won't be merged. We don't know if we will need this function. It is superseeded by #380 and the code provided here may still be useful to adresse this issue.
",,,I close one wont merg We dont know need function It superseed 380 code provid may still use adress issu
pull_request_commit_comment,416,nilearn,nilearn,eickenberg,2015-02-08 10:38:50,"Would it be possible to have this list explicitly, at least in a comment, or in a notes section in the docstring. That way one can immediately see what is compared.

For reference `[('sizeof_hdr', 'i4'),  ('data_type', 'S10'), ('db_name', 'S18'), ('extents', 'i4'), ('session_error', 'i2'),  ('regular', 'S1'), ('dim_info', 'u1'), ('dim', 'i2', (8,)), ('intent_p1', 'f4'),('intent_p2', 'f4'), ('intent_p3', 'f4'), ('intent_code', 'i2'),
 ('datatype', 'i2'), ('bitpix', 'i2'), ('slice_start', 'i2'), ('pixdim', 'f4', (8,)), ('vox_offset', 'f4'), ('scl_slope', 'f4'), ('scl_inter', 'f4'),
 ('slice_end', 'i2'), ('slice_code', 'u1'), ('xyzt_units', 'u1'), ('cal_max', 'f4'), ('cal_min', 'f4'), ('slice_duration', 'f4'),
 ('toffset', 'f4'), ('glmax', 'i4'), ('glmin', 'i4'), ('descrip', 'S80'), ('aux_file', 'S24'), ('qform_code', 'i2'),
 ('sform_code', 'i2'), ('quatern_b', 'f4'), ('quatern_c', 'f4'), ('quatern_d', 'f4'), ('qoffset_x', 'f4'),
 ('qoffset_y', 'f4'), ('qoffset_z', 'f4'), ('srow_x', 'f4', (4,)), ('srow_y', 'f4', (4,)), ('srow_z', 'f4', (4,)), ('intent_name', 'S16'),
 ('magic', 'S4')]`
",bd8590ed067be171532d40e0e414bc392afbd7e0,"(34, '', u'nilearn/_utils/niimg_conversions.py')",would possibl list explicitli least comment note section docstr that way one immedi see compar for refer
pull_request_commit,416,nilearn,nilearn,banilo,2015-02-08 08:47:44,ENH: is_hdr_equal() added,cd58953074f9ca7067ca3b898a3cbb9ee865db03,,enh ishdrequ ad
pull_request_commit,416,nilearn,nilearn,banilo,2015-02-08 10:20:41,test for is_hdr_equal(),bd8590ed067be171532d40e0e414bc392afbd7e0,,test ishdrequ
pull_request_commit_comment,416,nilearn,nilearn,eickenberg,2015-02-08 10:44:33,"travis seems to be finding a `NotImplementedType` here - can you check what field this is on in your MNItemplate test?
",cd58953074f9ca7067ca3b898a3cbb9ee865db03,"(47, 440, u'nilearn/_utils/niimg_conversions.py')",travi seem find check field mnitempl test
