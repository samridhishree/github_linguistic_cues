rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text
rectype,issueid,project_owner,project_name,actor,time,text,action,title,text
issue_title,286,pycqa,astroid,PCManticore,2015-12-11 15:25:52,"The master branch has quite a lot of bugs caused by a buggy implementation of raw_building. This was completely rewritten by @ceridwen in the modular-locals bookmark, which got merged in 2.0. Unfortunately, b3d48abbdf673697977f59c5476008a85acb1e27 started to uncover some of these bugs in the master branch, as you can see from this Travis build https://travis-ci.org/PyCQA/astroid/jobs/96256817. What's happening is that raw_building will happily construct nodes such as List, Tuple or Set with with composite sequences, such as list of tuples, without converting the inner elements to AST nodes, resulting in a mixture of nodes and Python object. I plan to add a hack for solving this temporarily, so that master branch could be used again.

My question is though what should happen with master during astroid 1.5.0 lifetime, since the changes from modular-locals should mean that we will not have this problem any longer. Here's a couple of things we could do:
- bring the changes from modular-locals into master, which will be released as astroid 1.5.0. This mean that we should restrict ourselves only to the changes made in raw_building.py, so patching .locals should still work and stuff like that.
- kill the plan to release 1.5.0 altogether, merge master with 2.0 and launch it when it's done. We could do small astroid releases for removing deprecated things.

cc @The-Compiler @ceridwen 
",start issue,Should raw_building from 2.0 be included in 1.5?  Should there be a 1.5?,the master branch quit lot bug caus buggi implement rawbuild thi complet rewritten ceridwen modularloc bookmark got merg 20 unfortun b3d48abbdf673697977f59c5476008a85acb1e27 start uncov bug master branch see travi build what happen rawbuild happili construct node list tupl set composit sequenc list tupl without convert inner element ast node result mixtur node python object I plan add hack solv temporarili master branch could use My question though happen master astroid 150 lifetim sinc chang modularloc mean problem longer here coupl thing could bring chang modularloc master releas astroid 150 thi mean restrict chang made rawbuildingpi patch local still work stuff like kill plan releas 150 altogeth merg master 20 launch done We could small astroid releas remov deprec thing cc thecompil ceridwen
issue_closed,286,pycqa,astroid,PCManticore,2016-01-28 16:46:42,,closed issue,Should raw_building from 2.0 be included in 1.5?  Should there be a 1.5?,
issue_comment,286,pycqa,astroid,ceridwen,2015-12-11 22:28:17,"I don't know how easy moving the changes to raw_building into master will be, astroid's code in general is strongly-coupled.  I've been working to try to fix this, and I think one of our major targets in 2.0 should be to decouple the components more and improve the grouping of related code to make future moves like this easier.

I think the question of if we need an astroid 1.5 depends on how long it takes to release 2.0.  At the moment, assuming we can put together a release next spring, I'd be inclined against it.  If we expect astroid 2.0 to take much longer than that, though, we might consider releasing 1.5.  I'm not sure where the cutoff is---astroid 1.4 took a year, IIRC?  If it happens, astroid 1.5 is probably going to involve backporting more major fixes from 2.0, because we're hitting the point where many of these bugs can't be easily fixed by small changes.
",,,I dont know easi move chang rawbuild master astroid code gener stronglycoupl ive work tri fix I think one major target 20 decoupl compon improv group relat code make futur move like easier I think question need astroid 15 depend long take releas 20 At moment assum put togeth releas next spring Id inclin If expect astroid 20 take much longer though might consid releas 15 Im sure cutoff isastroid 14 took year iirc If happen astroid 15 probabl go involv backport major fix 20 hit point mani bug cant easili fix small chang
issue_comment,286,pycqa,astroid,PCManticore,2015-12-11 23:30:33,"Yeah, astroid 1.4.0 is or should be the outlier here. Its delay was a combination of circumstances, starting from too many features added to pylint and astroid, too many bugs generated by these features and lack of time on my side in certain months. Ideally, it would have been released in June, but rolling new features into pylint and astroid delayed it until the end of the year.

Anyway, waiting one year for 2.0 for instance is not very good, the idea being to push changes to the users that actually make a difference for them, without being locked by a never-ending design phase. My plan is to have 2.0 out by march-april at best, even if it will require to reduce the feature set.

So this means that if you agree and if this sounds good to you as well, that master and 2.0 should be merged together, at least as soon as you consider 2.0 stable with regard to modular-locals changes. Other minor releases could be cherry-picked from it, as it was done for astroid 1.4.0.
",,,yeah astroid 140 outlier it delay combin circumst start mani featur ad pylint astroid mani bug gener featur lack time side certain month ideal would releas june roll new featur pylint astroid delay end year anyway wait one year 20 instanc good idea push chang user actual make differ without lock neverend design phase My plan 20 marchapril best even requir reduc featur set So mean agre sound good well master 20 merg togeth least soon consid 20 stabl regard modularloc chang other minor releas could cherrypick done astroid 140
issue_comment,286,pycqa,astroid,PCManticore,2016-01-25 11:29:37,"Most likely no. But after it gets stable, I'd like to integrate it in master and make master 2.0. 
",,,most like but get stabl Id like integr master make master 20
issue_comment,286,pycqa,astroid,PCManticore,2016-01-28 16:46:42,"Closing since we know already what we have to do: 2.0 will get merged into master when it gets stable, there won't be any new minor release (meaning no astroid 1.5, but we'll go straight to 2.0).
",,,close sinc know alreadi 20 get merg master get stabl wont new minor releas mean astroid 15 well go straight 20
