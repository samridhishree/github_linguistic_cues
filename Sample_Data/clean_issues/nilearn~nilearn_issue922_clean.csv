rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text
rectype,issueid,project_owner,project_name,actor,time,text,action,title,text
issue_title,922,nilearn,nilearn,banilo,2015-12-18 10:29:20,"...trace back is:

``` python
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-44-802cef648458> in <module>()
----> 1 plotting.find_xyz_cut_coords(nib.load(roi_paths[2]))

/git/nilearn/nilearn/plotting/find_cuts.py in find_xyz_cut_coords(img, mask, activation_threshold)
     90         return .5 * np.array(data.shape)
     91     mask = largest_connected_component(mask)
---> 92     slice_x, slice_y, slice_z = ndimage.find_objects(mask)[0]
     93     my_map = my_map[slice_x, slice_y, slice_z]
     94     mask = mask[slice_x, slice_y, slice_z]
```

The image on which this crashes is attached.

[dmpfc-3.nii.zip](https://github.com/nilearn/nilearn/files/66476/dmpfc-3.nii.zip)
",start issue,find_xyz_cut_coords crashes on some compact binary images,trace back the imag crash attach dmpfc3niizip
issue_closed,922,nilearn,nilearn,lesteve,2016-01-13 12:33:32,,closed issue,find_xyz_cut_coords crashes on some compact binary images,
issue_comment,922,nilearn,nilearn,AlexandreAbraham,2015-12-20 13:43:48,"As all functions working on img directly (not niimg), it assumes that the input has the right dimension. This has been done because this function is not ""opened to public"". So, two options:
- you use the regular way to load your image, meaning `check_niimg_3d` (instead of `nibabel.load`). It will convert your 4d image to 3d automatically
- We call `check_niimg_3d` at the beginning of `find_xyz_cut_coords`. It will then work natively on all niimgs.
",,,As function work img directli niimg assum input right dimens thi done function open public So two option use regular way load imag mean instead It convert 4d imag 3d automat We call begin It work nativ niimg
issue_comment,922,nilearn,nilearn,AlexandreAbraham,2015-12-20 14:04:12,"Well, a small computational overhead because we check the input data, that's all.
",,,well small comput overhead check input data that
issue_comment,922,nilearn,nilearn,AlexandreAbraham,2016-01-07 12:16:36,"@banilo I think this is important for 0.2.2. Are you working on it?
",,,banilo I think import 022 are work
issue_comment,922,nilearn,nilearn,bthirion,2015-12-18 21:57:45,"The issue is that the image that you provided is 4D (with the last dimension=1). if you remove the last dimension form your image, it is OK.
plotting.find_xyz_cut_coords(nib.four_to_three(nib.load('dmpfc-3.nii'))[0])

Should we support this kind of case ?
",,,the issu imag provid 4D last dimension1 remov last dimens form imag OK plottingfindxyzcutcoordsnibfourtothreenibloaddmpfc3nii0 should support kind case
issue_comment,922,nilearn,nilearn,banilo,2015-12-19 22:28:17,"Ok, merci pour le conseil.

It would be nice to support the case because the 3D and Pseudo-4D images contain the same information and the optimal x, y and z cut planes can be expected to be the same. That appears intuitive to me.
",,,Ok merci pour le conseil It would nice support case 3D pseudo4d imag contain inform optim x z cut plane expect that appear intuit
issue_comment,922,nilearn,nilearn,GaelVaroquaux,2015-12-20 14:02:45,"These days it is exposed to the public. We should probably add a checker
in the input. Is there a downside?
",,,these day expos public We probabl add checker input Is downsid
issue_comment,922,nilearn,nilearn,GaelVaroquaux,2015-12-20 14:08:17,"> Well, a small computational overhead because we check the input data,

It's probably tiny compared to the time of the funtion.

@banilo: do you want to do a PR?
",,,it probabl tini compar time funtion banilo want PR
issue_comment,922,nilearn,nilearn,banilo,2015-12-20 14:13:21,"Sure, I'd be happy to.

As the find_\* function is probably typically called for plotting, it should
not be called excessively and thus not typically cause a big overhead.

2015-12-20 15:08 GMT+01:00 Gael Varoquaux notifications@github.com:

> > Well, a small computational overhead because we check the input data,
> 
> It's probably tiny compared to the time of the funtion.
> 
> @banilo: do you want to do a PR?
> 
> â€”
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/922#issuecomment-166119067.
",,,sure Id happi As find function probabl typic call plot call excess thu typic caus big overhead 20151220 1508 gmt0100 gael varoquaux notificationsgithubcom
issue_comment,922,nilearn,nilearn,banilo,2016-01-08 22:07:40,"I will do it this weekend
",,,I weekend
