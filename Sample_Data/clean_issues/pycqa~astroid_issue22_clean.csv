rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text
rectype,issueid,project_owner,project_name,actor,time,text,action,title,text
issue_title,22,pycqa,astroid,pylint-bot,2014-03-22 15:00:36,"Originally reported by: **Cole Robinson (BitBucket: [crobinso](http://bitbucket.org/crobinso), GitHub: @crobinso?)**

---

Newer pyobject uses some local class FunctionInfo to export functions, and the pygi brain module doesn't handle it. So there's tons of no-member warnings

This patch alters the inspection to fallback to assuming anything 'callable' is a function, and everything left over is a constant. The latter bit fixes some issues I see using Gdk constants

---
- Bitbucket: https://bitbucket.org/logilab/astroid/issue/22
",start issue,[PATCH] brain: pygi: Fix function inspection on newer pygobject,origin report cole robinson bitbucket crobinso github crobinso newer pyobject use local class functioninfo export function pygi brain modul doesnt handl So there ton nomemb warn thi patch alter inspect fallback assum anyth callabl function everyth left constant the latter bit fix issu I see use gdk constant bitbucket
issue_closed,22,pycqa,astroid,pylint-bot,2015-12-09 05:51:54,,closed issue,[PATCH] brain: pygi: Fix function inspection on newer pygobject,
issue_comment,22,pycqa,astroid,pylint-bot,2014-03-24 06:34:58,"_Original comment by_ **Sylvain Thénault (BitBucket: [sthenault](http://bitbucket.org/sthenault), GitHub: @sthenault?)**:

---

Hi,

could you please submit this as a pull request on the pylint-brain project ? (https://bitbucket.org/logilab/pylint-brain/) 

Also, you may be interested in https://bitbucket.org/logilab/pylint-brain/issue/4/py2gi-rewrite-using-the-living-object if you have some time to spend on this :)
",,,origin comment sylvain thénault bitbucket sthenault github sthenault Hi could pleas submit pull request pylintbrain project also may interest time spend
issue_comment,22,pycqa,astroid,pylint-bot,2014-03-24 13:41:39,"_Original comment by_ **Cole Robinson (BitBucket: [crobinso](http://bitbucket.org/crobinso), GitHub: @crobinso?)**:

---

Okay, should the pull request be against astroid or brain? honestly the split confuses me at this point (this is where something like a git submodule would help...)
",,,origin comment cole robinson bitbucket crobinso github crobinso okay pull request astroid brain honestli split confus point someth like git submodul would help
issue_comment,22,pycqa,astroid,pylint-bot,2014-03-24 13:55:16,"_Original comment by_ **Sylvain Thénault (BitBucket: [sthenault](http://bitbucket.org/sthenault), GitHub: @sthenault?)**:

---

this should go to pylint-brain, as everything under astroid/brain. While it
would be nice, Unfortunatly I don't think bitbucket support subrepos.
",,,origin comment sylvain thénault bitbucket sthenault github sthenault go pylintbrain everyth astroidbrain while would nice unfortunatli I dont think bitbucket support subrepo
issue_comment,22,pycqa,astroid,pylint-bot,2014-03-31 22:03:51,"_Original comment by_ **Cole Robinson (BitBucket: [crobinso](http://bitbucket.org/crobinso), GitHub: @crobinso?)**:

---

I submitted a pull request, let's follow up there.

https://bitbucket.org/logilab/pylint-brain/pull-request/15/brain-couple-gobject-introspection-fixes/diff
",,,origin comment cole robinson bitbucket crobinso github crobinso I submit pull request let follow
issue_comment,22,pycqa,astroid,pylint-bot,2014-04-08 10:11:23,"_Original comment by_ **Sylvain Thénault (BitBucket: [sthenault](http://bitbucket.org/sthenault), GitHub: @sthenault?)**:

---

backport gi related changes from pylint-brain, closes #19 and #22
",,,origin comment sylvain thénault bitbucket sthenault github sthenault backport gi relat chang pylintbrain close 19 22
