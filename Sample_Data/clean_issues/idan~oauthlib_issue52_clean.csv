rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text
rectype,issueid,project_owner,project_name,actor,time,text,action,title,text
issue_title,52,idan,oauthlib,tikitu,2012-08-23 12:47:52,"Let me preface this with a disclaimer: I'm learning OAuth (1.0) by implementing a provider using this library, so I might just be misunderstanding something: please set me straight if necessary.

It seems to me as if implementing realms in the ""get request token"" flow will require verify_request to have some nasty side effects, which will mean that Server instances are not thread-safe. If this is correct it is rather a shame, since the rest of the library is very cleanly implemented. (I can't say for sure that other flows are thread-safe since I haven't got to implementing them yet. I don't see any reason they shouldn't be though.)

Here's what I think happens: the `verify_
",start issue,"Nasty side effects needed for realms in ""get request token"" flow",let prefac disclaim Im learn oauth 10 implement provid use librari I might misunderstand someth pleas set straight necessari It seem implement realm get request token flow requir verifyrequest nasti side effect mean server instanc threadsaf If correct rather shame sinc rest librari cleanli implement I cant say sure flow threadsaf sinc I havent got implement yet I dont see reason shouldnt though here I think happen
issue_closed,52,idan,oauthlib,tikitu,2012-08-23 12:58:30,,closed issue,"Nasty side effects needed for realms in ""get request token"" flow",
issue_comment,52,idan,oauthlib,tikitu,2012-08-23 12:58:30,"1. Accidentally hit enter while editing. Sorry.
2. Having finishing writing what I meant to say, I've figured out what I should be doing (calling `get_signature_type_and_params()` again outside of `verify_request()`, and taking the realm from there). A second time sorry.

Closing the issue.
",,,1 accident hit enter edit sorri 2 have finish write I meant say ive figur I call outsid take realm A second time sorri close issu
