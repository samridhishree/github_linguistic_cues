rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text
rectype,issueid,project_owner,project_name,actor,time,text,action,title,text
issue_title,64,pycqa,astroid,pylint-bot,2014-11-28 20:39:00,"Originally reported by: **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**

---

We should understand the following function calls and map them to their syntactic counterpart.

```
#!python

list([4, 5, 6])
set((1, 2, 3))
tuple(('a', 'b', 'c')
frozenset({1: 2})
dict(a=4, b=5)
```

Currently, astroid understand list/set/tuple calls without heterogenous elements and only with const nodes. Using tuple(('a', tuple(list([4]))) might not work right now, for instance.
The tricky part is the frozenset, which can't be mapped to a Set and it doesn't have an equivalent AST node.

---
- Bitbucket: https://bitbucket.org/logilab/astroid/issue/64
",start issue,Add support for builtin constructors,origin report claudiu popa bitbucket pcmanticor github pcmanticor We understand follow function call map syntact counterpart current astroid understand listsettupl call without heterogen element const node use tuplea tuplelist4 might work right instanc the tricki part frozenset cant map set doesnt equival ast node bitbucket
issue_closed,64,pycqa,astroid,PCManticore,2016-02-18 22:03:24,,closed issue,Add support for builtin constructors,
issue_comment,64,pycqa,astroid,PCManticore,2016-02-18 22:03:24,"Not sure why this is still open. We do support frozensets for a while now.
",,,not sure still open We support frozenset
