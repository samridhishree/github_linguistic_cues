rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text
rectype,issueid,project_owner,project_name,actor,time,text,action,title,text
issue_title,189,pycqa,astroid,pylint-bot,2015-09-21 17:05:06,"Originally reported by: **BitBucket: [ceridwenv](http://bitbucket.org/ceridwenv), GitHub: @ceridwen**

---

There is a PEP, https://www.python.org/dev/peps/pep-0473/, sadly languishing in obscurity, that proposes making Python exceptions structured rather than the way they are at the moment, where contextual information is included in the message, if at all.  For custom exceptions, I don't see any reason not to implement the idea right now, to make it easier to extract information from exceptions and to include more context.

---
- Bitbucket: https://bitbucket.org/logilab/astroid/issue/189
",start issue,Make astroid exceptions structured,origin report bitbucket ceridwenv github ceridwen there pep sadli languish obscur propos make python except structur rather way moment contextu inform includ messag for custom except I dont see reason implement idea right make easier extract inform except includ context bitbucket
issue_closed,189,pycqa,astroid,pylint-bot,2015-12-09 05:54:50,,closed issue,Make astroid exceptions structured,
issue_comment,189,pycqa,astroid,pylint-bot,2015-09-21 17:13:21,"_Original comment by_ **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**:

---

Do you have anything in mind? e.g. what kind of changes they will need. It sounds good for me, we'll need to find the proper information type that we need to put into the exceptions.
",,,origin comment claudiu popa bitbucket pcmanticor github pcmanticor Do anyth mind eg kind chang need It sound good well need find proper inform type need put except
issue_comment,189,pycqa,astroid,pylint-bot,2015-09-21 20:40:00,"_Original comment by_ **BitBucket: [ceridwenv](http://bitbucket.org/ceridwenv), GitHub: @ceridwen**:

---

I'd have to study the exceptions to come up with complete ideas, but one basic approach is to take the information that's currently being put in strings, break it out into other attributes of the exception, and then have the exception have some kind of `__str__`/`__repr__` that returns the formatted string for display in stack traces.
",,,origin comment bitbucket ceridwenv github ceridwen Id studi except come complet idea one basic approach take inform that current put string break attribut except except kind return format string display stack trace
issue_comment,189,pycqa,astroid,pylint-bot,2015-11-06 17:15:02,"_Original comment by_ **BitBucket: [ceridwenv](http://bitbucket.org/ceridwenv), GitHub: @ceridwen**:

---

e17cea5afccd finishes finishes the structured exceptions patch, adding lazy message generation, handling of keyword arguments to astroid exceptions, and some general improvements to exceptions.
",,,origin comment bitbucket ceridwenv github ceridwen e17cea5afccd finish finish structur except patch ad lazi messag gener handl keyword argument astroid except gener improv except
