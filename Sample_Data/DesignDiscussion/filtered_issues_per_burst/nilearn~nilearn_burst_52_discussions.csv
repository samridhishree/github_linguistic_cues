Unnamed: 0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
6,pull_request_commit_comment,498,nilearn,nilearn,AlexandreAbraham,2015-03-17 09:58:56,"As this function is common to {,Multi}NiftiMasker, you should probably put it in BaseMasker to avoid code duplication.
",085bf4aee5c4aa47679fa3f34e96beaf573459d7,"(None, '', u'nilearn/input_data/multi_nifti_masker.py')"
5,issue_comment,498,nilearn,nilearn,banilo,2015-03-17 12:24:57,"Ok, refactor the check_fitted() to BaseMasker. Thanks for the advice. I left the tests in the derived 2 classes, however.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,495,nilearn,nilearn,GaelVaroquaux,2015-03-12 09:42:35,"Care should be taken addressing this issue: this is nibabel jargon that will not mean anything to 99% of users.  We should not let this make our docs harder to understand or scare users. 

Sent from my phone. Please forgive brevity and mis spelling

On Mar 12, 2015, 09:52, at 09:52, Alexandre Abraham notifications@github.com wrote:

> Related to #478. Must be done after #483.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/495
",nan,nan
4,issue_comment,495,nilearn,nilearn,AlexandreAbraham,2015-03-12 10:29:51,"I think that we should say to the users that we accept any format read by nibabel. The, in a (wiki) developper page, precise that any type derived from SpatialImage is accepted. We could also enlarge that to any type compatible with spatialimage (get_data, get_affine, get_header, to_filename...).
",nan,nan
5,issue_comment,495,nilearn,nilearn,GaelVaroquaux,2015-03-12 12:09:03,"> I think that we should say to the users that we accept any format read by
> nibabel.

Just say 'formats read by nibabel' without 'any'. That way it is vague.
In a footnote be more precise.
",nan,nan
6,issue_comment,495,nilearn,nilearn,AlexandreAbraham,2015-06-01 08:51:27,"Since we don't really know if we accept all formats, I suggest that we stick to Nifti1Image for the moment. See #579 for further developments.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,496,nilearn,nilearn,GaelVaroquaux,2015-03-13 06:22:35,"I would use the NiftiMapsMasker or NiftiLabelsMasker depending on whether
you have probabilistic segmentations or hard masks to describe csf + wm.
",nan,nan
5,issue_comment,496,nilearn,nilearn,AlexandreAbraham,2015-03-13 08:38:05,"What are you trying to do exactly? The solution provided by Gael will give you the mean of the signal in the wm/csf masks. If you want to consider them and regress them out, then you should use a NiftiMasker to mask WM (resp. CSF) data ans then use `image.high_variance_confounds`. Also, it is better to have your own WM/CSF masks, but if you don't, you can use `datasets.fetch_icbm152_2009` to generic ones.
",nan,nan
6,issue_comment,496,nilearn,nilearn,juhuntenburg,2015-03-13 09:17:02,"Thanks for the quick replies! Yes, I want to use the wm and csf signal as confound regressors, but also the highest variance signal (similar to both acompcor and tcompcor in Behzadi 2007). So you would just run image.high_variance_confounds once on the unmasked data and then again on only wm/csf regions?
",nan,nan
7,issue_comment,496,nilearn,nilearn,AlexandreAbraham,2015-03-19 12:57:42,"Yes. You should mask your data using a WM mask, extract hv confounds on it and use them as confounds on your data extracted full brain. Feel free to close the issue if you think that you had the answer to your question ;)
",nan,nan
8,issue_comment,496,nilearn,nilearn,juhuntenburg,2015-03-21 08:05:31,"Thanks, but not sure if I understand you right: my question is whether it makes sense to extract hv confounds both on the complete data (similart to tcompcor) and additionally on the wm/csf masked data (similar to acompcor)? But I admit this might not strictly be a nilearn question.. 
",nan,nan
4,issue_comment,496,nilearn,nilearn,GaelVaroquaux,2015-03-21 18:38:42,"Hi Julia,

I must admit that I have no strong opinion. In a way, it is not
meaningless to extract also on a WM mask. But in another way, compcorr on
the full image should also get these signals.
",nan,nan
9,issue_comment,496,nilearn,nilearn,juhuntenburg,2015-03-22 09:51:46,"Hi Gael, yes, that is basically what I was thinking about, too. Also, that I would have twice as many regressors if I extract e.g. 5 components without and with mask. But I see there is probably no definite answer. 

Thanks for your helpful comments, both of you, though!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,490,nilearn,nilearn,AlexandreAbraham,2015-03-05 21:48:41,"As a sidenote, we could support SpatialImage type from nibabel (that supersedes Nifti1, Nifti2, Analyze...).
",nan,nan
4,issue_comment,490,nilearn,nilearn,GaelVaroquaux,2015-03-05 21:49:19,"> As a sidenote, we could support SpatialImage type from nibabel (that
> supersedes Nifti1, Nifti2, Analyze...).

Yes. Agreed.
",nan,nan
5,issue_comment,490,nilearn,nilearn,AlexandreAbraham,2015-04-08 08:48:21,"As nibabel functions do not exactly what we do (lazy loading, etc), I close this issue.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,491,nilearn,nilearn,GaelVaroquaux,2015-03-10 13:22:58,"Failing tests 
",nan,nan
6,issue_comment,491,nilearn,nilearn,lesteve,2015-03-10 15:36:44,"Also can you rebase on master so we get the coverage and the python 3 support?
",nan,nan
7,issue_comment,491,nilearn,nilearn,GaelVaroquaux,2015-03-10 16:47:17,"LGTM. Thanks.
",nan,nan
8,issue_comment,491,nilearn,nilearn,lesteve,2015-03-10 16:55:10,"Could you add a smoke test too, an adjacency_matrix like:

```
np.array([
    [1., np.nan, 0.],
    [np.nan, 1., 0.],
    [np.nan, 0., 1.]])
```

should be fine.
",nan,nan
9,issue_comment,491,nilearn,nilearn,banilo,2015-03-11 15:30:50,"I added the nan-test. Your suggestion however would be a test for lacking symmetry :-P
",nan,nan
10,issue_comment,491,nilearn,nilearn,lesteve,2015-03-11 15:38:31,"> Your suggestion however would be a test for lacking symmetry :-P

That was on purpose, since this is a edge case we happen to be supporting...
",nan,nan
11,issue_comment,491,nilearn,nilearn,banilo,2015-03-11 15:40:04,"It does give a not-symmetric error. Is that intended?

2015-03-11 16:38 GMT+01:00 Loïc Estève notifications@github.com:

> Your suggestion however would be a test for lacking symmetry :-P
> 
> That was on purpose, since this is a edge case we happen to be
> supporting...
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/491#issuecomment-78288309.

## 

Viele Grüße,
Danilo
",nan,nan
12,issue_comment,491,nilearn,nilearn,lesteve,2015-03-11 17:43:42,"> It does give a not-symmetric error. Is that intended? 

:confused: I was naively expecting that the nan_to_num conversion would make the adjacency matrix symmetrix. 
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,492,nilearn,nilearn,lesteve,2015-03-10 17:13:32,"Just double-checking: can people see that: https://landscape.io/github/nilearn/nilearn?

If yes I close this issue.
",nan,nan
4,issue_comment,492,nilearn,nilearn,AlexandreAbraham,2015-03-10 17:14:55,"I can see it.
",nan,nan
5,issue_comment,492,nilearn,nilearn,lesteve,2015-03-10 17:15:47,"> I can see it.

Thanks.
",nan,nan
6,issue_comment,492,nilearn,nilearn,GaelVaroquaux,2015-03-10 17:16:24,"> Just double-checking: can people see that:
> https://landscape.io/github/nilearn/ nilearn?

I can see that.

I scikit-learn, the way we have it set up, it adds a report to the PRs,
like travis, which is awesome. It would be great if someone could port
that to nilearn.
",nan,nan
7,issue_comment,492,nilearn,nilearn,lesteve,2015-03-10 17:51:06,"> I scikit-learn, the way we have it set up, it adds a report to the PRs, like travis, which is awesome

I think it should be set-up for nilearn too. It doesn't seem to be working very well for scikit-learn at the moment though https://github.com/scikit-learn/scikit-learn/pull/4372#issuecomment-78054010 ...

From a little bit of reading it looks like:
1. the landscape report is done as a comment. When the same thing was enabled for coveralls, people were pretty annoyed by the automatic emails that ensued each time somebody pushed into a PR branch.
2. there is a landscape.io github [issue](https://github.com/landscapeio/landscape-issues/issues/108) about using the github status API which is far less intrusive but not sure how likely this is going to happen in the near future.
",nan,nan
8,issue_comment,492,nilearn,nilearn,GaelVaroquaux,2015-03-10 17:52:00,"> 1. there is a landscape.io github issue about using the github status API
>    which is far less intrusive but not sure how likely this is going to happen
>    in the near future.

OK, let's wait then.
",nan,nan
9,issue_comment,492,nilearn,nilearn,amueller,2015-03-10 19:10:51,"We'll see how annoying the comments get once they are enabled ;)
",nan,nan
10,issue_comment,492,nilearn,nilearn,GaelVaroquaux,2015-03-10 22:06:18,"> We'll see how annoying the comments get once they are enabled ;)

Hey Andy, you are here too :). You are everywhere :)
",nan,nan
11,issue_comment,492,nilearn,nilearn,amueller,2015-03-19 02:38:49,"Currently I feel the bot is having too many issues to be very useful.
",nan,nan
12,issue_comment,492,nilearn,nilearn,GaelVaroquaux,2015-03-19 06:39:46,"> Currently I feel the bot is having too many issues to be very useful.

It's noisy indeed.
",nan,nan
13,issue_comment,492,nilearn,nilearn,lesteve,2015-03-19 07:46:58,"> Currently I feel the bot is having too many issues to be very useful.

Thanks for letting us know. FWIW the bot comments have been disabled for nilearn a few days ago.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,493,nilearn,nilearn,landscape-bot,2015-03-11 15:22:15,"[![Code Health](https://landscape.io/badge/123759/landscape.svg?style=flat)](https://landscape.io/diff/109390)
Repository health decreased by 0.01% when pulling **[f0f6456](https://github.com/banilo/nilearn/commit/f0f6456be99bcb195a0aef2d0b9b9f64c1e3a7ab) on banilo:data_descr2** into **[9c65ff2](https://github.com/nilearn/nilearn/commit/9c65ff27a138bbc9f8de46999baf4a7d19ef1b27) on nilearn:master**.
- [1 new problem was found](https://landscape.io/diff/109390) (including 0 errors and 0 code smells).
- No problems were fixed.
",nan,nan
20,pull_request_commit_comment,493,nilearn,nilearn,AlexandreAbraham,2015-03-11 16:22:26,"This could be a module scope variable.
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
21,pull_request_commit_comment,493,nilearn,nilearn,AlexandreAbraham,2015-03-11 16:24:33,"A good practice would be to use ""<dataset_name>.rst"" as name (here craddock_2011) and create a function to get directly the rst content.
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
6,issue_comment,493,nilearn,nilearn,landscape-bot,2015-03-12 18:16:53,"[![Code Health](https://landscape.io/badge/124600/landscape.svg?style=flat)](https://landscape.io/diff/110284)
Repository health decreased by 0.06% when pulling **[55e14b6](https://github.com/banilo/nilearn/commit/55e14b67d1daa669b2581403c6d5f282eff100dc) on banilo:data_descr2** into **[9c65ff2](https://github.com/nilearn/nilearn/commit/9c65ff27a138bbc9f8de46999baf4a7d19ef1b27) on nilearn:master**.
- [1 new problem was found](https://landscape.io/diff/110284) (including 0 errors and 1 code smell).
- No problems were fixed.
",nan,nan
22,pull_request_commit_comment,493,nilearn,nilearn,banilo,2015-03-12 18:17:54,"Year, realized this one!
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
23,pull_request_commit_comment,493,nilearn,nilearn,AlexandreAbraham,2015-03-13 08:40:12,"Again, please use the unique name given to each dataset.
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
7,issue_comment,493,nilearn,nilearn,AlexandreAbraham,2015-03-13 08:40:39,"You should fix the error raised by landscape.
",nan,nan
8,issue_comment,493,nilearn,nilearn,landscape-bot,2015-03-13 13:49:31,"[![Code Health](https://landscape.io/badge/125048/landscape.svg?style=flat)](https://landscape.io/diff/110762)
Repository health decreased by 0.06% when pulling **[3e98a94](https://github.com/banilo/nilearn/commit/3e98a94ee0e4b72fe8f6fd228e57a4871b173919) on banilo:data_descr2** into **[9c65ff2](https://github.com/nilearn/nilearn/commit/9c65ff27a138bbc9f8de46999baf4a7d19ef1b27) on nilearn:master**.
- [1 new problem was found](https://landscape.io/diff/110762) (including 0 errors and 1 code smell).
- No problems were fixed.
",nan,nan
9,issue_comment,493,nilearn,nilearn,landscape-bot,2015-03-13 14:22:21,"[![Code Health](https://landscape.io/badge/125080/landscape.svg?style=flat)](https://landscape.io/diff/110791)
Repository health decreased by 0.07% when pulling **[e32ab15](https://github.com/banilo/nilearn/commit/e32ab15e0b7159231268ec5e04051c8e6aa60394) on banilo:data_descr2** into **[9c65ff2](https://github.com/nilearn/nilearn/commit/9c65ff27a138bbc9f8de46999baf4a7d19ef1b27) on nilearn:master**.
- [2 new problems were found](https://landscape.io/diff/110791) (including 0 errors and 1 code smell).
- No problems were fixed.
",nan,nan
10,issue_comment,493,nilearn,nilearn,banilo,2015-03-13 14:37:08,"Ok, just updated this one!
",nan,nan
11,issue_comment,493,nilearn,nilearn,lesteve,2015-03-13 14:51:37,"> Ok, just updated this one!

Failing tests, something related with craddock_**2011** vs craddock_**2012**
",nan,nan
12,issue_comment,493,nilearn,nilearn,lesteve,2015-03-13 15:09:33,"BTW I disabled landscape-bot commenting on the issues. Shout if you really want it back !
",nan,nan
13,issue_comment,493,nilearn,nilearn,landscape-bot,2015-03-13 15:10:23,"[![Code Health](https://landscape.io/badge/125106/landscape.svg?style=flat)](https://landscape.io/diff/110818)
Repository health decreased by 0.07% when pulling **[b0d77f8](https://github.com/banilo/nilearn/commit/b0d77f851662bade4a0b503746d30455b558cb57) on banilo:data_descr2** into **[41639af](https://github.com/nilearn/nilearn/commit/41639af33362616ccd3392752fe216aaf582db90) on nilearn:master**.
- [2 new problems were found](https://landscape.io/diff/110818) (including 0 errors and 1 code smell).
- No problems were fixed.
",nan,nan
24,pull_request_commit_comment,493,nilearn,nilearn,lesteve,2015-03-16 07:57:40,"@AlexandreAbraham for consistency reasons, should we change 2011 to 2012 in nitrc too? I guess we'd want to keep the old (i.e. 2011) naming for a while for backward compatibility reasons ...
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
25,pull_request_commit_comment,493,nilearn,nilearn,lesteve,2015-03-16 07:58:07,"You probably want to use warning.warn rather than a print statement
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
26,pull_request_commit_comment,493,nilearn,nilearn,lesteve,2015-03-16 08:06:50,"Hmmm maybe not. This [page](http://www.nitrc.org/projects/cluster_roi/) by the authors has Craddock **2011**: 

![craddock_2011](https://cloud.githubusercontent.com/assets/1680079/6662423/ac33ee6e-cbbb-11e4-984d-3ec9842357d9.png)
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
27,pull_request_commit_comment,493,nilearn,nilearn,lesteve,2015-03-16 08:27:21,"I find these things easier to read with a dict:

``` python

dataset_to_filename = {
    'yeo_2011': 'yeo',
    'craddock_2012': 'craddock',
    .
    .
    .
    }

fname = dataset_to_filename.get(ds_name, '')
```
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
28,pull_request_commit_comment,493,nilearn,nilearn,lesteve,2015-03-16 08:30:52,"You probably want to use something like OSError here.
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
29,pull_request_commit_comment,493,nilearn,nilearn,AlexandreAbraham,2015-03-16 09:51:29,"This should not exist. The name of the files should be the name of the dataset.
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
30,pull_request_commit_comment,493,nilearn,nilearn,AlexandreAbraham,2015-03-16 09:52:24,"I used the year specified on NITRC but @banilo is right when he says that the paper has been published in 2012. Let's ask @GaelVaroquaux to take the final decision ;)
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
31,pull_request_commit_comment,493,nilearn,nilearn,banilo,2015-03-16 09:53:56,"> @AlexandreAbraham for consistency reasons, should we change 2011 to 2012 in nitrc too? I guess we'd want to keep the old (i.e. 2011) naming for a while for backward compatibility reasons ...

Does not matter - that is just some website. We should use the date when the paper in qeustion has been actually published in the physical world - and that is 2012. The delay is probably explained by the difference between paper accept and publish date.
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
32,pull_request_commit_comment,493,nilearn,nilearn,AlexandreAbraham,2015-03-17 10:42:47,"I'm not a big fan of exclamation mark in error messages. Is it necessary?
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
33,pull_request_commit_comment,493,nilearn,nilearn,banilo,2015-03-17 12:32:53,"Good point.
:octocat: 
",f3b90db9af4c13bffb4730d4a1622d96c68b2079,"(None, '', u'nilearn/datasets.py')"
14,issue_comment,493,nilearn,nilearn,banilo,2015-03-17 13:10:14,":octocat: says ""Merge this one!""
",nan,nan
15,issue_comment,493,nilearn,nilearn,banilo,2015-03-17 13:15:11,":camel: says ""Octocat is right.""
",nan,nan
16,issue_comment,493,nilearn,nilearn,banilo,2015-03-17 13:15:40,":neckbeard: : ""totally!""
",nan,nan
17,issue_comment,493,nilearn,nilearn,banilo,2015-03-17 13:16:39,":family: : ""We could not agree more.""
",nan,nan
18,issue_comment,493,nilearn,nilearn,AlexandreAbraham,2015-03-17 13:19:29,":wave::cop: Tsssk... No!
",nan,nan
19,issue_comment,493,nilearn,nilearn,banilo,2015-03-17 13:22:02,":rabbit: ""Huh, whhaaattteee?""
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,525,nilearn,nilearn,AlexandreAbraham,2015-03-27 23:45:49,"Hi,
Could you run that in a terminal: `python -c 'import pylab'`. My guess is that you don't have pylab installed. The problem is that we are not supposed to depend on pylab but matplotlib only. @lesteve do you know why we have pylab stuff here?
",nan,nan
4,issue_comment,525,nilearn,nilearn,surchs,2015-03-28 01:16:06,"Yes, there is definitely something wrong

```
Traceback (most recent call last):
  File ""<string>"", line 1, in <module>
  File ""/home/surchs/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/pylab.py"", line 1, in <module>
    from matplotlib.pylab import *
  File ""/home/surchs/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/matplotlib/pylab.py"", line 274, in <module>
    from matplotlib.pyplot import *
  File ""/home/surchs/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/matplotlib/pyplot.py"", line 109, in <module>
    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()
  File ""/home/surchs/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/matplotlib/backends/__init__.py"", line 32, in pylab_setup
    globals(),locals(),[backend_name],0)
  File ""/home/surchs/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/matplotlib/backends/backend_wxagg.py"", line 10, in <module>
    from . import backend_wx    # already uses wxversion.ensureMinimal('2.8')
  File ""/home/surchs/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/matplotlib/backends/backend_wx.py"", line 76, in <module>
    raise ImportError(missingwx)
ImportError: Matplotlib backend_wx and backend_wxagg require wxPython >=2.8
```
",nan,nan
5,issue_comment,525,nilearn,nilearn,AlexandreAbraham,2015-03-28 01:26:05,"This is very weird... Does pylab in Canopy uses wxagg backend by default? @lesteve @GaelVaroquaux, we may have to add a canopy build in Travis if they have a special default matplotlib configuration.
",nan,nan
6,issue_comment,525,nilearn,nilearn,surchs,2015-03-29 03:46:39,"I don't know but I found [this thing](https://support.enthought.com/hc/en-us/articles/204469930-wxPython-2-8-and-2-9) which seems to adress my specific issue. I will see if that fixes it.
",nan,nan
7,issue_comment,525,nilearn,nilearn,surchs,2015-03-29 04:01:15,"Ok, I imagine this is what you referred to but [changing my default backend to qt](http://matplotlib.org/users/customizing.html#matplotlibrc-sample) fixed my problem - it seems that there are some issues with wxpython and Canopy.
",nan,nan
8,issue_comment,525,nilearn,nilearn,lesteve,2015-03-29 19:02:21,"> @lesteve do you know why we have pylab stuff here?

No reason other than historical ones I reckon, it'd be good to change `import pylab` by `import matplotlib.pyplot as plt` which is probably recommended anyway.
",nan,nan
9,issue_comment,525,nilearn,nilearn,AlexandreAbraham,2015-04-08 22:39:47,"Pylab has been removed.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,450,nilearn,nilearn,GaelVaroquaux,2015-02-20 19:15:59,"> Note that this happens with plot if i use matplotlib.pyplot.plot(..)
> instead of ax1.plot(..). So I suspect the fix is to reference plotting
> functions off the given axis, rather than from pyplot.

Well, it's more complicated than this, since we create separate axis
inside the axis you give. The way this should probably be done is to grab
the figure handle corresponding to the axis you give, use this figure
handle to create the new axes, and then hopeful everything would work.

Do you want to try and implement this?
",nan,nan
4,issue_comment,450,nilearn,nilearn,bcipolli,2015-02-20 19:21:28,"> Do you want to try and implement this?

Thanks for the tips, and very relevant--I'm hitting issues in this code with the way axes are being generated (causing matplotlib to throw errors).

I'll give it a try and update here if I'm able to use this info to overcome the current issue I've hit (using `plot_stat_map` in a subplot, passing the `axes` parameter).
",nan,nan
5,issue_comment,450,nilearn,nilearn,AlexandreAbraham,2015-02-22 14:45:51,"Fixed in #451 
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
7,issue_comment,346,nilearn,nilearn,banilo,2015-01-09 10:17:37,"Cool!
",nan,nan
3,issue_comment,346,nilearn,nilearn,eickenberg,2015-01-09 10:18:06,"I confirm -- 1024 works, 1025 segfaults. Thanks for isolating!
",nan,nan
4,issue_comment,346,nilearn,nilearn,eickenberg,2015-01-09 10:20:09,"`np.log2(64 * 64 * 64 * 1024) == 28`
",nan,nan
5,issue_comment,346,nilearn,nilearn,eickenberg,2015-01-09 10:28:54,"With `shape_in == (32, 64, 64)`, @lesteve and I both find segfault at 2115, works at 2114
",nan,nan
6,issue_comment,346,nilearn,nilearn,eickenberg,2015-01-09 10:43:57,"With `shape_in == (64, 32, 64)` it segfaults at 2050 ...
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,401,nilearn,nilearn,banilo,2015-02-27 13:05:30,"Have we not addressed this issue in
https://github.com/nilearn/nilearn/blame/master/nilearn/datasets.py#L1569
?
",nan,nan
4,issue_comment,401,nilearn,nilearn,AlexandreAbraham,2015-02-27 13:14:05,"No because FSL_DIR is not set by default on most setup. Thus we should explore some hardcoded absolute paths.
",nan,nan
5,issue_comment,401,nilearn,nilearn,AlexandreAbraham,2015-04-17 07:37:30,"Closing in favor of #486.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,409,nilearn,nilearn,eickenberg,2015-02-05 21:56:29,"https://github.com/nilearn/nilearn/pull/412

Yeah that exception didn't make sense at all. It was actually migrated from a public function `plot_stat_map` to a private part and thus caused this weirdness.
",nan,nan
4,issue_comment,409,nilearn,nilearn,lesteve,2015-02-06 09:21:29,"Fixed via #412.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,408,nilearn,nilearn,AlexandreAbraham,2015-02-09 12:53:26,"As said in another thread, using _template_ matplotlib backend may speed things up a little bit. Not sure how much though.
",nan,nan
6,issue_comment,408,nilearn,nilearn,AlexandreAbraham,2015-02-10 14:30:17,"Quick test during the parietal meeting: by replaceing the backend by `template`, closing each figure just after it is opened (and not letting dozens of figures opened before closing them all) and using rasterized=True option on the axis in `test_plot_img_functions`, I dropped from 58 seconds to 46 seconds. I'm not sure of which modification led to that.

Question: can't we test `plot_img` completely and then mock it? Or maybe mock pyplot if we just want to test the logic of the plot functions and not the actual plotting?
",nan,nan
3,issue_comment,408,nilearn,nilearn,GaelVaroquaux,2015-02-10 14:38:10,"-1 for mocking. 

Sent from my phone. Please forgive brevity and mis spelling

On Feb 10, 2015, 15:30, at 15:30, Alexandre Abraham notifications@github.com wrote:

> Quick test during the parietal meeting: by replaceing the backend by
> `template`, closing each figure just after it is opened (and not
> letting dozens of figures opened before closing them all) and using
> rasterized=True option on the axis in `test_plot_img_functions`, I
> dropped from 58 seconds to 46 seconds. I'm not sure of which
> modification led to that.
> 
> Question: can't we test `plot_img` completely and then mock it? Or
> maybe mock pyplot if we just want to test the logic of the plot
> functions and not the actual plotting?
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/408#issuecomment-73707713
",nan,nan
7,issue_comment,408,nilearn,nilearn,AlexandreAbraham,2015-02-10 23:51:04,"What about using something like nosetests --processes=8?
",nan,nan
8,issue_comment,408,nilearn,nilearn,AlexandreAbraham,2015-02-11 15:32:33,"A few comments:
- nosetests --processes=8 can speed up tests. However, it parallelizes tests wrt files. In our case, the longest test shoudl be split into several files. Also, Travis machines have 1 or 2 cores, meaning that the speedup will not be significant.
- removing coverage speeds up tests too. However,  I've noticed that coverage is not enabled on Travis.
  So, I have no idea how to speed things up except by removing some of the tests.
",nan,nan
4,issue_comment,408,nilearn,nilearn,GaelVaroquaux,2015-02-11 16:56:12,">   • nosetests --processes=8

That's not solving the problem. That's hidding it.

>   • removing coverage speeds up tests too.

Maybe we should do that. However, we still need to work on making tests
faster.
",nan,nan
9,issue_comment,408,nilearn,nilearn,lesteve,2015-02-12 09:51:24,"I think the best thing to do is to split test_plot_functions into multiple tests. I think we can avoid a few plots in the doubly nested loops (for example it isn't really crucial to test that plot_anat or plot_glass_brain works with negative and positive images and same thing for saving to .png a few times for every different flavors of plot_stat_map, etc ...)

@eickenberg nicely volunteered for it.

For completeness, here is the profiling info for running nose restricted to test_plot_functions only. I didn't spot anything obvious, but maybe somebody else will:

```
         32667948 function calls (32273609 primitive calls) in 49.387 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      2/1    0.000    0.000   49.387   49.387 site-packages/nose/suite.py:176(__call__)
      2/1    0.000    0.000   49.387   49.387 site-packages/nose/suite.py:197(run)
        1    0.000    0.000   49.386   49.386 site-packages/nose/case.py:44(__call__)
        1    0.000    0.000   49.386   49.386 site-packages/nose/case.py:115(run)
        1    0.000    0.000   49.386   49.386 site-packages/nose/case.py:142(runTest)
        1    0.000    0.000   49.386   49.386 unittest/case.py:392(__call__)
        1    0.000    0.000   49.386   49.386 unittest/case.py:295(run)
        1    0.000    0.000   49.386   49.386 site-packages/nose/case.py:196(runTest)
        1    0.004    0.004   49.386   49.386 nilearn/plotting/tests/test_img_plotting.py:61(test_plot_functions)
      125    0.007    0.000   42.294    0.338 nilearn/plotting/img_plotting.py:42(_plot_img_with_bg)
      764    0.033    0.000   39.021    0.051 site-packages/matplotlib/axes/_base.py:328(__init__)
      125    0.002    0.000   34.760    0.278 nilearn/plotting/displays.py:271(init_with_figure)
      125    0.002    0.000   34.485    0.276 nilearn/plotting/displays.py:238(__init__)
     9168    0.117    0.000   33.075    0.004 site-packages/matplotlib/axis.py:725(cla)
      650    0.007    0.000   32.567    0.050 site-packages/matplotlib/figure.py:799(add_axes)
12224/9168    0.069    0.000   32.511    0.004 site-packages/matplotlib/axis.py:760(reset_ticks)
24628/18516    0.437    0.000   32.348    0.002 site-packages/matplotlib/axis.py:67(__init__)
      587    0.004    0.000   29.371    0.050 site-packages/matplotlib/pyplot.py:724(axes)
       72    0.002    0.000   25.137    0.349 nilearn/plotting/img_plotting.py:534(plot_stat_map)
      764    0.046    0.000   24.729    0.032 site-packages/matplotlib/axes/_base.py:816(cla)
    74226    1.477    0.000   21.352    0.000 site-packages/matplotlib/lines.py:249(__init__)
       56    0.005    0.000   19.685    0.352 nilearn/plotting/displays.py:815(_init_axes)
     3056    0.003    0.000   16.476    0.005 site-packages/matplotlib/spines.py:159(cla)
12224/9168    0.026    0.000   16.319    0.002 site-packages/matplotlib/axis.py:1657(_get_tick)
12404/9348    0.029    0.000   16.070    0.002 site-packages/matplotlib/axis.py:1959(_get_tick)
   298344    1.578    0.000   14.885    0.000 site-packages/matplotlib/markers.py:182(_recache)
       69    0.004    0.000   14.793    0.214 nilearn/plotting/displays.py:653(_init_axes)
      764    0.008    0.000   13.585    0.018 site-packages/matplotlib/axes/_base.py:479(_init_axis)
       41    0.000    0.000   10.926    0.266 nilearn/plotting/img_plotting.py:135(plot_img)
   149172    0.594    0.000    8.855    0.000 site-packages/matplotlib/markers.py:229(set_marker)
     3056    0.003    0.000    8.560    0.003 site-packages/matplotlib/spines.py:148(register_axis)
104624/74064    0.199    0.000    8.228    0.000 site-packages/matplotlib/spines.py:389(get_spine_transform)
110736/74064    0.053    0.000    8.062    0.000 site-packages/matplotlib/spines.py:142(_ensure_position_is_set)
     6112    0.038    0.000    8.024    0.001 site-packages/matplotlib/spines.py:349(set_position)
   149172    0.162    0.000    7.427    0.000 site-packages/matplotlib/markers.py:206(set_fillstyle)
   340879    1.152    0.000    6.785    0.000 site-packages/matplotlib/path.py:103(__init__)
      121    0.001    0.000    6.606    0.055 site-packages/matplotlib/pyplot.py:833(subplot)
      121    0.002    0.000    6.553    0.054 site-packages/matplotlib/figure.py:880(add_subplot)
      121    0.002    0.000    6.542    0.054 site-packages/matplotlib/axes/_subplots.py:23(__init__)
    74946    0.174    0.000    6.399    0.000 site-packages/matplotlib/markers.py:148(__init__)
       12    0.000    0.000    6.239    0.520 nilearn/plotting/img_plotting.py:669(plot_glass_brain)
12404/10876    0.077    0.000    5.883    0.001 site-packages/matplotlib/axis.py:528(_get_tick1line)
   778592    1.332    0.000    5.866    0.000 site-packages/matplotlib/transforms.py:85(__init__)
      136    0.003    0.000    5.843    0.043 nilearn/plotting/displays.py:365(add_overlay)
12404/10876    0.074    0.000    5.772    0.001 site-packages/matplotlib/axis.py:544(_get_tick2line)
12224/10696    0.079    0.000    5.655    0.001 site-packages/matplotlib/axis.py:389(_get_tick1line)
12224/10696    0.076    0.000    5.443    0.001 site-packages/matplotlib/axis.py:404(_get_tick2line)
    22481    0.211    0.000    5.400    0.000 site-packages/matplotlib/artist.py:560(set_clip_path)
    74226    0.049    0.000    5.366    0.000 site-packages/matplotlib/lines.py:969(set_marker)
       24    0.003    0.000    5.005    0.209 nilearn/plotting/displays.py:192(__init__)
       24    0.008    0.000    4.994    0.208 nilearn/plotting/glass_brain.py:139(plot_brain_schematics)
    74226    0.050    0.000    4.790    0.000 site-packages/matplotlib/lines.py:452(set_fillstyle)
     1528    0.018    0.000    4.744    0.003 site-packages/matplotlib/axis.py:625(__init__)
       60    0.024    0.000    4.648    0.077 nilearn/plotting/displays.py:475(_colorbar_show)
   340879    1.925    0.000    4.619    0.000 site-packages/matplotlib/path.py:199(_update_values)
   572504    0.656    0.000    4.604    0.000 site-packages/matplotlib/transforms.py:1553(__init__)
   778592    3.586    0.000    4.534    0.000 weakref.py:47(__init__)
       17    0.000    0.000    4.399    0.259 nilearn/plotting/img_plotting.py:311(plot_anat)
114863/46911    0.096    0.000    4.317    0.000 site-packages/matplotlib/axes/_base.py:624(get_yaxis_transform)
     6231    0.027    0.000    4.161    0.001 site-packages/matplotlib/axes/_base.py:1537(add_patch)
    28652    0.082    0.000    4.129    0.000 site-packages/matplotlib/patches.py:185(get_transform)
113243/46011    0.093    0.000    4.026    0.000 site-packages/matplotlib/axes/_base.py:547(get_xaxis_transform)
    12404    0.111    0.000    3.844    0.000 site-packages/matplotlib/axis.py:559(_get_gridline)
   144255    0.125    0.000    3.584    0.000 site-packages/matplotlib/transforms.py:1132(__add__)
    12224    0.110    0.000    3.509    0.000 site-packages/matplotlib/axis.py:420(_get_gridline)
   144255    0.211    0.000    3.407    0.000 site-packages/matplotlib/transforms.py:2350(composite_transform_factory)
       12    0.000    0.000    3.347    0.279 nilearn/plotting/img_plotting.py:388(plot_epi)
     1528    0.009    0.000    3.302    0.002 site-packages/matplotlib/axis.py:858(set_clip_path)
    22421    0.016    0.000    3.207    0.000 site-packages/matplotlib/patches.py:625(get_patch_transform)
    22421    0.198    0.000    3.191    0.000 site-packages/matplotlib/patches.py:609(_update_patch_transform)
   125522    0.369    0.000    3.099    0.000 site-packages/matplotlib/transforms.py:2175(__init__)
   174511    0.223    0.000    2.944    0.000 site-packages/matplotlib/transforms.py:126(invalidate)
     6112    0.013    0.000    2.944    0.000 site-packages/matplotlib/axis.py:175(set_clip_path)
   233198    0.821    0.000    2.738    0.000 site-packages/matplotlib/transforms.py:161(set_children)
245715/174511    0.801    0.000    2.721    0.000 site-packages/matplotlib/transforms.py:137(_invalidate_internal)
    99724    0.322    0.000    2.657    0.000 site-packages/matplotlib/transforms.py:1860(scale)
     6231    0.081    0.000    2.539    0.000 site-packages/matplotlib/axes/_base.py:1555(_update_patch_limits)
   383922    0.275    0.000    2.326    0.000 {method 'all' of 'numpy.ndarray' objects}
    12224    0.075    0.000    2.271    0.000 site-packages/matplotlib/axis.py:372(_get_text2)
   125600    0.278    0.000    2.218    0.000 site-packages/matplotlib/transforms.py:1699(__init__)
    56311    0.478    0.000    2.108    0.000 site-packages/matplotlib/font_manager.py:654(__init__)
   383922    0.210    0.000    2.051    0.000 site-packages/numpy/core/_methods.py:40(_all)
   403669    1.935    0.000    1.935    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   965463    1.868    0.000    1.877    0.000 {numpy.core.multiarray.array}
   388905    0.544    0.000    1.868    0.000 weakref.py:98(__setitem__)
    12404    0.083    0.000    1.683    0.000 site-packages/matplotlib/axis.py:497(_get_text1)
    12224    0.078    0.000    1.653    0.000 site-packages/matplotlib/axis.py:354(_get_text1)
  2207290    1.608    0.000    1.608    0.000 site-packages/matplotlib/__init__.py:871(__getitem__)
   265937    0.599    0.000    1.607    0.000 weakref.py:176(itervalues)
    55831    0.331    0.000    1.533    0.000 site-packages/matplotlib/text.py:160(__init__)
151007/149780    0.467    0.000    1.498    0.000 site-packages/matplotlib/artist.py:745(update)
    24970    0.034    0.000    1.421    0.000 site-packages/matplotlib/lines.py:865(get_path)
    12404    0.079    0.000    1.399    0.000 site-packages/matplotlib/axis.py:513(_get_text2)
   169372    1.135    0.000    1.393    0.000 site-packages/matplotlib/artist.py:79(__init__)
    24970    0.378    0.000    1.387    0.000 site-packages/matplotlib/lines.py:566(recache)
   614013    0.418    0.000    1.348    0.000 site-packages/numpy/core/numeric.py:394(asarray)
   122269    0.580    0.000    1.345    0.000 site-packages/numpy/core/numeric.py:2125(identity)
    24448    0.098    0.000    1.320    0.000 site-packages/matplotlib/markers.py:693(_set_tickup)
    50020    0.153    0.000    1.300    0.000 site-packages/matplotlib/transforms.py:2524(__init__)
    12224    0.011    0.000    1.242    0.000 site-packages/matplotlib/axis.py:336(_get_text2_transform)
    12224    0.042    0.000    1.231    0.000 site-packages/matplotlib/axes/_base.py:598(get_xaxis_text2_transform)
    25288    0.102    0.000    1.207    0.000 site-packages/matplotlib/markers.py:685(_set_tickright)
     6573    0.051    0.000    1.158    0.000 site-packages/matplotlib/transforms.py:1223(__sub__)
    22421    0.047    0.000    1.143    0.000 site-packages/matplotlib/transforms.py:1835(rotate_deg_around)
    25288    0.099    0.000    1.141    0.000 site-packages/matplotlib/markers.py:679(_set_tickleft)
    24448    0.095    0.000    1.128    0.000 site-packages/matplotlib/markers.py:699(_set_tickdown)
66072/40122    0.115    0.000    1.032    0.000 site-packages/matplotlib/transforms.py:2225(_iter_break_from_left_to_right)
      136    0.008    0.000    1.030    0.008 nilearn/plotting/displays.py:430(_map_show)
```
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,368,nilearn,nilearn,GaelVaroquaux,2015-01-24 14:28:44,"Indeed, that's probably because we are using reoder_img without allowing
rotations. We should change this default value.

Thanks for reporting
",nan,nan
11,issue_comment,368,nilearn,nilearn,gciccarelli3,2015-01-24 14:32:34,"So, is there a workaround, or should I just wait?  I'm really new at
nilearn, and haven't done too much digging.  I downloaded yesterday
specifically to help with brain visualization.

Thanks.

On Sat, Jan 24, 2015 at 9:28 AM, Gael Varoquaux notifications@github.com
wrote:

> Indeed, that's probably because we are using reoder_img without allowing
> rotations. We should change this default value.
> 
> Thanks for reporting
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/368#issuecomment-71319381.
",nan,nan
4,issue_comment,368,nilearn,nilearn,GaelVaroquaux,2015-01-24 14:33:54,"> So, is there a workaround, or should I just wait?

No workaround. This is a bug (or rather misfeature) from our side. I
cannot tackle it right now, but the solution is rather simple. Hopefuly
we will fix it in the next few days.
",nan,nan
12,issue_comment,368,nilearn,nilearn,AlexandreAbraham,2015-01-24 21:04:34,"Maybe calling `resample_img` with a diagonal matrix as affine before
calling `plot_img` could do the trick.

On 1/24/15, Gael Varoquaux notifications@github.com wrote:

> > So, is there a workaround, or should I just wait?
> 
> No workaround. This is a bug (or rather misfeature) from our side. I
> cannot tackle it right now, but the solution is rather simple. Hopefuly
> we will fix it in the next few days.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/368#issuecomment-71319631
",nan,nan
5,issue_comment,368,nilearn,nilearn,GaelVaroquaux,2015-01-24 21:12:00,"> Maybe calling `resample_img` with a diagonal matrix as affine before
> calling `plot_img` could do the trick.

Actually that's a good point. Inserting the following lines would do the
trick:

<pre>
from nilearn import image
file_name = 'T1_001.nii.gz'
img = image.reorder_img(os.path.join(file_path, file_name), resample='continuous')
nilearn.plotting.plot_img(img)
</pre>
",nan,nan
13,issue_comment,368,nilearn,nilearn,gciccarelli3,2015-01-25 14:08:42,"Thanks!  This worked.  I do see the ""resample"" option.  Does this mean the
images should be taken with a grain of salt  because the values are being
changed before being plotted?  Whereas if it it just worked, then this
resampling, and therefore changed values would not be an issue?

On Sat, Jan 24, 2015 at 4:12 PM, Gael Varoquaux notifications@github.com
wrote:

> > Maybe calling `resample_img` with a diagonal matrix as affine before
> > calling `plot_img` could do the trick.
> 
> Actually that's a good point. Inserting the following lines would do the
> trick:
> 
> <pre>
> from nilearn import image
> file_name = 'T1_001.nii.gz'
> img = image.reorder_img(os.path.join(file_path, file_name),
> resample='continuous')
> nilearn.plotting.plot_img(img)
> </pre>
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/368#issuecomment-71337522.
",nan,nan
6,issue_comment,368,nilearn,nilearn,GaelVaroquaux,2015-01-25 14:27:37,"> Thanks! This worked. I do see the ""resample"" option. Does this mean the
> images should be taken with a grain of salt because the values are being
> changed before being plotted? Whereas if it it just worked, then this
> resampling, and therefore changed values would not be an issue?

You are never looking at the number of your data matrix. There is always
resampling and interpolation in visualization, unless one pixel of your
screen represents one voxel of your data matrix.

While your remark is true, I think that it is important to _always_ keep
in mind that a visualization system is not neutral to what it does to the
data.
",nan,nan
14,issue_comment,368,nilearn,nilearn,gciccarelli3,2015-01-25 14:33:53,"Completely agree.  I was thinking in the vein of queryable data (e.g., if I
clicked on an element, would the displayed values be the original matrix).
These plots seem static, so then it really is the usual viewer beware
caveat.  Don't get me wrong, I appreciate the solution.  I always want to
know exactly what I'm doing, as much as possible, so I can field questions
from supervisors.

On Sun, Jan 25, 2015 at 9:27 AM, Gael Varoquaux notifications@github.com
wrote:

> > Thanks! This worked. I do see the ""resample"" option. Does this mean the
> > images should be taken with a grain of salt because the values are being
> > changed before being plotted? Whereas if it it just worked, then this
> > resampling, and therefore changed values would not be an issue?
> 
> You are never looking at the number of your data matrix. There is always
> resampling and interpolation in visualization, unless one pixel of your
> screen represents one voxel of your data matrix.
> 
> While your remark is true, I think that it is important to _always_ keep
> in mind that a visualization system is not neutral to what it does to the
> data.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/368#issuecomment-71375056.
",nan,nan
7,issue_comment,368,nilearn,nilearn,GaelVaroquaux,2015-01-25 15:28:34,"> Completely agree. I was thinking in the vein of queryable data (e.g., if I
> clicked on an element, would the displayed values be the original matrix).

For these purposes, I would advise using fslview.

> Don't get me wrong, I appreciate the solution. I always want to know
> exactly what I'm doing, as much as possible, so I can field questions
> from supervisors.

If your data is a set of labels, rather than continuous use should use
""resample='nearest'""
",nan,nan
15,issue_comment,368,nilearn,nilearn,AlexandreAbraham,2015-01-27 14:19:57,">  if I clicked on an element, would the displayed values be the original matrix

As said by Gaël, you can save your image into a Nifti file and visualize it with fslview. pynax (see my repos) can also be used to do that. However, it is not compatible with current plotting functions in nilearn but it shouldn't be too much work.
",nan,nan
17,issue_comment,368,nilearn,nilearn,lesteve,2015-01-29 19:30:16,"So what do we want to do with this one, just have a better error message mentioning to use reorder_img with the `resample` argument set in order to force resampling when the image has an affine with rotations ? 

A not so great alternative is to add the `resample` argument to all the plotting functions since we don't know which resampling between 'nearest' or 'continuous' is appropriate, unless of course we go down the way of having some shoddy logic to decide which one is the most likely, for example based on the number of unique values in the array (not 100 % convinced atm) ...
",nan,nan
8,issue_comment,368,nilearn,nilearn,GaelVaroquaux,2015-01-29 20:24:39,"> A not so great alternative is to add the resample argument to all the
> plotting functions since we don't know which resampling between
> 'nearest' or 'continuous' is appropriate, unless of course we go down
> the way of having some shoddy logic to decide which one is the most
> likely, for example based on the number of unique values in the array

We _need_ to make this work. People don't want to have to resample, they
want things to 'just work'. In addition 99% of them won't know which
resampling method to use, so forcing make a choice is not solving the
problem. We can add a warning.

And with regards to which resampling method: plot_roi should use
'nearest', the others a continuous resampling. That's exactly the reason
why we separated these function.
",nan,nan
19,issue_comment,368,nilearn,nilearn,gciccarelli3,2015-01-29 20:32:44,"""People don't want to have to resample, they
want things to 'just work'. ""

YES!

On Thu, Jan 29, 2015 at 3:24 PM, Gael Varoquaux notifications@github.com
wrote:

> > A not so great alternative is to add the resample argument to all the
> > plotting functions since we don't know which resampling between
> > 'nearest' or 'continuous' is appropriate, unless of course we go down
> > the way of having some shoddy logic to decide which one is the most
> > likely, for example based on the number of unique values in the array
> 
> We _need_ to make this work. People don't want to have to resample, they
> want things to 'just work'. In addition 99% of them won't know which
> resampling method to use, so forcing make a choice is not solving the
> problem. We can add a warning.
> 
> And with regards to which resampling method: plot_roi should use
> 'nearest', the others a continuous resampling. That's exactly the reason
> why we separated these function.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/368#issuecomment-72097422.
",nan,nan
18,issue_comment,368,nilearn,nilearn,lesteve,2015-01-29 21:18:28,"> And with regards to which resampling method: plot_roi should use 'nearest', the others a continuous resampling. That's exactly the reason why we separated these function.

OK that makes sense but then how do we cater for use cases like this [one](https://github.com/nilearn/nilearn/pull/270), basically using plot_img (so no reasonable default) to plot of a segmentation of the brain (data is a set of labels). Should plot_roi be used instead?

The thing is that the [doc](http://nilearn.github.io/building_blocks/plotting.html) mentions that plot_img comes with no specific presets.
",nan,nan
9,issue_comment,368,nilearn,nilearn,GaelVaroquaux,2015-01-29 21:29:07,"I strongly believe in the 80 / 20 rule: we address most of the problems,
and we leave the others not addressed. Some people will have such a
problem, but it requires them to work with data that actually need
resampling (which is a tiny fraction), and in a very unusual situation.
And, if we don't solve the problem for them, the only consequence is that
they will have some strange aliasing in their visualization.

I don't think that, for now, such a case is worth spending too much time.
We need to keep in mind that we are working with a fixed budget, and that
we need to maximize the impact of nilearn with this fixed budget. That
means making nilearn usable for end-user problem solving for a maximum of
people.
",nan,nan
16,issue_comment,368,nilearn,nilearn,AlexandreAbraham,2015-01-30 00:00:58,"We already have heuristics in nilearn that are quite hazardous. A `resampling='auto'` for one function seems feasible. A heuristic could be: `dtype == int and n_labels < 500 and n_connected_components < 500`. No strong feelings about this one.
",nan,nan
10,issue_comment,368,nilearn,nilearn,GaelVaroquaux,2015-01-30 06:28:02,"> We already have heuristics in nilearn that are quite hazardous. A
> resampling= 'auto' for one function seems feasible. A heuristic could
> be: dtype == int and n_labels < 500 and n_connected_components < 500.
> No strong feelings about this one.

That sounds like a reasonnable approach to me for a generic function like
'plot_img'.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,369,nilearn,nilearn,lesteve,2015-01-26 08:16:07,"There is a lingering `self.verbose > 10` in nilearn/input_data/nifti_masker.py.
",nan,nan
14,pull_request_commit_comment,369,nilearn,nilearn,lesteve,2015-01-26 08:18:21,"I guess this one should become `if verbose == 1` (shortening of the url for easier reading with the default verbosity)
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/datasets.py')"
15,pull_request_commit_comment,369,nilearn,nilearn,lesteve,2015-01-26 08:57:17,"I am sligthly uneasy with this for two reasons:
- you are silencing all functions at once, which means that you could hide potential issues, for example if a verbose parameter wasn't passed from the caller to the callee (you fixed a few of those in this PR by the way, thanks for that)
- ideally, it'd be good to have a teardown equivalent of this that sets back the datasets functions to their original selves, so that each test doesn't modify the global state. I am guessing that with the current version of the code, you only need one decorated test to silence all of them.
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/tests/test_datasets.py')"
16,pull_request_commit_comment,369,nilearn,nilearn,lesteve,2015-01-26 09:56:01,"Actually thinking about it a bit more, why is it not enough to pass verbose=0 into the tested functions? Was it done to make it easier on the test writer so that he doesn't have to remember to add verbose=0 to each datasets function call?
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/tests/test_datasets.py')"
17,pull_request_commit_comment,369,nilearn,nilearn,GaelVaroquaux,2015-01-26 10:00:49,"> Actually thinking about it a bit more, why is it not enough to pass verbose=0
> into the tested functions?

That would seem like the right thing to do to me. Unless the purpose is
to trigger the printing code in order to test it.
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/tests/test_datasets.py')"
18,pull_request_commit_comment,369,nilearn,nilearn,bcipolli,2015-01-28 15:01:50,"It seems more failsafe to me.  To test the output directly, just don't add the decorator to the test... or the decorator could be extended to accept a list of function names to silence, or to avoid silencing.

I don't have any strong opinion about it, so happy to simply pass `verbose=0` explicitly, or to write teardown code.
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/tests/test_datasets.py')"
19,pull_request_commit_comment,369,nilearn,nilearn,bcipolli,2015-01-28 15:15:07,"On further thought, I think the _best_ way to do this is to automatically silence all functions--there should be no manual verification in tests, so output simply isn't helpful.  To test verbosity of any function, people should write specific unit tests.

What I've done is shorthand for that.  I could use the `inspect` function to recursively search modules for functions that accept a `verbose` parameter, and I could write a teardown function as well.

This seems the most complete and safest to me.  It could also wrap `stderr` / `stdout` to test whether any function has output... in fact, doing this for the entire test suite via a `TestRunner`, rather than using a decorator, is also an option.
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/tests/test_datasets.py')"
20,pull_request_commit_comment,369,nilearn,nilearn,lesteve,2015-01-28 22:44:20,"tl; dr: it just seems to me that passing `verbose=0` into the needed functions is a lot simpler.

It does the job we want which is to reduce noise in the output of nosetests. Yes we may forget to set `verbose=0` occasionally when adding a new test, but we will probably notice eventually when either running the tests or looking at the travis-ci output.

Also as I mentioned above, it could be a way to potentially detect bugs, like the verbose parameters that aren't passed down the call stack. Let's be honest, I don't think we have so much time on our hands that we are going to unit test each of our print statements.

> To test the output directly, just don't add the decorator to the test

That's actually not true because you don't have a teardown method and you only need one decorated test with setup_silence to silence your dataset functions for all the tests that are going to run from then on. Changing the global state in tests is very very nasty.

An example of the side-effects, add this test at the end of test_datasets.py that checks that some printing on stdout actually occurs:

``` python

import sys
from contextlib import contextmanager

@contextmanager
def redirect_stdout(new_target):
    old_target, sys.stdout = sys.stdout, new_target # replace sys.stdout
    try:
        yield new_target # run some code with the replaced stdout
    finally:
        sys.stdout = old_target # restore to the previous value

def test_stdout_miyawaki2008():
    with redirect_stdout(open('/tmp/test', 'w')):
        datasets._get_dataset_dir('test', verbose=5)

    content = open('/tmp/test').read()
    assert_true('search paths' in content)

```

This won't pass with you current code but it will pass if you remove your setup_silence decorators (or have setup_silence be just a no-op)
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/tests/test_datasets.py')"
10,issue_comment,369,nilearn,nilearn,bcipolli,2015-01-28 23:23:34,"OK, pulled the `silence_fn` and added `verbosity=0` to all relevant tests in `test_datasets.py`.  Made the two verbosity tweaks above as well, did a little commit squashing... I think this is all set!
",nan,nan
11,issue_comment,369,nilearn,nilearn,bcipolli,2015-01-28 23:34:19,"...and with that said, the output is back in the tests.  Investigating.
",nan,nan
12,issue_comment,369,nilearn,nilearn,bcipolli,2015-01-29 00:58:05,"After changing how the testing was done, then searching through the output again, I found quite a few more changes to make things work as advertised.  Please review the last 7 commits carefully; the changes are small but took thinking.

It would also be good to have a test run with all tests using `verbose=10`, to make sure none of the printing code has errors in it.  I suggest to add an issue for this.
",nan,nan
21,pull_request_commit_comment,369,nilearn,nilearn,lesteve,2015-01-29 19:12:11,"There are other occurences of this verbose - 1 elsewhere in the code. Would you mind fixing them while you are at it?

```
~/dev/nilearn $ git grep -n -P 'verbose\s*-\s*1'
nilearn/group_sparse_covariance.py:548:                verbose=self.verbose - 1, debug=False)
nilearn/input_data/multi_nifti_masker.py:188:                            verbose=(self.verbose - 1),
nilearn/input_data/nifti_masker.py:168:                verbose=(self.verbose - 1),
```
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(5, '', u'nilearn/input_data/multi_nifti_masker.py')"
22,pull_request_commit_comment,369,nilearn,nilearn,lesteve,2015-01-29 19:14:04,"Actually you have already, thanks for that and sorry for the noise ...
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(5, '', u'nilearn/input_data/multi_nifti_masker.py')"
23,pull_request_commit_comment,369,nilearn,nilearn,lesteve,2015-01-29 19:15:08,"I am not too sure whether > 10 was a typo or meant to indicate a super high verbosity was needed. At least the required verbosity is the same as the other print statements in the same class so that's probably fine.
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/input_data/nifti_masker.py')"
24,pull_request_commit_comment,369,nilearn,nilearn,GaelVaroquaux,2015-01-29 19:18:50,"Indeed, I think that it should be a high value. Printing just before a return is not someone wants often: most often we know that the operation is finished because either another one is starting, or the processing has finished.
",97df72722680e5db12f1238978a82c9bf84c9e7f,"(None, '', u'nilearn/input_data/nifti_masker.py')"
7,issue_comment,369,nilearn,nilearn,lesteve,2015-01-30 12:36:06,"Sorry there is a tiny merge conflict I introduced by fixing something completely unrelated in master. Do you mind rebasing on master ? You just need to rename files -> filenames in `nilearn/_utils/testing.py`:

```
<<<<<<< HEAD
        kwargs['mock'] = True
        filenames = original_fetch_files(*args, **kwargs)
=======
        files = self._mock_fetch_files(*args, **kwargs)
>>>>>>> 33c9bdbb9bbafc437af606621ef6b269af9462a3
```
",nan,nan
8,issue_comment,369,nilearn,nilearn,lesteve,2015-01-30 14:20:08,"LGTM, other than the verbose level in nilearn/input_data/nifti_masker.py and the merge conflict.

Maybe @AlexandreAbraham you can have a quick look ?
",nan,nan
6,issue_comment,369,nilearn,nilearn,AlexandreAbraham,2015-01-30 14:26:43,"I agree with you!
",nan,nan
13,issue_comment,369,nilearn,nilearn,bcipolli,2015-01-30 14:44:21,"OK, I rebased to master and restored the one verbosity check to 10 where suggested.  The tests pass and the output still looks clean, so this should be good to go!
",nan,nan
9,issue_comment,369,nilearn,nilearn,lesteve,2015-02-01 15:37:36,"Thanks a lot for this, clearly a nice improvement, be it only to make travis logs load a lot faster.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,366,nilearn,nilearn,GaelVaroquaux,2015-01-22 18:26:09,">   • It is possible to completely turn off output.

Agreed.

>   • A number of dataset download functions print, even at verbosity=0

This is wrong and should not be like this, indeed (but for long-running
function, default should be to print some sane progress, and thus default
should not be verbose=0).

>   • Define a schema for what verbosity means (0=silent, 1=errors,
>   2=warnings, 3 =standard user output, 4=debug info, etc.), and use it

Well, this is the standard logging behavior in Python, but this is not
what we want, as we want also an indication of progress. verbosity=1
should display a bit of progress, verbosity=2 more,... This is important
when running a lot of computation/long run jobs. Also, we use a pattern
of decreasing verbosity when combining methods one into the other. That
way the progress of each nested for loop can always be seen.

Also, warnings and errors should always be displayed unless they are
absolutely harmless. We need user to see these.

> I would prefer the second solution; I think anyone wanting to actually
> manipulate the logging would either know the logging module,

This is not the way I see it. Only geeks know the logger module. Beside,
it does not implement well the pattern of decreasing verbosity, which is
really useful.
",nan,nan
8,issue_comment,366,nilearn,nilearn,bcipolli,2015-01-24 14:05:59,"OK, so the change I propose is:
- Make any `print` that isn't currently within an `if verbosity > ...` statement check for `verbosity > 0`
- Increment all other verbosity checks by one.

That seems like the simplest change.  Glad to hear if something more complex is desired.

Need to address this issue, to complete the `Python 3.x` support.
",nan,nan
4,issue_comment,366,nilearn,nilearn,GaelVaroquaux,2015-01-24 15:04:29,">   • Make any print that isn't currently within an if verbosity > ... statement
>     check for verbosity > 0

Definitely.

>   • Increment all other verbosity checks by one.

For those that are not right. But when you do this, check that the
default verbosity is still meaningful, ie that long-running operations
still print a bit of progress by default.
",nan,nan
9,issue_comment,366,nilearn,nilearn,lesteve,2015-01-24 18:30:17,"> Need to address this issue, to complete the Python 3.x support.

Just curious, how is Python 3 support related to verbosity?
",nan,nan
5,issue_comment,366,nilearn,nilearn,GaelVaroquaux,2015-01-24 18:32:35,"> Just curious, how is Python 3 support related to verbosity?

My guess: print statements :)
",nan,nan
10,issue_comment,366,nilearn,nilearn,lesteve,2015-01-24 18:39:19,"> > > Need to address this issue, to complete the Python 3.x support.
> > 
> > Just curious, how is Python 3 support related to verbosity?
> 
> My guess: print statements :)

Sure but what I don't understand is why Python 3 support would be dependent on this issue.
",nan,nan
6,issue_comment,366,nilearn,nilearn,GaelVaroquaux,2015-01-24 18:43:59,"> ```
> My guess: print statements :)
> ```
> 
> Sure but what I don't understand is why Python 3 support would be dependent on
> this issue.

Granted. It just requires touching the same lines, and thus would raise
conflicts in version control if dealt with in parallel.
",nan,nan
11,issue_comment,366,nilearn,nilearn,bcipolli,2015-01-24 21:17:17,"Debugging test failures with all the print statements is laborious.
",nan,nan
12,issue_comment,366,nilearn,nilearn,lesteve,2015-01-26 08:22:54,"> Debugging test failures with all the print statements is laborious.

Removing the `-s` flag from the nosetests command should revert to the default nosetests behaviour which is to capture stdout, maybe it does help a bit.
",nan,nan
7,issue_comment,366,nilearn,nilearn,GaelVaroquaux,2015-01-26 08:43:10,"> Removing the -s flag from the nosetests command should revert to the default
> nosetests behaviour which is to capture stdout, maybe it does help a bit.

We do not want to be using this by default in the continuous integration,
as it does swallow useful info.

The right path indeed is to clean up verbosity. This is definitely
useful.
",nan,nan
13,issue_comment,366,nilearn,nilearn,lesteve,2015-01-26 08:47:38,"> We do not want to be using this by default in the continuous integration, as it does swallow useful info.

That was more a tip for running tests locally.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
11,pull_request_commit_comment,422,nilearn,nilearn,bcipolli,2015-02-11 16:07:58,"This is helpful!  Adding `intersect_masks` to related functions would be appreciated as well.

I also suggest adding to the docstring of `fit`, to reminds users that only `mask_args` and `mask_strategy` are used for fitting.

Lastly, I would find it helpful to specify (here or in `transform`) that:
- Parameters (detrend, standardize) are computed from the images passed to `transform` (i.e. not computed and stored from `fit`)
- Whether the inverse of these parameters is applied when `inverse_transform` is called (not sure if they are, for `detrend`, `standardize`, and `confounds`).

Reason for those last two suggestions: as someone coming from computer vision, I believe the setup here differs in the two ways above from how we (at least in our lab) preprocess our datasets.  So my expectations may be different than someone who comes from a neuroimaging background.
",d62bbaf6c5da11786f4c4597c92c69c2c49e88c7,"(None, '', u'nilearn/input_data/nifti_masker.py')"
5,issue_comment,422,nilearn,nilearn,lesteve,2015-02-12 08:02:08,"Remark about form rather than content: our docstring tend to follow the [numpy docstring](https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt#docstring-standard) convention.

In particular (actually this one is an excerpt from [PEP 257](https://www.python.org/dev/peps/pep-0257/)):

> Multi-line docstrings consist of a summary line just like a one-line docstring, followed by a blank line, followed by a more elaborate description. 

Also I am not sure about the ""Helper"" wording.
",nan,nan
6,issue_comment,422,nilearn,nilearn,banilo,2015-02-12 08:38:35,"> In particular (actually this one is an excerpt from PEP 257)

So, keep the first line where it is and introduce a blank line after?

> Also I am not sure about the ""Helper"" wording.

What do you suggest - ""utility"" or ""tool"" or just ""class""?
",nan,nan
7,issue_comment,422,nilearn,nilearn,lesteve,2015-02-12 08:49:06,"> > In particular (actually this one is an excerpt from PEP 257)
> 
> So, keep the first line where it is and introduce a blank line after?

Yes.

> > Also I am not sure about the ""Helper"" wording.
> 
> What do you suggest - ""utility"" or ""tool"" or just ""class""?

No strong opinion, ""class"" would be fine but feel free to be creative.
",nan,nan
8,issue_comment,422,nilearn,nilearn,banilo,2015-02-12 08:59:14,"PEP-ized that!
",nan,nan
9,issue_comment,422,nilearn,nilearn,lesteve,2015-02-12 10:05:46,"OK merging this one, thanks. @bcipolli feel free to open a new issue about your comments.
",nan,nan
10,issue_comment,422,nilearn,nilearn,GaelVaroquaux,2015-02-12 10:06:45,"Thank you Danilo!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,425,nilearn,nilearn,GaelVaroquaux,2015-02-13 08:21:19,"I tend to like the organization where there is one major class per file,
and the file name is the snake_case version of the CamelCase class name.
",nan,nan
4,issue_comment,425,nilearn,nilearn,AlexandreAbraham,2015-02-13 08:24:02,"> I tend to like the organization where there is one major class per file, and the file name is the snake_case version of the CamelCase class name.

So should we split nifti_region into nifti_labels_masker and nifti_maps_masker?
",nan,nan
5,issue_comment,425,nilearn,nilearn,banilo,2015-02-13 08:24:53,"> split nifti_region into nifti_labels_masker and nifti_maps_masker

This seems to make sense for the sake of consistency.
",nan,nan
6,issue_comment,425,nilearn,nilearn,GaelVaroquaux,2015-02-13 08:25:00,"> So should we split nifti_region into nifti_labels_masker and
> nifti_maps_masker?

IMHO Yes. I find that such organization of the codebase makes it very
easy to find where a class is defined.
",nan,nan
7,issue_comment,425,nilearn,nilearn,AlexandreAbraham,2015-02-13 08:54:41,"@banilo, do you volunteer? ;)

If not, I'll find 10 minutes to do that during the week end. Given that we have released, I think that this kind of change should be done ASAP.
",nan,nan
8,issue_comment,425,nilearn,nilearn,banilo,2015-02-13 08:57:14,"I volunteer - will do it this afternoon.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,379,nilearn,nilearn,GaelVaroquaux,2015-02-01 09:38:27,"No, colorbar are not possible with plot_glass_brain. We had an internal
discussion and ruled against it. The reason is that plot_glass_brain
applies a max intensity projection, and thus we feel that it is not a
quantitative way of looking at the maps.

However, if you can make a strong case, we can be convinced otherwise.
",nan,nan
12,issue_comment,379,nilearn,nilearn,gciccarelli3,2015-02-01 13:30:19,"(1) Any time a plot/image/graphic has colors that correspond to something,
it should be possible to denote the meaning of those colors.  The universal
way would be with a customizeable and label-able colorbar (labels meaning
both the numeric or categorical ticks but also the colorbar title (e.g. ""t
stats"" or ""COPES"" ).  This goes for every single plot/image/graphic
function within nilearn, not just plot_glass_brain or plot_stat_map.
(2) Yes, it's a max intensity projection, and we should know what those
intensities are- quantitatively.
(3) Since so much functionality is already built in to plot_glass_brain
(e..g., change color map, apply threshold, and apply min/max to colormap),
a logical and needed extension to make sure a viewer, not someone with the
code, understands what they see, is to encapsulate the numerical
description of the colors.  Otherwise, almost literally, I could set these
parameters and come up with very different displays.  Note that vmin and
vmax, are crucial for comparing separately plotted brains.
(4) Without a colorbar, what could have been one of the most useful
functions for exploratory brain analysis, precisely because three cuts
would show a lot of any possible activity as opposed to needing many
slices, becomes a novelty rather than a research tool.  My two step
workflow was glass_brain to get a sense of where things are and then
specific cuts for exactly the reason that you mentioned- cuts are need to
precisely localize the activity.
(5) To ease the nilearn plotting user communities transition to nilearn
plotting commands from matplotlib plotting.  It seemed natural that all
matplotlib functionality would be inherited by any nilearn plotting
commands- that actually is what led me to try vmin and vmax and colormap
changing.

Behind the scenes, emotional appeal story:  I'm an experienced matlab user,
who could have replicated much of the plotting I needed in matlab in less
time than it took me to figure out any one of the steps needed to actually
plot an image, using just matlab and and the brain load command from spm.
I also fully admit that I don't have the cool background template for
plot_glass_brain, and some other functionality in nilearn.  My research
adviser is a matlab to python convert, and strongly pushes python and its
community, so I've been giving it a good faith try this past semester.
Yet, I constantly run up against features that _almost_ work perfectly in
the python ecosystem.  I commend you and all the developers for this
toolbox, and the many, many others out there.  It's fantastic that there is
such a vibrant opensource scientific computing community.  I just want you
to know that matlab is that standard to which I'm holding python for
visualization.  You'll know you (as in the python community) has won me
over when I hold matlab's functionality to the python standard.

On Sun, Feb 1, 2015 at 4:38 AM, Gael Varoquaux notifications@github.com
wrote:

> No, colorbar are not possible with plot_glass_brain. We had an internal
> discussion and ruled against it. The reason is that plot_glass_brain
> applies a max intensity projection, and thus we feel that it is not a
> quantitative way of looking at the maps.
> 
> However, if you can make a strong case, we can be convinced otherwise.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/379#issuecomment-72358088.
",nan,nan
6,issue_comment,379,nilearn,nilearn,lesteve,2015-02-01 14:41:16,"One possible compromise: add the colorbar argument in plot_glass_brain but set it to False by default?
",nan,nan
4,issue_comment,379,nilearn,nilearn,GaelVaroquaux,2015-02-01 14:58:36,"> One possible compromise: add the colorbar argument in plot_glass_brain but set
> it to False by default?

+1
",nan,nan
13,issue_comment,379,nilearn,nilearn,gciccarelli3,2015-02-01 16:57:24,"Absolutely fine with me!  I would add it to plot_img too, as it's supposed
to be a general plotting function, as well as any other plot function, but
I know you have to prioritize.

On Sun, Feb 1, 2015 at 9:58 AM, Gael Varoquaux notifications@github.com
wrote:

> > One possible compromise: add the colorbar argument in plot_glass_brain
> > but set
> > it to False by default?
> 
> +1
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/379#issuecomment-72367885.
",nan,nan
7,issue_comment,379,nilearn,nilearn,lesteve,2015-02-01 17:14:04,"Actually colorbar is available in plot_img already through the kwargs, it is just a bit unfortunate that it doesn't appear very explicitly in the function arguments. This could be fixed very easily, do you mind opening a separate issue about that?
",nan,nan
8,issue_comment,379,nilearn,nilearn,lesteve,2015-02-03 10:16:54,"Hmm I thought this was going to be trivial, but it looks like this has some unexpected interaction with the threshold logic in the graying of the colorbar. Adding this one to the upcoming sprint.

``` python
from nilearn import datasets
from nilearn import plotting

localizer_dataset = datasets.fetch_localizer_contrasts(
    [""left vs right button press""],
    n_subjects=2,
    get_tmaps=True)
localizer_tmap_filename = localizer_dataset.tmaps[1]

plotting.plot_glass_brain(localizer_tmap_filename, title='plot_glass_brain',
                          colorbar=True)
```

![plot_glass_brain_with_colorbar](https://cloud.githubusercontent.com/assets/1680079/6018323/1137d186-ab96-11e4-81dc-bcf37669f261.png)

For completeness the diff:

``` diff
diff --git a/nilearn/plotting/img_plotting.py b/nilearn/plotting/img_plotting.py
index 0e044a6..52d6629 100644
--- a/nilearn/plotting/img_plotting.py
+++ b/nilearn/plotting/img_plotting.py
@@ -609,7 +609,7 @@ def plot_stat_map(stat_map_img, bg_img=MNI152TEMPLATE, cut_coords=None,


 def plot_glass_brain(stat_map_img,
-                     output_file=None, display_mode='ortho',
+                     output_file=None, display_mode='ortho', colorbar=False,
                      figure=None, axes=None, title=None, threshold='auto',
                      annotate=True,
                      black_bg=False,
@@ -633,6 +633,8 @@ def plot_glass_brain(stat_map_img,
             Choose the direction of the cuts: 'x' - saggital, 'y' - coronal,
             'z' - axial, 'ortho' - three cuts are performed in orthogonal
             directions.
+        colorbar : boolean, optional
+            If True, display a colorbar on the right of the plots.
         figure : integer or matplotlib figure, optional
             Matplotlib figure used or its number. If None is given, a
             new figure is created.
@@ -673,7 +675,7 @@ def plot_glass_brain(stat_map_img,
                                 figure=figure, axes=axes, title=title,
                                 annotate=annotate,
                                 black_bg=black_bg, threshold=threshold,
-                                cmap=cmap, colorbar=False,
+                                cmap=cmap, colorbar=colorbar,
                                 display_factory=display_factory,
                                 **kwargs)

```
",nan,nan
9,issue_comment,379,nilearn,nilearn,lesteve,2015-02-03 10:49:45,"Ah it does ring a bell now that the threshold is applied to the maps before the max intensity projection is applied. I don't think having the colorbar graying logic makes any sense in plot_glass_brain.
",nan,nan
5,issue_comment,379,nilearn,nilearn,GaelVaroquaux,2015-02-03 10:51:18,"> Ah it does ring a bell now that the threshold is applied to the maps
> before the max intensity projection is applied. I don't think having
> the colorbar graying logic makes any sense in plot_glass_brain.

I am not sure that I follow you: that threshold will still be the
smallest value that can be observed. Thus, I don't see why it is not
relevant to display it.
",nan,nan
10,issue_comment,379,nilearn,nilearn,lesteve,2015-02-03 10:59:22,"> threshold will still be the smallest value that can be observed

Agreed. I guess my comment was with the above plot in mind where the colorbar vmin will be above the threshold (by construction there will be no value in the glass brain below the threshold). You are right that you could pass vmin=0 to plot_glass_brain in which case it would make sense to show the threshold.
",nan,nan
11,issue_comment,379,nilearn,nilearn,lesteve,2015-02-17 17:31:07,"Maybe that's one you could investigate @banilo. After all you wrote the colorbar threshold greying ;-)
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,415,nilearn,nilearn,lesteve,2015-02-06 17:52:56,"Good catch! I am probably not the best person for this kind of issues but I am convinced we can do something about it and tidy up the copyrights.
",nan,nan
3,issue_comment,415,nilearn,nilearn,GaelVaroquaux,2015-02-06 18:04:58,"Indeed,  we should put nilearn developers. Some of them are employed by inria but not all.

Sent from my phone. Please forgive brevity and mis spelling

On Feb 6, 2015, 18:53, at 18:53, ""Loïc Estève"" notifications@github.com wrote:

> Good catch! I am probably not the best person for this kind of issues
> but I am convinced we can do something about it and tidy up the
> copyrights.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/415#issuecomment-73281910
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
16,pull_request_commit_comment,416,nilearn,nilearn,eickenberg,2015-02-08 10:38:50,"Would it be possible to have this list explicitly, at least in a comment, or in a notes section in the docstring. That way one can immediately see what is compared.

For reference `[('sizeof_hdr', 'i4'),  ('data_type', 'S10'), ('db_name', 'S18'), ('extents', 'i4'), ('session_error', 'i2'),  ('regular', 'S1'), ('dim_info', 'u1'), ('dim', 'i2', (8,)), ('intent_p1', 'f4'),('intent_p2', 'f4'), ('intent_p3', 'f4'), ('intent_code', 'i2'),
 ('datatype', 'i2'), ('bitpix', 'i2'), ('slice_start', 'i2'), ('pixdim', 'f4', (8,)), ('vox_offset', 'f4'), ('scl_slope', 'f4'), ('scl_inter', 'f4'),
 ('slice_end', 'i2'), ('slice_code', 'u1'), ('xyzt_units', 'u1'), ('cal_max', 'f4'), ('cal_min', 'f4'), ('slice_duration', 'f4'),
 ('toffset', 'f4'), ('glmax', 'i4'), ('glmin', 'i4'), ('descrip', 'S80'), ('aux_file', 'S24'), ('qform_code', 'i2'),
 ('sform_code', 'i2'), ('quatern_b', 'f4'), ('quatern_c', 'f4'), ('quatern_d', 'f4'), ('qoffset_x', 'f4'),
 ('qoffset_y', 'f4'), ('qoffset_z', 'f4'), ('srow_x', 'f4', (4,)), ('srow_y', 'f4', (4,)), ('srow_z', 'f4', (4,)), ('intent_name', 'S16'),
 ('magic', 'S4')]`
",bd8590ed067be171532d40e0e414bc392afbd7e0,"(34, '', u'nilearn/_utils/niimg_conversions.py')"
19,pull_request_commit_comment,416,nilearn,nilearn,eickenberg,2015-02-08 10:44:33,"travis seems to be finding a `NotImplementedType` here - can you check what field this is on in your MNItemplate test?
",cd58953074f9ca7067ca3b898a3cbb9ee865db03,"(47, 440, u'nilearn/_utils/niimg_conversions.py')"
4,issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-08 11:06:51,"why would you want to compare headers?  This is a serious question: I don't see the use case of such a generic comparison of all the fields. 
",nan,nan
5,issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-08 11:06:58,"why would you want to compare headers?  This is a serious question: I don't see the use case of such a generic comparison of all the fields. 
",nan,nan
9,issue_comment,416,nilearn,nilearn,eickenberg,2015-02-08 11:20:38,"It is true that this does not seem to address https://github.com/nilearn/nilearn/issues/380 in any way.

The proposal resulting from that discussion is more of a copying mechanism, similar to `np.zeros_like` and `np.ones_like` where properties of the input image are copied except if other values are specified in the keyword arguments. The key point of that discussion is _which_ attributes to copy, because some of them are data dependent in different ways.

The contribution here could maybe be used as the analogous diagnostic tool for anybody who relies strongly on header information. In this case, just as in the discussion in #380, different modes of comparison may be possible depending on the context one is working in.

That is the only use case I can think of right now and I am not sure it is valid.
",nan,nan
10,issue_comment,416,nilearn,nilearn,banilo,2015-02-08 12:28:39,"There are at least three ways of looking at a potential usefulness of is_hdr_equal:

a) Michael H. suggested we should look more at how headers are handled/modified/passed on in nilearn -> this might increasingly necessitate broad header comparisons in the future

b) Loic wanted to incorporate a header comparison in the test for index_img but there was no such function, which is why niftis in that test are currently compared with respect to some (data + affine) but not all aspects (+header)

c) Fundamentally, nifti = data + header (includes affine), not nifti = data + affine (header is a blackspot). It would make sense to account for this reality in the API
",nan,nan
11,issue_comment,416,nilearn,nilearn,AlexandreAbraham,2015-02-09 12:39:30,"> why would you want to compare headers? This is a serious question: I don't see the use case of such a generic comparison of all the fields.

If we want to implement #380, such a function would be useful for testing. It should take a `mode` parameter similar to the ones used in the other niimg functions. For the moment, I don't think it is useful.
",nan,nan
6,issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-09 12:42:57,"I find that a lot of these justifications are ""will be useful"", and not
directly useful. Thus, in favor of the YAGNI principle, I lean on the
options of not doing it.

Also, I believe that exact comparison of headers is seldom a good idea.
Things like cal_min and cal_max are data dependent, and should probably
not be compared. My view is that to do anything with a nifti header, one
should understand what's in there and be a bit specific about it.
",nan,nan
12,issue_comment,416,nilearn,nilearn,banilo,2015-02-09 12:46:36,"Very concretely, such a function was needed last week in the index_img test, but was not present.
",nan,nan
13,issue_comment,416,nilearn,nilearn,AlexandreAbraham,2015-02-09 12:51:03,"> I find that a lot of these justifications are ""will be useful"", and not directly useful. Thus, in favor of the YAGNI principle, I lean on the options of not doing it. 

Hence my conclusion: we don't need it for now ;).

> Very concretely, such a function was needed last week in the index_img test, but was not present.

In `iter_img`, we copy the header of the image to the _sub_images_. As Gaël stated, we do that for now, but we have no clear idea of what's contained in the header. Since we don't have clear ideas on that, I think we don't want to integrate code like that. Honestly, I don't feel comptetent enough regarding nifti headers to tell if it's a good idea or not.
",nan,nan
7,issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-09 22:28:03,"> In iter_img, we copy the header of the image to the sub_images. As Ga�l
> stated, we do that for now, but we have no clear idea of what's
> contained in the

Actually, in iter_img/index_img, I find that it is what we should be
doing.
",nan,nan
14,issue_comment,416,nilearn,nilearn,AlexandreAbraham,2015-02-09 23:19:52,"Yes, but if we want to be accurate, we need to put a value of `index * t_r` for `toffset`. 
",nan,nan
8,issue_comment,416,nilearn,nilearn,GaelVaroquaux,2015-02-10 06:40:27,"> Yes, but if we want to be accurate, we need to put a value of index *
> t_r for toffset.

:).

That's why I am afraid of nifti headers, it is so easy to screw them up.
",nan,nan
15,issue_comment,416,nilearn,nilearn,AlexandreAbraham,2015-03-09 13:40:57,"I close this one as it won't be merged. We don't know if we will need this function. It is superseeded by #380 and the code provided here may still be useful to adresse this issue.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,issue_comment,410,nilearn,nilearn,eickenberg,2015-02-05 21:28:53,"Ooops, that one escaped me :)

What is happening here is that due to the fact that `vmax` is specified and `symmetric_cbar != 'auto'`, the function thinks it is not necessary to find maximum and minimum of the stat map, but these values are still used later on. Will fix this asap.
",nan,nan
7,issue_comment,410,nilearn,nilearn,eickenberg,2015-02-05 21:42:37,"Thanks for the catch! https://github.com/nilearn/nilearn/pull/411
",nan,nan
10,issue_comment,410,nilearn,nilearn,lesteve,2015-02-06 09:20:36,"This was actually fixed in #412
",nan,nan
3,issue_comment,410,nilearn,nilearn,GaelVaroquaux,2015-02-06 10:35:32,"I am reopening this because no test has been committed.
",nan,nan
8,issue_comment,410,nilearn,nilearn,eickenberg,2015-02-06 10:35:59,"I'm on it

On Fri, Feb 6, 2015 at 11:35 AM, Gael Varoquaux notifications@github.com
wrote:

> I am reopening this because no test has been committed.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/410#issuecomment-73217490.
",nan,nan
4,issue_comment,410,nilearn,nilearn,GaelVaroquaux,2015-02-06 10:39:42,"> I'm on it

Thanks. Make sure to use a small map to avoid the test taking long.

One example of test that you can copy is:
https://github.com/nilearn/nilearn/commit/346f1b45971903e74b9584094c7348f671fe8438
",nan,nan
9,issue_comment,410,nilearn,nilearn,eickenberg,2015-02-06 12:11:21,"I was able to add 3 test cases covering both issues into an existing test loop which generates similar data. https://github.com/nilearn/nilearn/pull/414
",nan,nan
5,issue_comment,410,nilearn,nilearn,lesteve,2015-02-06 14:22:03,"Fixed via #414
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,issue_comment,412,nilearn,nilearn,lesteve,2015-02-05 22:25:08,"Looks good, thanks.
",nan,nan
5,issue_comment,412,nilearn,nilearn,GaelVaroquaux,2015-02-06 10:33:16,"We need to have a test committed for this. We should not fix a bug like this without turning it into a test.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,413,nilearn,nilearn,agramfort,2015-02-06 08:46:52,"nilearn all in small caps :)
",nan,nan
4,issue_comment,413,nilearn,nilearn,GaelVaroquaux,2015-02-06 09:00:15,"Me too 

Sent from my phone. Please forgive brevity and mis spelling

On Feb 6, 2015, 09:56, at 09:56, Alexandre Abraham notifications@github.com wrote:

> I prefer nilearn too.
> 
> On Fri, Feb 6, 2015 at 9:46 AM, Alexandre Gramfort
> <notifications@github.com
> 
> > wrote:
> > 
> > nilearn all in small caps :)
> > 
> > —
> > Reply to this email directly or view it on GitHub
> > 
> > https://github.com/nilearn/nilearn/issues/413#issuecomment-73204416.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/413#issuecomment-73205361
",nan,nan
5,issue_comment,413,nilearn,nilearn,lesteve,2015-02-06 09:16:54,"OK, nilearn it is then. I'll stick with capitals only at the start of a sentence.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
27,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-01-29 17:44:14,"This change is wrong. If it doesn't make a test fail, then a test is missing.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/cache.py')"
28,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-01-29 17:45:48,"OK.  Can you help me understand why it's wrong?
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/cache.py')"
29,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-01-29 17:47:29,"Why did you increase the verbosity level here?
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/datasets.py')"
30,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-01-29 17:51:43,"cosmit: I prefer using parenthesis rather than backspace.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/multi_pca.py')"
31,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-01-29 17:53:01,"This is from the ""silencing"" PR... I suggest reviewing that one before this one, otherwise the two issues will be intertwined and hard to complete.

`verbose=0` was outputting here, so I upped everything (including the default) to keep everything on separate `verbose` levels, but to make `verbose=0` be silent.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/datasets.py')"
32,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-01-29 17:53:49,"Won't it be ugly in practice to show both values?
Also, you don't override `memory_level` anymore.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/multi_pca.py')"
33,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-01-29 17:57:41,"Negative verbose should not be a problem.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
34,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-01-29 18:07:32,"Not sure what's the best way to do it but @bcipolli could you remove the commits that are already in the #366 PR?

I believe you'll need to do that eventually when we want to merge into master.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
35,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-01-29 18:07:55,"I meant to say this particular change is in the #366 PR.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
36,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-01-29 18:11:15,"I'd prefer not to--I believe the two overlap a bit, and so I'd need to de-merge, then re-merge.  If I leave things as they are, if / when #366 is merged to master, I will be able to rebase much more smoothly (even if changes occur there).

In other projects, we dealt with this by looking at the changes on a commit-by-commit basis.  I think that's useful here; the commits break down pretty cleanly.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
37,pull_request_commit_comment,371,nilearn,nilearn,GaelVaroquaux,2015-01-29 18:43:35,"> Negative verbose should not be a problem.

I think that they are a problem:

<pre>
In [1]: if -1: print 1
1
</pre>
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
38,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-01-29 18:44:39,"Disclaimer I am not a git/github veteran but this seems to me a very strange way for me to proceed. What if you change something in #366, would you add the commit in this branch too so that the diff you mentioned above (https://github.com/bcipolli/nilearn/compare/bcipolli:allow_silence...fix_warnings) still makes sense?

Maybe somebody with more git/github experience than me can share his opninions.

Also I feel that linking the two PRs is not that great because while the stdout clean-up is a great thing (especially let's be honest for the dataset download mocking which was outputting thousands of lines or so) I am less convinced about trying to get rid of _all_ the warnings. Sure the warnings that we can fix in our code should be fixed but it seems too much a burden to go and catch all the warnings across a variety of numpy and scipy versions.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
39,pull_request_commit_comment,371,nilearn,nilearn,GaelVaroquaux,2015-01-29 18:46:01,"> I'd prefer not to--I believe the two overlap a bit, and so I'd need to
> de-merge, then re-merge. If I leave things as they are, if / when #366
> is merged to master, I will be able to rebase much more smoothly (even
> if changes occur there).

Then I suggest that we stop reviewing this PR till #366 is merged.

> In other projects, we dealt with this by looking at the changes on a
> commit-by-commit basis.

That's not our workflow. We like to work based on PR. The github
interface makes this very easy to do. The benefit is that looking at the
whole PR makes it harder to miss something like the introduction of a
bug.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
40,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-01-29 18:57:14,"> Then I suggest that we stop reviewing this PR till #366 is merged.

That's probably the best way to do it while saving time and hassle for everybody involved. I don't think #366 is that far away from being merged anyway.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
41,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-01-29 18:58:58,"Oops the PR is actually #369 (#366 is the issue), sorry about that.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/group_sparse_covariance.py')"
19,issue_comment,371,nilearn,nilearn,bcipolli,2015-01-29 19:01:25,"OK, happy to close this one until that is merged.  Then I'll rebase and we can go from there!
",nan,nan
4,issue_comment,371,nilearn,nilearn,GaelVaroquaux,2015-01-29 19:02:54,"> OK, happy to close this one until that is merged. Then I'll rebase and
> we can go from there!

Don't close it. Let us just no touch it.
",nan,nan
20,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-01 15:45:13,"Hmmm, I see that rebasing and force-pushing eliminated my per-commit comment explaining why I did what I did ... :(
",nan,nan
21,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-01 15:46:11,"also note that the test failure is due to #376 
",nan,nan
42,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-02-02 17:05:08,"@AlexandreAbraham can you help me with this one?  The docstring says:

```
    ref_memory_level: int
        The reference memory_level used to determine if function call must
        be cached or not (if memory_level is larger than ref_memory_level
        the function is cached)
```

I believe this first check is for the not-caching condition, which means the code should be entered (according to the docstring) if `memory_level` is not larger than `ref_memory_level`.

Seems I should do  `ref_memory_level >= memory_level` on that reading...
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/cache.py')"
43,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-02-02 17:07:03,"I believe this is a bug; I think it specifically suppresses `warning_class`, rather than forcing it to show (which is what I think we want.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/testing.py')"
44,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-02-02 18:05:23,"This is weird. Are these parameters used somewhere? My impression is that the logic is in the mixin and that this function is always called with the default parameters.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/cache.py')"
45,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-02-02 18:14:43,"As far as I can see, they're simply passed through (so could be user-specified), except here: https://github.com/nilearn/nilearn/blob/master/nilearn/input_data/base_masker.py#L170

Seems weird to set the `ref_memory_level` to `self.memory_level`, given the docstring--this would disable memory usage, in my understanding.  Which is admittedly very weak :)
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/cache.py')"
17,issue_comment,371,nilearn,nilearn,lesteve,2015-02-02 22:10:16,"Before I start looking at the details of this PR, here are a few general comments:
- I am -1 on the UserWarning (or any kind of warnings for that matter) promoted to errors. It just seems to much of a burden on us to make sure that no warnings are issued for a wide range of numpy, scipy and scikit-learn versions for very little benefit IMHO. It makes sense every once in a while to look at the nosetests output and try to reduce the warnings coming from within the nilearn code but that's where I would stop. Maybe @GaelVaroquaux and @AlexandreAbraham can give their opinion too.
- it would be very nice if a few commits were removed in order to make this PR only about warnings. I am thinking mostly about cache_mixin.py -> cache.py renaming and ref_memory_level vs memory_level. Both of them deserve their own issue and/or PR.

I put together a hack to silence warnings within nose, if that can make people happier by reducing the noise when running the tests locally. Trust me it wasn't easy as I hoped and I tried a few dead-ends before getting something that actually worked. Put the following code in a script somewhere in your PATH and use it rather than nosetests:

``` python
#!/path/to/your/python

from nose import main
import warnings

if __name__ == '__main__':
    with warnings.catch_warnings(record=True):
        # catch_warnings with record=True is going to silence the warnings
        # by actually redefining warnings.showwarnings.
        # Depending on your use case you may want to uncomment the following line
        # warnings.simplefilter('ignore')
        main()
```

By the way I didn't know about the PYTHONWARNINGS environment variable. Definitely something to remember when trying to figure out where some pesky warnings come from (turn them into errors and look at the stacktrace).
",nan,nan
5,issue_comment,371,nilearn,nilearn,GaelVaroquaux,2015-02-02 22:16:00,">   • I am -1 on the UserWarning (or any kind of warnings for that matter)

Same thing here: I think that it is a useful tool to debug/develop, but
shouldn't be on by default in the codebase.

> I put together a hack to silence warnings within nose,

Nice hack! I am -1 on using it in the codebase.
",nan,nan
22,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-02 22:21:58,"Thanks for the thoughts, @lesteve !  I'm busy today, so will take time to respond tomorrow.

> Same thing here: I think that it is a useful tool to debug/develop, but
> shouldn't be on by default in the codebase.

Just to be clear: it is not on by default in the production code.  It is turned on during testing only.
",nan,nan
18,issue_comment,371,nilearn,nilearn,lesteve,2015-02-03 08:50:33,"> > I put together a hack to silence warnings within nose,
> 
> Nice hack! I am -1 on using it in the codebase.

Goes without saying but given that it took me a while to get something that was fulfilling its promise of removing all the warnings, I thought I would share for people who want a quick and dirty way to have nice and tidy nosetests outputs.
",nan,nan
23,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-05 06:35:58,"@lesteve @GaelVaroquaux A bit about my thinking here, and why I support throwing errors IN TESTS if unexpected warnings are thrown.

The goal here isn't just to clean up the output of tests.  It's that warnings hide potential bugs, and debugging warnings (and potential bugs) is much more laborious after the fact than it is at the time the warning is introduced.

If the goal is to eventually look into warnings, throwing on new warnings will make debugging things much easier.  Deferring will make the debugging harder, and will hide bugs--I found about 5 bugs in nilearn that I fixed in this PR that were hidden by warnings (including the caching issue that @AlexandreAbraham worked up properly).  I don't see any benefit of deferring here... to me it's the same benefit as having automated builds run through Travis.

In addition, it's my personal principle that warning output to the user should be carefully controlled.  Having strong expectations that tests either intentionally trigger warnings and validate them (lack of validation was causing some of the output), or do not trigger warnings at all (the default for tests), helps make this happen. It's a useful tool.  That doesn't have to be the principle here, but it's how I approached things in this PR.

Lastly, if the concern is that `sklearn` or others will throw lots of unexpected warnings... two responses: (1) We should all really hope that's not the case, that would suck for `nilearn`'s users.  If it is the case, however, I think we have some responsibility to see it ahead of time and mitigate it where possible. (2) It's so easy to turn the code to throw with warnings in the tests, if it becomes a problem... turn it off!

As of now, I've done the work to clean things up.  I think there's big benefits to keeping it that way, and not a lot of downside.  It's about avoiding bugs, keeping on top of potential issues, and making sure that users only get warnings when we really want them to.
",nan,nan
24,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-05 06:40:38,"@lesteve I will separate the commits as requested, will review the code myself, and then will post here when things look good from my vantage point.  Thanks!
",nan,nan
25,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-05 08:27:10,"OK, I cleaned up the code and documented things a bit more.  After removing the changes here to the caching code, the 3 warnings-as-errors that indicated the bugs in the caching code came back.  So, I merged #386 to resolve those errors.  Let me know if a different approach is preferred.
",nan,nan
6,issue_comment,371,nilearn,nilearn,AlexandreAbraham,2015-02-09 12:57:58,"I realized that I haven't answered to this one. I am also -1 on removing warning for now. Reasons:
1. we are at version 0.1, not 1.0. We are doing our best to provide high quality code but things are not fixed and we can't impose such high requirements on quality for now.
2. spurious warning may rise depending on versions of packages. For exemple, using an old sklearn with newest numpy/scipy raises a lot of DeprecationWarning. Not sure how robust it is to catch'em all.

So, maybe some warning may legitimately be slienced, but a lot of them are natural and are not bugging more than that.
",nan,nan
7,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-10 19:12:06,"OK.  In this case, shall we abandon this PR?  Despite the fact that I've done the work to make things ""high quality"", that no recent changes have added any new warnings, and that I've carefully described why I think it's important, there's clearly resistance from the team to follow through on it.

Just let me know where to go from here, and will do.  I'm fine even to abandon what's here, but some clear guidance on moving forward would be appreciated.
",nan,nan
8,issue_comment,371,nilearn,nilearn,lesteve,2015-02-10 23:14:12,"I haven't looked at this one for a while, but when I did I thought that most of the commits reducing the warnings were fine to merge (I had some reservations about some of them, let me look at it more closely tomorrow). I think the main contention is about turning warnings into errors.
",nan,nan
46,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:01:05,"This is the main point of contention and should be removed.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'Makefile')"
47,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:01:21,"inspect is already imported a few lines below
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/testing.py')"
48,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:07:08,"From what I could see this was only used for the Neurodebian-specific warning. I think we can live without for now.

Quite annoying though, that there is no way to have a unittest.skipIf in python 2.6 ...
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/testing.py')"
49,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:12:59,"I didn't manage to get a warning from this import and tried a few different numpy/scipy/sklearn versions. Do you remember how to get warnings from this import?
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/datasets.py')"
50,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:30:45,"I would give up on this one as mentioned above.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/tests/test_canica.py')"
51,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:31:23,"import probably not needed anymore if we give up on skipping the test for Neurodebian
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/tests/test_canica.py')"
52,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:33:10,"I am not too sure about this one but we can probably live with the warning you get from `MultiPCA()`
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/tests/test_multi_pca.py')"
53,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:33:16,"This is probably a change from an old commit. I don't think we want it.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/input_data/nifti_masker.py')"
54,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:34:58,"Can you motivate this one? It seems like you are changing the warning policy significantly but maybe you have a good reason for doing so.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/masking.py')"
55,pull_request_commit_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:37:37,"Is there no meaningful string you could use here for the warning message? In case there is none, you could consider using assert_warns instead.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/tests/test_region.py')"
9,issue_comment,371,nilearn,nilearn,lesteve,2015-02-11 14:46:23,"Also before I forget, there are merge conflicts to fix.
",nan,nan
56,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-02-11 14:58:16,"I still don't understand why you are making a special case of `memory_level`. Here you silently change it which is, for me, not a behavior that we want. Could you elaborate on that?
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/multi_pca.py')"
57,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-02-11 15:16:58,"I'm fine with this modification.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/tests/test_multi_pca.py')"
58,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-02-11 15:17:12,":+1:
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/input_data/nifti_masker.py')"
59,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-02-11 15:17:54,"Good catch but dependant of the internal code of the masker. I think that this code should go in the masker anyway.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/multi_pca.py')"
60,pull_request_commit_comment,371,nilearn,nilearn,AlexandreAbraham,2015-02-11 15:28:55,"It may be just me but I'm a bit worried about these catchs. I have the impression that we're putting a very high standard on tests that may frighten potential contributors. @lesteve sees no problem so this is a matter of taste.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decoding/tests/test_searchlight.py')"
61,pull_request_commit_comment,371,nilearn,nilearn,GaelVaroquaux,2015-02-11 16:58:02,"> > -        if self.masker_.mask_img:

Should be 'is None', or something like this, as some objects (like
arrays) raise errors when tested with an 'if'.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/multi_pca.py')"
26,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-19 17:20:21,"Just a note: this is still on my radar, but I think some of the changes here are not the best.  Specifically, I'm looking closer at the numpy casting warnings, trying to figure out what's going on there, and whether there are recommended solutions (e.g. calling `.astype` to be careful about casting issues when doing `-=` / `+=`).
",nan,nan
10,issue_comment,371,nilearn,nilearn,bcipolli,2015-02-28 21:05:21,"I am back to this one.  I may cherry-pick some of the bugfixes here into separate, small PRs.  I also will review each PR to re-assess design of warning suppression, now that I'm much more familiar with numpy.
",nan,nan
62,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:03:18,"It used to be necessary, from the old caching code--no longer is.  I've also made a smaller set of changes for this, here: https://github.com/bcipolli/nilearn/commit/448c69154e3cff1c41ae9d44b42d891950f19255
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/multi_pca.py')"
63,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:13:44,"Done.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'Makefile')"
64,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:18:03,"Done.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/testing.py')"
65,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:18:55,"I removed all the commits related to this, and opted for a more simple fix (ignore the warning), with a comment explaining.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/_utils/testing.py')"
66,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:22:21,"I have done this with the idea that tests should either: use things as intended (and get no warnings), or use things as not intended (and verify that warnings are emitted).
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/tests/test_multi_pca.py')"
67,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:26:15,"I reverted this to the orginal `> 10` setting.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/input_data/nifti_masker.py')"
68,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:33:43,"This was my mistake, fixed.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/masking.py')"
69,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:33:50,"Fixed.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/tests/test_region.py')"
70,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 00:34:12,"I created a separate PR for this.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/decomposition/multi_pca.py')"
71,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 05:07:00,"I removed this, and no longer see it; perhaps it was in one of the configs we removed?  I think keeping it out until we can find a config where the issue pops up, is for the best.
",f6f73951f754bec79a57e804b7a507932de59100,"(None, '', u'nilearn/datasets.py')"
11,issue_comment,371,nilearn,nilearn,bcipolli,2015-03-01 05:37:26,"I made the requested changes.  This included pulling about 10 commits and tweaking a couple of others.

I tested this code with https://github.com/nilearn/nilearn/pull/397 (minver of sklearn as 0.12.1) and with  https://github.com/nilearn/nilearn/pull/470 (mutipca / masker interaction), to make sure these changes worked with them.  They do.  I then pulled those commits from this branch, so that this can be merged independently.

The last commit is the one I'm least confident about.  I think the goal is the right one (users shouldn't see warnings for using our functions, it's confusing), but the implementation is not happy (suppressing all of those warnings after nilearn is loaded).  I would prefer to be less broad, but that would require more distributed code, and ... this is my current proposed compromise.

I've also opened up https://github.com/nilearn/nilearn/issues/471 for one final issue that I have been investigating.  I think that can be dealt with separately, so this should be ready for review.

I am removing ""WIP"", as I think this is much closer to being ready now.
",nan,nan
72,pull_request_commit_comment,371,nilearn,nilearn,GaelVaroquaux,2015-03-01 08:21:12,"Is the regexp at the end of the message desired? ('.' in regexp matches anything).
",f6f73951f754bec79a57e804b7a507932de59100,"(26, '', u'nilearn/__init__.py')"
73,pull_request_commit_comment,371,nilearn,nilearn,bcipolli,2015-03-01 15:14:21,"> Is the regexp at the end of the message desired? ('.' in regexp matches anything).

For me, not particularly desired or undesired.  With a match of this length and specificity, I didn't feel the need to be careful about the presence of `.`.  I would be happy to remove it if you'd like.
",f6f73951f754bec79a57e804b7a507932de59100,"(26, '', u'nilearn/__init__.py')"
74,pull_request_commit_comment,371,nilearn,nilearn,banilo,2015-03-06 13:24:22,"necessary?
",f6f73951f754bec79a57e804b7a507932de59100,"(12, '', u'nilearn/_utils/testing.py')"
12,issue_comment,371,nilearn,nilearn,AlexandreAbraham,2015-03-17 10:35:48,"@lesteve are we merging this one or not?
",nan,nan
13,issue_comment,371,nilearn,nilearn,lesteve,2015-03-17 11:59:38,"> @lesteve are we merging this one or not?

Not sure I haven't looked at it for a while I have to say. I think there are some changes that are completely fine (e.g. replace `-mask` by `np.logical_not(mask)` and some that are more controversial (e.g. I am not convinced we should mess with warnings settings in `nilearn/__init__.py`).

I'll try to take a closer look in the upcoming days.
",nan,nan
14,issue_comment,371,nilearn,nilearn,lesteve,2015-03-19 07:56:44,"@bcipolli did you mean to close this one? 

Maybe you were planning to introduce these changes by cutting this PR in smaller chunks, which I would be very much in favour of.
",nan,nan
15,issue_comment,371,nilearn,nilearn,AlexandreAbraham,2015-03-19 11:50:27,"Yeah there is a lot of great stuff in this PR. Please let us know if you drop it so that we take care of cherry picking the non-ambiguous ones ;)
",nan,nan
16,issue_comment,371,nilearn,nilearn,bcipolli,2015-03-19 12:12:49,"Feel free to cherry-pick!  I got tired of fixing merge conflicts while rebasing this, and fixing new warnings / the removal of old warnings as the code changed but warning-related things weren't checked carefully by tests.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,418,nilearn,nilearn,bcipolli,2015-02-08 15:15:51,"The use-cases I have in mind are:
- Combine masks by calling `mask.transform` on another mask's 3D image.
- Mask a subset of data (calling `mask.transform` on the result of `index_img`.

In this case, I'd prefer that `fit` and `transform` each accept `detrend` (and other parameters).  If they're kept in the constructor, then I'd expect the first semantic: the detrending to be stored and applied to any `transform`ed image.

I'm not sure what makes sense for other designed scenarios.
",nan,nan
4,issue_comment,418,nilearn,nilearn,eickenberg,2015-02-08 15:37:32,"3D images shouldn't be detrended, because as you say, the result is 0, because it subtracts the mean per voxel. Thanks for spotting this!

Otherwise, the functionality doesn't seem shocking to me: Every 4D image has different temporal trends that need to be removed somewhere in the pipeline. Hence semantic 1 is not useful. Semantic 2 is a possible point for confusion, which may be resolved by renaming the keyword `detrend=` to `detrend_data=`, but I am not sure whether that is necessary. The mask is always computed on undetrended images AFAIK, and both masking strategies employ mean images.

Combining masks can be done using e.g. `nilearn.masking.intersect_masks` or by working on the binary masks directly.

Scikit-learn convention forbids the use of keyword arguments in `fit` and `transform`.
",nan,nan
5,issue_comment,418,nilearn,nilearn,bcipolli,2015-02-08 15:57:17,"@eickenberg Thanks for the info.  Two additional comment:
- `detrend_data` doesn't clear up the ambiguity either; which data: the data used to compute the mask (via fit), or the data passed in `transform`?  It's 
- If I want a mask that is computed from detrended EPI data, but I only want to apply that mask to a subset of my data (e.g. `label == 'face'`), I want the detrending computed across the entire dataset used (not detrending on the subset of images I've passed to the transform).

I still find it odd that detrending to compute the mask, and detrending on the data passed to the transform, are semantically tied.  I'd rather have my image class know how to detrend and standardize, it doesn't seem like a ""Masking"" operation to me.  

I think I'd prefer a `normalize_img` function (that takes `detrend` and `standardize` as parameters), and use Masks for computing and applying spatial masks.
",nan,nan
6,issue_comment,418,nilearn,nilearn,eickenberg,2015-02-08 16:10:50,"> `detrend_data` doesn't clear up the ambiguity either; which data: the data used to compute the mask (via fit), or the data passed in `transform`

As far as I remember and as far as I can tell by skimming over the code, detrending is not performed to compute the mask, neither for `compute_epi_mask`, nor for `compute_background_mask`. Both are called from [here](https://github.com/nilearn/nilearn/blob/master/nilearn/input_data/nifti_masker.py#L165).

>  I want the detrending computed across the entire dataset 

valid point, especially when you are extracting very few, non-contiguous conditions. The masker should actually do its job before this extraction. Otherwise you need to switch detrending off, which it is by default in order to avoid surprises.

The `NiftiMasker` is supposed to facilitate ""data preparation"" such as masking and optionally smoothing and detrending, which one often gets wrong if one applies them separately (e.g. in the smoothing case forgetting anisotropic voxel sizes)

That said, it is true that it is quite bloated with functionality.
",nan,nan
7,issue_comment,418,nilearn,nilearn,bthirion,2015-02-08 17:40:33,"Let me just point a detail in the discussion: besides numerical errors, detrending should have no effect on mask estimation. So I don't really get the use case  "" the mask that is computed from detrended EPI data"".
",nan,nan
8,issue_comment,418,nilearn,nilearn,AlexandreAbraham,2015-02-08 21:02:40,"Like @bthirion said, there is absolutely no reason to detrend data before computing the mask. We can precise that in the doc, but given that the user has absolutely no knowledge of the heuristic used to compute the mask, I don't see why he should take care of that.

> I think I'd prefer a normalize_img function

See the answer of @eickenberg, I agree with him.

> Mask a subset of data (calling mask.transform on the result of index_img.

See PR #291 for that.

I am :+1: to make the documentation more precise, just put that in #355.
",nan,nan
9,issue_comment,418,nilearn,nilearn,eickenberg,2015-02-08 21:12:02,"3D images transformed by a masker with `detrend=True` or `standardize=True` yielding 0 or crashing should also be mentioned or even prevented.
",nan,nan
10,issue_comment,418,nilearn,nilearn,AlexandreAbraham,2015-02-08 21:19:40,"Oh yeah, sorry, this one is definitely a bug.
",nan,nan
11,issue_comment,418,nilearn,nilearn,AlexandreAbraham,2015-02-27 09:08:39,"@eickenberg Do you think that we should crash or juste mask without doing detrending?
",nan,nan
12,issue_comment,418,nilearn,nilearn,eickenberg,2015-02-27 09:51:37,"crash or warn would be my first reflex. However, somebody masking a 3D image probably just wants a masked 3D image, so from that point of view a little magic from our side should actually be beneficial.

How about this: If `detrend == True or standardize == True` and the masker gets a call to transform a 3D image, we could warn that we are not going to detrend it, making the user aware of the problem, but returning what most users would expect, i.e. a masked image.
",nan,nan
13,issue_comment,418,nilearn,nilearn,AlexandreAbraham,2015-02-27 10:12:34,":+1:
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 11:52:06,"![symmetric_cbar](https://cloud.githubusercontent.com/assets/1306635/5164473/9aa40dc2-73d8-11e4-83c9-2845373185e1.png) 

### becomes

![non_symmetric_cbar](https://cloud.githubusercontent.com/assets/1306635/5164477/a40dc8f8-73d8-11e4-981f-6a17f259ed99.png)

Without changing a single line of code in `plot_localizer_simple_analysis.py`
",nan,nan
6,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 11:59:41,"Ah yes, good point. We had discussed that actually. Was too happy when everything worked on the first test :)
",nan,nan
7,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-24 12:00:44,"It's more work, I know, but it will really solve the problem that our
users were having.
",nan,nan
8,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 12:02:15,"I confirm: Changing to default colormap in the cited example leads to a weird plot.
",nan,nan
9,issue_comment,293,nilearn,nilearn,lesteve,2014-11-24 12:18:50,"> I confirm: Changing to default colormap in the cited example leads to a weird plot.

What kind of weird are we talking about, blue pixels associated with non-negative values?
",nan,nan
10,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 12:23:28,"exactly :) -- I am looking at matplotlib doc to be able to specify the boundaries of the colormap. One can always use an array as a 1D image to make the whole colorbar, but I am checking to see if this situation is provided for already in matplotlib. Do you happen to know if this is the case?
",nan,nan
11,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-24 12:26:21,"> One can always use an array as a 1D image to make the whole colorbar,

I am afraid that you'll have to do this.
",nan,nan
12,issue_comment,293,nilearn,nilearn,lesteve,2014-11-24 12:46:46,"What about having cmap default to None and seting the colormap in the two different cases, e.g. the current one if there are both negative and positive values and a more suitable one if there are only positive/negative values?

I would be pretty annoyed if I passed in my favourite colormap and realised that only half of it was used because I was in the ""positive values only"" case.
",nan,nan
13,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-24 12:50:27,"> What about having cmap default to None and seting the colormap in the two
> different cases, e.g. the current one if there are both negative and positive
> values and a more suitable one if there are only positive/negative values?

I think that explicit is better than implicit. More importantly, I want
to make it easy for people to use different colormaps.

> I would be pretty annoyed if I passed in my favourite colormap and
> realised that only half of it was used because I was in the ""positive
> values only"" case.

Then you would set ""symmetric_range"" to False (and we need to point to
that in the docstring of the cmap argument).
",nan,nan
14,issue_comment,293,nilearn,nilearn,lesteve,2014-11-24 13:27:38,"Maybe I am missing something here but I think what we are trying to fix here is that the **default** cmap doesn't follow the best practices (i.e. using blue/red when all your values have the same sign), hence my suggestion above. To me it doesn't feel very natural to potentially keep only half of the cmap when the user explicitly specifies one.

> More importantly, I want to make it easy for people to use different colormaps.

I don't understand this, the auto-setting of the colormap would only happen when cmap is left to its default (i.e. None). If the cmap is specified then you left it unmodified.

> Then you would set ""symmetric_range"" to False (and we need to point to that in the docstring of the cmap argument).

I don't know it still feels less than great to have to specify two separate arguments when you just want a different colormap.
",nan,nan
15,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-24 15:35:51,"The fact that all nilearn colourmaps are symmetric in this way can be a justification for the `symmetric_range=` keyword etc.

As Gaël (resp. google) rightly said to me (resp. google internal gmail users), ""you are not the user"", when I stated similar reservations wrt this. Now the question is what do the users think about this. 

Coming from using basic matplotlib, I too am annoyed at things not doing what I want them to do. The question is whether the users have used basic matplotlib.
",nan,nan
16,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-24 15:37:00,"> Coming from using basic matplotlib, I too am annoyed at things not
> doing what I want them to do. The question is whether the users have
> used basic matplotlib.

These users should be using plot_img.
",nan,nan
17,issue_comment,293,nilearn,nilearn,lesteve,2014-11-25 15:38:50,"About plot_img, one of the major annoyances I bumped into is that it doesn't have a default bg_img + anat dimming so that you have to write a few non-trivial lines when switching from plot_stat_map to plot_img.

Any objections to add the default anat + anat dimming to plot_img?
",nan,nan
18,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-25 15:52:48,"> Any objections to add the default anat + anat dimming to plot_img?

Objection your honor: it shouldn't be on by default. Not every data is in
standard space. Not every data should be plotted would a background.
Actually, most data shouldn't.
",nan,nan
19,issue_comment,293,nilearn,nilearn,bthirion,2014-11-25 20:55:40,"Is there a way to test this feature ?
",nan,nan
20,issue_comment,293,nilearn,nilearn,lesteve,2014-11-26 09:40:19,"I reckon it could be tested with some matplotlib hackery.

As an aside nilearn plotting functions don't have tests besides smoke tests that only make sure no exception is raised, which is not great. Provided the right matplotlib incantations it is probably possible to check a few things like the threshold logic, the colorbar range, etc...
",nan,nan
21,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-26 10:06:41,"> I reckon it could be tested with some matplotlib hackery.

For now, I think that we want smoke test only. But we definitely want a
smoke test, ie all the lines of code should be covered.
",nan,nan
22,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2014-11-26 10:09:29,"As the strategy implemented here is not the ""right"" one, I am changing the title from MRG to WIP. Please change it back to MRG when done.
",nan,nan
23,issue_comment,293,nilearn,nilearn,eickenberg,2014-11-26 10:16:12,"thanks, I forgot to do that.
",nan,nan
24,issue_comment,293,nilearn,nilearn,bthirion,2014-11-26 10:23:49,"Agreed: a smoke test is better than no test. Simply think of potential issues with different matplotlib versions...
I understand that a real test is hard to make, and would not require it in this PR.
",nan,nan
25,issue_comment,293,nilearn,nilearn,eickenberg,2014-12-23 18:57:38,"With some very good input from @AlexandreAbraham I managed to make the requested half colorbar.

It already works on plot_localizer_simple_analysis.

I am now wondering: Do I re-double the xticks?
",nan,nan
26,issue_comment,293,nilearn,nilearn,bthirion,2015-01-04 22:14:41,"The example looks good. I don't think you need to add more yticks. 
Could you add a (smoke) test ?
",nan,nan
27,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-05 13:29:00,"Added back the typical number of ticks for such a colorbar.

![figure_1](https://cloud.githubusercontent.com/assets/1306635/5613591/f1b35d78-94e6-11e4-8b49-61c6c90813b2.png)

Will add smoke test.
",nan,nan
28,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-05 13:48:39,"Travis failure due to smoke tests: Smoke tests for plots invoke saving in order to force rendering. Saving is forced by passing a filename. `img_plotting._plot_img_with_bg` saves the file if a filename is provided and returns `None` instead of the active display object. Changing the colorbar a posteriori in `plot_stat_map` by interacting with the display object is thus impossible and raises an error.

Two possibilities for solving this:
- add `cbar_min`, `cbar_max` kwargs to `_plot_img_with_bg`, making colorbar range editing available to a wider number of functions (is this wanted at all?)
- do the saving by hand in `plot_stat_map` after the colorbar has been rendered.

Neither of the possibilities poses much of a problem. It is more a question of whether specifying `cbar_max` and `cbar_min` independently of `vmax, vmin` is generally useful or not.
",nan,nan
29,issue_comment,293,nilearn,nilearn,AlexandreAbraham,2015-01-05 13:54:26,"Option #3: turn _plot_img_with_bg into an object which plot the axis in the __init__, let you mess around with the colorbar, and render it (or save it to a file) in a .show() method. Note that I have not seen the code and therefore don't know if this make sense or not :confused: .
",nan,nan
30,issue_comment,293,nilearn,nilearn,lesteve,2015-01-05 14:08:29,"> add cbar_min, cbar_max kwargs to _plot_img_with_bg, making colorbar range editing available to a wider number of functions (is this wanted at all?)

I'd be in favor of this solution even if the colorbar tweaking is only used in plot_stat_map. In my mind _plot_img_with_bg is the generic helper function that user-facing functions call with different parameters.

An other option would be to add a callback that is called with the display as argument just before the save. Not sure which one is simpler.
",nan,nan
31,issue_comment,293,nilearn,nilearn,GaelVaroquaux,2015-01-05 15:40:30,">   • add cbar_min, cbar_max kwargs to _plot_img_with_bg, making colorbar range
>     editing available to a wider number of functions (is this wanted at all?)

This sounds about right to me. _plot_img_with_bg is somewhat of a
low-level swiss-army knife, and can thus be made more versatile.
",nan,nan
32,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-06 12:58:48,"swiss army knife made and plot_stat_map tested
",nan,nan
44,pull_request_commit_comment,293,nilearn,nilearn,AlexandreAbraham,2015-01-06 22:35:57,"I would expect the symmetric colorbar to work both ways: upper part of the original cbar if all values are positive and lower part of the cbar if all values are negative.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
45,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-01-06 22:37:23,"> I would expect the symmetric colorbar to work both ways: upper part of the
> original cbar if all values are positive and lower part of the cbar if all
> values are negative.

Good point!
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
46,pull_request_commit_comment,293,nilearn,nilearn,eickenberg,2015-01-07 06:50:51,"i would, too. but is this expected to happen for any type of data?

On Tuesday, January 6, 2015, Alexandre Abraham notifications@github.com
wrote:

> In nilearn/plotting/img_plotting.py
> https://github.com/nilearn/nilearn/pull/293#discussion-diff-22557878:
> 
> > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img, bg_img=MNI152TEMPLATE, cut_coords=None,
> >                      np.logical_not(stat_map_data._mask)])
> >          stat_map_max = np.nanmax(stat_map_data)
> >          stat_map_min = np.nanmin(stat_map_data)
> > +
> > -    if symmetric_cbar == 'auto':
> > -        symmetric_cbar = stat_map_min < 0
> 
> I would expect the symmetric colorbar to work both ways: upper part of the
> original cbar if all values are positive and lower part of the cbar if all
> values are negative.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/293/files#r22557878.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
47,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-01-07 06:54:21,"Yes. A t map with the contrast specified with the wrong sign for instance. 

Sent from my phone. Please forgive brevity and mis spelling

On Jan 7, 2015, 07:50, at 07:50, eickenberg notifications@github.com wrote:

> > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img,
> > bg_img=MNI152TEMPLATE, cut_coords=None,
> >                      np.logical_not(stat_map_data._mask)])
> >          stat_map_max = np.nanmax(stat_map_data)
> >          stat_map_min = np.nanmin(stat_map_data)
> > +
> > -    if symmetric_cbar == 'auto':
> > -        symmetric_cbar = stat_map_min < 0
> 
> i would, too. but is this expected to happen for any type of data?
> 
> On Tuesday, January 6, 2015, Alexandre Abraham
> notifications@github.com
> wrote:
> 
> > In nilearn/plotting/img_plotting.py
> > 
> > https://github.com/nilearn/nilearn/pull/293#discussion-diff-22557878:
> > 
> > > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img,
> > > bg_img=MNI152TEMPLATE, cut_coords=None,
> > >                      np.logical_not(stat_map_data._mask)])
> > >          stat_map_max = np.nanmax(stat_map_data)
> > >          stat_map_min = np.nanmin(stat_map_data)
> > > +
> > > -    if symmetric_cbar == 'auto':
> > > -        symmetric_cbar = stat_map_min < 0
> > 
> > I would expect the symmetric colorbar to work both ways: upper part
> > of the
> > original cbar if all values are positive and lower part of the cbar
> > if all
> > values are negative.
> > 
> > —
> > Reply to this email directly or view it on GitHub
> > https://github.com/nilearn/nilearn/pull/293/files#r22557878.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/293/files#r22572998
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
48,pull_request_commit_comment,293,nilearn,nilearn,eickenberg,2015-01-07 07:04:31,"but t values generally can take both signs and thus should be shown with
the full colorbar, but ok, i see the idea, and will add.

up until now i was thinking that showing only one half of the colorbar
should only be done if the values are necessarily and inherently of only
one sign (eg neg log p values). and in that case one has the choice of the
sign and won't let it be negative.

On Wednesday, January 7, 2015, Gael Varoquaux notifications@github.com
wrote:

> In nilearn/plotting/img_plotting.py
> https://github.com/nilearn/nilearn/pull/293#discussion-diff-22573083:
> 
> > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img, bg_img=MNI152TEMPLATE, cut_coords=None,
> >                      np.logical_not(stat_map_data._mask)])
> >          stat_map_max = np.nanmax(stat_map_data)
> >          stat_map_min = np.nanmin(stat_map_data)
> > +
> > -    if symmetric_cbar == 'auto':
> > -        symmetric_cbar = stat_map_min < 0
> 
> Yes. A t map with the contrast specified with the wrong sign for instance.
> Sent from my phone. Please forgive brevity and mis spelling
> … <#14ac32c444d9a712_>
> On Jan 7, 2015, 07:50, at 07:50, eickenberg <notifications@github.com
> <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> wrote: >> @@
> -586,7 +611,15 @@ def plot_stat_map(stat_map_img, >bg_img=MNI152TEMPLATE,
> cut_coords=None, >> np.logical_not(stat_map_data._mask)]) >> stat_map_max =
> np.nanmax(stat_map_data) >> stat_map_min = np.nanmin(stat_map_data) >> + >>
> - if symmetric_cbar == 'auto': >> + symmetric_cbar = stat_map_min < 0 > >i
>   would, too. but is this expected to happen for any type of data? > >On
>   Tuesday, January 6, 2015, Alexandre Abraham ><notifications@github.com
>   <javascript:_e(%7B%7D,'cvml','notifications@github.com');>> >wrote: > In
>   nilearn/plotting/img_plotting.py > <
>   https://github.com/nilearn/nilearn/pull/293#discussion-diff-22557878>: >
>   > > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img,
>   bg_img=MNI152TEMPLATE, cut_coords=None, > >
>   np.logical_not(stat_map_data._mask)]) > > stat_map_max =
>   np.nanmax(stat_map_data) > > stat_map_min = np.nanmin(stat_map_data) > > +
>   > > + if symmetric_cbar == 'auto': > > + symmetric_cbar = stat_map_min < 0
>   > > I would expect the symmetric colorbar to work both ways: upper part of
>   the > original cbar if all values are positive and lower part of the cbar
>   if all > values are negative. > > — > Reply to this email directly or view
>   it on GitHub > <
>   https://github.com/nilearn/nilearn/pull/293/files#r22557878>. > --- Reply
>   to this email directly or view it on GitHub:
>   https://github.com/nilearn/nilearn/pull/293/files#r22572998
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/293/files#r22573083.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
49,pull_request_commit_comment,293,nilearn,nilearn,bthirion,2015-01-07 07:43:02,"To be frank I don't think I have encountered such a use case in the past: while positive values van be seen for variance images, I have no idea of the equivalent for negative images.
On the other hand, I thinks that adding this use case could be useful in some cases that I can't figure out at the moment, and will not harm. 
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
50,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-01-07 07:56:14,"Ok

Sent from my phone. Please forgive brevity and mis spelling

On Jan 7, 2015, 08:43, at 08:43, bthirion notifications@github.com wrote:

> > @@ -586,7 +611,15 @@ def plot_stat_map(stat_map_img,
> > bg_img=MNI152TEMPLATE, cut_coords=None,
> >                      np.logical_not(stat_map_data._mask)])
> >          stat_map_max = np.nanmax(stat_map_data)
> >          stat_map_min = np.nanmin(stat_map_data)
> > +
> > -    if symmetric_cbar == 'auto':
> > -        symmetric_cbar = stat_map_min < 0
> 
> To be frank I don't think I have encountered such a use case in the
> past: while positive values van be seen for variance images, I have no
> idea of the equivalent for negative images.
> On the other hand, I thinks that adding this use case could be useful
> in some cases that I can't figure out at the moment, and will not harm.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/293/files#r22573993
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
33,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-07 10:26:41,"Added possibility for fully negative range to be detected. Also made tick marks adapt to the necessary order of magnitude in precision (done using `log10` of the amplitude. Not switching from `%f` to `%e` notation and not invoking any general matplotlib tick formatter -- open to suggestions if such a thing exists).
",nan,nan
34,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-07 10:30:29,"Possibly found a recipe for the latter in matplotlib
",nan,nan
35,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-07 11:55:34,"Simply not calling `set_tick_labels` causes the colorbar ticks to be formatted in a reasonable manner automatically.
",nan,nan
36,issue_comment,293,nilearn,nilearn,eickenberg,2015-01-29 16:41:41,"resolved conflict and squashed commits
",nan,nan
37,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-01 15:55:02,"Yeah I somehow reverted to an earlier version, all colorbar logic is back in plot_stat_map instead of _plot_img_with_bg.
",nan,nan
38,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-01 19:46:43,"OK this doesn't work for the travis machine with `MATPLOTLIB_VERSION=""1.4.2""`, a newer matplotlib than that which I used to code this feature. I am having troubles installing matplotlib from github right now, so I'll try to fix this on another machine.
",nan,nan
39,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-05 12:34:41,"In matplotlib 1.1.1 we have
`ColorbarBase.outline.get_ydata` and `ColorbarBase.outline.set_ydata`

In matplotlib 1.4.2, that doesn't exist, but there is
`ColorbarBase.outline.get_xy` and `ColorbarBase.outline.set_xy`.

There exists no function to this effect that is shared between versions. One way out of this would be to write helper functions `_get_y, _set_y` that render these differences transparent. Should I do that, or is there something smarter I can do?
",nan,nan
40,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-05 14:09:07,"Tests passing on matplotlib 1.4.2 as well now.
",nan,nan
51,pull_request_commit_comment,293,nilearn,nilearn,AlexandreAbraham,2015-02-05 14:34:35,"Thanks for all these details!
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(15, '', u'nilearn/_utils/fixes/matplotlib_backports.py')"
52,pull_request_commit_comment,293,nilearn,nilearn,AlexandreAbraham,2015-02-05 14:36:07,"I prefer to enclose boolean expression in parenthesis `
symmetric_cbar = (stat_map_min < 0 and stat_map_max > 0)`
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
53,pull_request_commit_comment,293,nilearn,nilearn,AlexandreAbraham,2015-02-05 14:38:20,"Same here.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(None, '', u'nilearn/plotting/img_plotting.py')"
41,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-05 16:06:45,"Yeah this is/was ready ...
",nan,nan
54,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:10:52,"Why are why introducing new keywords: could we use 'vmax' and 'threshold'?
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(13, '', u'nilearn/plotting/img_plotting.py')"
55,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:13:12,"@eickenberg convinced.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(13, '', u'nilearn/plotting/img_plotting.py')"
56,pull_request_commit_comment,293,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:14:26,"I meant: @eickenberg convinced me.
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(13, '', u'nilearn/plotting/img_plotting.py')"
57,pull_request_commit_comment,293,nilearn,nilearn,eickenberg,2015-02-05 16:14:44,"[ref](https://github.com/nilearn/nilearn/pull/293/#issuecomment-68725033)
",86f3d6b81dcbff8fcd42047eb7e3961d7a43ae08,"(13, '', u'nilearn/plotting/img_plotting.py')"
42,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-05 17:05:03,"Thanks!
",nan,nan
43,issue_comment,293,nilearn,nilearn,eickenberg,2015-02-06 07:44:12,"had a little après-sprint to make it grow up :)

On Friday, February 6, 2015, Gael Varoquaux notifications@github.com
wrote:

> > Thanks!
> 
> Looks like this merge right before a release was a bit premature :)
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/293#issuecomment-73188864.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
7,pull_request_commit_comment,377,nilearn,nilearn,lesteve,2015-02-02 08:31:02,"not needed anymore
",efd9b8fefe83645f9ed930683761715740a2aaa6,"(None, '', u'examples/connectivity/plot_canica_resting_state.py')"
8,pull_request_commit_comment,377,nilearn,nilearn,lesteve,2015-02-02 08:32:14,"I guess this unneeded nibabel import may be in other examples, would you mind double-checking?
",efd9b8fefe83645f9ed930683761715740a2aaa6,"(None, '', u'examples/connectivity/plot_canica_resting_state.py')"
9,pull_request_commit_comment,377,nilearn,nilearn,lesteve,2015-02-02 08:35:04,"I agree it's not super consistent but in examples, import are generally close to the code where they are needed to make in order to have an interactive session feel, where you import stuff where you realise you need them.

So maybe move this import below the `### Restrict to faces and houses` comment
",efd9b8fefe83645f9ed930683761715740a2aaa6,"(None, '', u'examples/decoding/plot_haxby_searchlight.py')"
10,pull_request_commit_comment,377,nilearn,nilearn,lesteve,2015-02-02 08:36:18,"A good way to do that for example: `pyflakes examples | grep nibabel`
",efd9b8fefe83645f9ed930683761715740a2aaa6,"(None, '', u'examples/connectivity/plot_canica_resting_state.py')"
11,pull_request_commit_comment,377,nilearn,nilearn,banilo,2015-02-02 12:41:28,"Merci, je ne connaissais pas.
",efd9b8fefe83645f9ed930683761715740a2aaa6,"(None, '', u'examples/connectivity/plot_canica_resting_state.py')"
6,issue_comment,377,nilearn,nilearn,banilo,2015-02-02 12:48:51,"Ok, clean-up done.
",nan,nan
12,pull_request_commit_comment,377,nilearn,nilearn,lesteve,2015-02-02 12:54:53,"FWIW `flake8 examples | grep nibabel` is probably better since it is going to give you PEP8 warnings as well.
",efd9b8fefe83645f9ed930683761715740a2aaa6,"(None, '', u'examples/connectivity/plot_canica_resting_state.py')"
5,issue_comment,377,nilearn,nilearn,GaelVaroquaux,2015-02-02 13:43:04,"This is great thanks Danilo, the example now look much cleaner, and we have lost 7 lines of code (which is a good indication that this is going in the right direction).
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
10,issue_comment,376,nilearn,nilearn,lesteve,2015-01-31 08:01:12,"Good catch! I am not sure how much time we should invest in this given #341.
",nan,nan
11,issue_comment,376,nilearn,nilearn,lesteve,2015-01-31 08:08:39,"Sorry I spoke too soon this is about one of the test and not the plot_ica_resting_state example...
",nan,nan
12,issue_comment,376,nilearn,nilearn,bcipolli,2015-01-31 17:37:02,"The problem for me is that these `UserWarning`s throw errors in #371, so this is causing a test error.  I believe making `UserWarning`s throw errors is the right thing--these warnings should never be triggered in a test unless we expect to trigger them.  They're supposed to tell users something unexpected.

For now, I suggest that one of the following be done:
- Skip the test only on neurodebian (i.e. it's broken, we don't know why, but we don't want to figure it out)
- Change the test so that the warning isn't thrown (i.e. the test isn't designed properly somehow)
- Change the test to accept only that specific warning if thrown (i.e. the test is designed properly, and the warning is irrelevant).

Advice is welcome!  Note that this affects #371, as well as the `python-3.x` branch I'm finishing up.
",nan,nan
4,issue_comment,376,nilearn,nilearn,AlexandreAbraham,2015-02-09 12:52:29,"This is a known issue. First, I don't think that this fix should be included in your PR about disabling warning. Second, I think that it is useful to run this test no matter the configuration. However, if it fails, it is possible to raison a SkipTestError to skip it if we really want to disable it.

For me, it is similar to the warning issue: for the moment, nilearn is in development and thus we don't have a top quality release, even if we're doing our best. This kind of concern should be raised later, for the 1.0 release for example.
",nan,nan
5,issue_comment,376,nilearn,nilearn,bcipolli,2015-02-10 19:04:58,"@AlexandreAbraham thanks; is there an existing issue describing what the problem is?  If not, could you add some info here as to what the issue is?
",nan,nan
6,issue_comment,376,nilearn,nilearn,AlexandreAbraham,2015-02-10 23:45:48,"CanICA is not deterministic so it fails in rare cases. See issue #60 and PR #61 that fixes the issue on most plaform (but unfortunately it still fails sometimes...).
",nan,nan
7,issue_comment,376,nilearn,nilearn,bcipolli,2015-02-11 00:02:26,"@AlexandreAbraham Thanks!  I think this may be a different issue?  I see the ICA warning that it has not converged on _every_ test run on the neurodebian build.  In addition, I never see a test failure--which I would expect to happen when ICA fails to converge.

Could be nothing, but also could be something.
",nan,nan
8,issue_comment,376,nilearn,nilearn,AlexandreAbraham,2015-02-11 00:12:47,"My bad. Well, in that case, juste increase the number of iterations. It should converge at some point.
",nan,nan
13,issue_comment,376,nilearn,nilearn,bcipolli,2015-02-18 15:08:23,"`max_iter` is not exposed as a parameter in `CanICA`.  I confirmed that if I up `max_iter`, it does solve the issue.

Would a PR that exposes `max_iter` in `CanICA`, and sent to `fastica`, be acceptable?  Or is another solution (exposing more `fastica` args, or simply ignoring the warning) preferred?
",nan,nan
3,issue_comment,376,nilearn,nilearn,GaelVaroquaux,2015-02-18 20:49:56,"> Would a PR that exposes max_iter in CanICA, and sent to fastica, be
> acceptable? Or is another solution (exposing more fastica args, or
> simply ignoring the warning) preferred?

I would ignore the warning and move on (as in: not do anything about it).
I am afraid that exposing too many parameters will simply scare away the
end user.
",nan,nan
9,issue_comment,376,nilearn,nilearn,lesteve,2015-02-27 11:51:54,"> I would ignore the warning and move on (as in: not do anything about it).

Agreed closing this one.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,196,nilearn,nilearn,GaelVaroquaux,2014-05-22 12:21:13,"Awesome!!!

Could you put here the images from the examples, please, so that we don't have to run them.
",nan,nan
5,issue_comment,196,nilearn,nilearn,GaelVaroquaux,2014-05-22 12:37:36,"Isn't it a problem if it's too long to regenerate on your laptop? I am afraid that people won't run this example. Can it be made faster, for instance being less ambitious on the number of permutations.
",nan,nan
6,issue_comment,196,nilearn,nilearn,GaelVaroquaux,2014-05-22 12:52:09,"The haxby example is very nice!
",nan,nan
7,issue_comment,196,nilearn,nilearn,GaelVaroquaux,2014-05-22 13:26:50,"Yeah, the last one is pretty mind blowing.

But the good news is that it works well not only in terms of number of detections, but also in terms of how plausible the results look.
",nan,nan
16,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 20:34:51,"I don't see what you mean in the last sentence. Apparently, this corresponds more to a description of your implementation that to a constraint on the input ?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
17,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 20:46:43,"summed across all parcellations
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
18,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 20:48:25,"Yields the maximum count across all voxels
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
19,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 20:52:41,"Could you clarify this ?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
20,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 20:53:47,"I belive that you expect it in p-value scale. Please clarify, especially to give the allowed range for this variable.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
21,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 21:02:00,"parcellations
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
22,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 21:10:56,"What happens if the sum is 0 ?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
23,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 21:11:34,"Missing doctring
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
24,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 21:16:23,"tested_vars_resid_covars
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
25,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 21:16:43,"target_vars_resid_covars
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
26,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 21:19:09,"replace 'behaves differently' by 'shows a different mean value'
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'plot_haxby_rpbi.py')"
27,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-26 21:21:27,"should be  -1 ;-)
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(68, '', u'plot_oasis_vbm_rpbi.py')"
28,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-05-27 07:29:49,"If it's an image-like, I would prefer if it could be named mask_img to respect the nilearn conventions. Also I think that we call that a ""niimg"".
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
29,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-05-27 07:50:57,"There is a loophole here: you are completely ignoring the step of the slice. Either you should take it in account or you should not use a slice object, but simply start and stop markets. 
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
30,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 08:51:07,"> I don't see what you mean in the last sentence.

Changed.

> [...] this corresponds more to a description of your implementation that to a constraint on the input?

I do not understand why it would be a problem, especially because the function is private and should only be looked at by developers.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
31,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 09:13:16,"Please check that the modification I made is correct.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
32,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 09:15:53,"Please check that the change is OK.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
33,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 09:24:39,"It crashes :-D

However, that would mean that the user is trying to normalize a matrix with at least one column of zeroes. Note that it is close to happening in the Oasis example, where we actually need some workaround to exclude to voxels with a zero between-subject variance from the analysis.

The correction I propose is the following:
- We catch the design problem (i.e. column(s) of zeros) early
- We raise a warning
- We use a inner mask in order to perform the analysis on the remaining, correct columns
- We return the results with zeros where there were some initially (using the inner mask again).
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
34,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 09:27:53,"I rather like using the underscores to separate relevant groups of words. In this case, the words ""tested"" and ""vars"" are closer than are ""resid"" and ""covars"". I do not know if there is a suitable convention for that.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
35,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 09:32:18,"`-np.log10(0.1)` = 1 actually ;p

Giving the explicit ""formula"" allows the user to modify the threshold more rapidly (I am not sure everyone knows that ""1"" should be turned to ""1.301"" when a 5% threshold is desired). And I am not sure everyone understand immediately how the ""1"" is obtained.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(68, '', u'plot_oasis_vbm_rpbi.py')"
36,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 11:56:44,"My bad: in the context of RPBI, it is very difficult to prevent such a design problem appears.
Indeed, a null feature only occurs when we the mean signal within one parcel is zero for every subject. It is impossible to check in advance.

I can correct the code of the permuted OLS to be robust to null features, but not that of RPBI.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
37,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-27 12:55:50,"To me, readability is more important than subtle semantic aspects. I think it is better if you correct these names.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
38,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 13:08:14,"I came up to the conclusion than trying to avoid null columns in the design was only a subcase of trying to avoid degenerated designs. I added a `ValueError` raising in the normalization function but did not try to prevent it from happening at an earliest stage.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
39,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-27 13:21:39,"Please document your choices
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
40,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-05-27 13:57:09,"Sorry but what do you mean?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
41,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-05-27 15:03:05,"Add a comment in the code to say that this line can create Nans/Infs, 
but that this is supposed to have been handled at a higher level.

B
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/utils.py')"
8,issue_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-17 09:16:15,"Could you indicate in the narrative documentation an estimate of the run-time (with n_jobs=1, on a 'typical fMRI data', specifying the CPU and using the default number of permutations). People have been asking me this. Please do this in a 'topic' container, and point out that 'n_jobs=-1' can speed things up.
",nan,nan
42,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 08:24:30,"that no effect is present
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'doc/building_blocks/massively_univariate_analysis.rst')"
43,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 08:34:12," Therefore, a small _p-value_ indicates that there is a small chance of getting this data if no real difference existed; in that sense, the effect is considered as _significant_.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'doc/building_blocks/massively_univariate_analysis.rst')"
44,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 08:52:33,"Shouldn't we forbid that thing having different thresholds ? I would like this object to be unaware of thresholds, as it is only meant to store sparse maps, not to make decisions on those. 
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
45,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 08:55:13,"Actually, what you call a score is somewhat unclear: the higher the better ? or rather p-value like ?
This is one of the reason why I don't like threshold to be explicit. The array should only know about data and indices.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
46,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 08:58:16,"This kind of boilerplate code should end up in a check_n_job function somewhere in utils
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
47,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 09:05:39,"depends on
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
48,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 09:07:34,"I dont see where the np.sqrt comes from
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
49,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 09:09:51,"> what you call a score is somewhat unclear: the higher the better ? or rather p-value like ?

It is ""the higher the better"".

> The array should only know about data and indices.

The convenient thing with GrowableSparseArrays is that you provide data to them, and they decide what they should store or not, depending on the threshold with which they have been initialized. The user does not have to worry about thresholding the data himself.
Besides, if the object ""knows"" what values it contains, it becomes self-content.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
50,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 09:13:37,"To be more clear: if no `threshold` attribute is present, GSArrays with various thresholds can live in the same world, without any possibility to tell which threshold has been used to create them (i.e. how selective they are with respect to the data they actually store). How to merge such object then? The developer always has to find back where and how the objects were created in order to know if they can be merged and how they could be.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
51,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 09:35:34,"But if I understand it correctly, I exactly want the opposite behavior: a dummy object that does not DO anything and simply stores maps. I especially do not want it to be generic in any sense: its is meant to be used locally in the rpbi code and that's all.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
52,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 09:46:43,"It is an heuristic formula. The square-root is convenient because it maps `max_elts` between 0 and 1 according to the `sparsity_threshold`. In the case above, we store F-values, which we do not expect to have a uniform distribution, so we expect the number of stored values to decrease as the sparsity_threshold value decrease. The important thing is that the relationship between both is not linear at all so there is a huge gain in using the sqrt.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
53,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 09:53:15,"Please comment on this.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
54,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 12:30:46,"Formulated in a slightly less abstract way, the test variate corresponds to the voxel index while the target variate corresponds to the effects that you are looking at.
Am I right if I say that there is always only one target_variable in the rpbi use of the class ? I yes, please remove that dimension that adds some complexity and confusion in the code.  
Once again, the idea is to make this class as trivial as possible.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
55,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 12:33:48,"> I exactly want the opposite behavior: a dummy object that does not DO anything and simply stores maps

Here I do not agree. I think it is up to the object to select the data that it stores. that way it can be ""fed"" transparently.
Once the threshold has been set up --depending on the type of values we want the GSArray to contain-- there is nothing to do but appending data and merging GSArrays together. That behavior makes the GSArrays usable as black boxes, which is an important feature for a data structure. Would the threshold be the responsibility of the developer, it would separate the theoretical properties of the object (i.e. ""it is suppose to contain data above a given threshold"") and what happen in practice (i.e. ""is it really the case?"").

> I especially do not want it to be generic in any sense

Yet I have been asked to name its entries with generic names (""x"", ""y"", ""iter"") ;-)
(see https://github.com/nilearn/nilearn/pull/157#discussion_r9372040, and one other former comment of yours: _""I think that the ides is that the structure is fed by some iterations of a given estimator, that might be a permuted estimator.""_)
For me it is not a matter of genericity, but a matter of modularity.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
56,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 12:39:22,"> Am I right if I say that there is always only one target_variable in the rpbi use of the class ?

No, there can be more than one tested variate (RPBI returns a n_tested_vars by n_voxels array). But you raise a good point since I think it is not tested.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
57,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-18 12:56:39,"> ```
> I exactly want the opposite behavior: a dummy object that does not DO
> anything and simply stores maps
> ```
> 
> Here I do not agree. I think it is up to the object to select the data that it
> stores. that way it can be ""fed"" transparently.
> 
> Once the threshold has been set up --depending on the type of values we want
> the GSArray to contain-- there is nothing to do but appending data and merging
> GSArrays together. That behavior makes the GSArrays usable as black boxes,
> which is an important feature for a data structure. Would the threshold be the
> responsibility of the developer, it would separate the theoretical properties
> of the object (i.e. ""it is suppose to contain data above a given threshold"")
> and what happen in practice (i.e. ""is it really the case?"").

I think that I made the same remark a while ago: the object should be a
data structure that is agnostic of its usage. The thresholding thing is
something that is related to the RPBI, it should not be in the
GrowableSparseArray. The logic behind this is that the code needs to be
understandable bits by bits, and not only after reading and processing
the whole code. Thus the GrowableSparseArray should do nothing more than
be a growable sparse array.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
58,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 12:58:32,"First, I agree that my opinion has changed across time. Note that  when I first looked at the code in February, I was trying to figure out how it worked: I was not commenting on the philospophy. I am increasingly worried about the maintenance burden. In particular, I am now really in favor of removing any complex logic that  may be hidden in GrowableSparseArrays. Specifically, 
- if none of our example uses a given dimension of the array, it has to be removed.
- If there is no scenario in which the threshold is changing, we should not even consider this possibility (actually, no user should be in position of using these structures)
- the thresholding operation has to be kept outside of the object.
  Please consider that it should be nothing but the simplest way to store and append sparse informations generated by a black box. In short, I want to it to be the minimal code that can be used to run the current examples of the library. We're not too far from that point.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
59,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 13:10:44,"Ok so now I think I understood what was unclear: it is the fact that the same value serves as the parameter in the RPBI method and as an heuristic bound that saves memory.

You are right and we were aware of the problem with Benoit. I think that now the code is much cleaner so that we may be able to do something to alleviate the problem. I will have a look at it right now.
Thanks for taking the time to explain things in details!
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
60,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-18 13:24:36,"Thx. look forward to it.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
61,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 13:28:40,"> if none of our example uses a given dimension of the array, it has to be removed.

Should I add an example where we perform variable screening with RPBI?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
62,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-18 14:36:48,"I'd rather not, because I don't think that it is a good use of RPBI.

However, can you explicit your thoughts: why would such an example explore more codepath of RPBI? I suspect that I am missing something here.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
63,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-18 14:44:25,"Rather than protecting the ', you should simply use "" for your string, as in ""'others' is not a list/tuple of ..."".

Also, I would rather have an error message like this: ""The 'other' parameter should be a list or tuple of GrowableSparseArray, you gave %s"" % type(other)"".
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
64,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-18 15:00:15,"That usecase is when you are have several external variables that you are testing for, right?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
65,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-18 15:02:31,"Please import simply this a 'sparse'. No need for renaming.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
66,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-18 15:02:53,"Please use local imports: from '..utils import ...'
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
67,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-18 16:35:59,"I think that I had already mentioned that earlier: I'd would prefer it if no application-specific names were used in the GrowableSparseArray. For instance, that 'n_iter' doesn't seem to me to fit to a concept of the GrowableSparseArray, but to a larger context.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
68,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 21:40:39,"What you said contradicts the discussion we had today with @bthirion: If I am not mistaken, GrowableSparseArray should not be generic at all since they are only used in the scope of RPBI.
Following this discussion, I therefore changed back all ""iter""/""iteration"" for ""perm""/""permutations"" because it helps the developer maintaining the GSArray code (because its link to RPBI is clearer).

So, I am not sure I understand your comment.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
69,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-18 21:43:16,"> What you said contradicts the discussion we had today with @bthirion: If I am
> not mistaken, GrowableSparseArray should not be generic at all since they are
> only used in the scope of RPBI.

Agreed: it shouldn't attempt to catter for all the usecases. It should
not be a swiss army knife.

> Following this discussion, I therefore changed back all ""iter""/""iteration"" for
> ""perm""/""permutations"" because it helps the developer maintaining the GSArray
> code (because its link to RPBI is clearer).

No. People need to be able to build a mental picture of what it does
without reader the whole code. Elsewhere it is hopeless to try to
understand the code.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
70,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 22:02:26,"So what you suggest is to use for instance 'z' instead of 'iter'/'perm', just like the two other dimensions are refered to as 'x' and 'y'?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
71,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 22:22:29,"Yes, these are tested independently. It is as if one would iterate on the tested variates and perform a RPBI each time. The targets and the confounds are always the same.
Instead of using a for loop, it is better to provide the tested variates to RPBI stacked in an array. Thus, a lot of computations are shared and done only once. 
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
72,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-18 22:24:57,"The 'x' dimension of GSArrays is only useful when several tested variates are considered.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
73,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-19 06:41:11,"My suggestion is to make clear that these dimensions are indexes, not data, which remains completely unclear if you use 'x', 'y'.
So I would use 'x' or 'data' for the data part, and 'i', 'j', 'k' or 'idx1', 'idx2', 'idx3' for indices.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
74,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-19 06:43:50,"I guess we've mostly sold RPBI as a means to perform inference on scalar maps. I would rather run RPBI several times if had to test several variates. @VirgileFritsch , do you agree ?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
75,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-19 07:03:35,"Because I don't have the whole code in my head, I hesitate to make strong suggestions with regards to naming. However my gut feeling is that idx1... as suggested by Bertrand would be good. 

<div>-------- Original message --------</div><div>From: bthirion notifications@github.com </div><div>Date:19/06/2014  08:41  (GMT+01:00) </div><div>To: nilearn/nilearn nilearn@noreply.github.com </div><div>Cc: Gael Varoquaux gael.varoquaux@normalesup.org </div><div>Subject: Re: [nilearn] NF: Randomized Parcellation Based Inference (#196) </div><div>
</div>In nilearn/mass_univariate/rpbi.py:

> -    (iii) a target variate.
> -    Memory is pre-allocated to store a large number of scores. The structure
> -    can be indexed efficiently according to three dimensions to add new
> -    scores at the right position fast.
> -    The allocated space can be extended if needed, but we want to avoid this
> -    because it is costly. User should carefully initialize the structure.
> -    Only scores above a predetermined threshold are actually stored, others
> -    are ignored.
>   +
> -    Attributes
> -    ----------
> -    n_elts: int
> -      The total number of scores actually stored into the data structure
>   +
> -    n_iter: int
> -      Number of trials (using as many iterators)
>   My suggestion is to make clear that these dimensions are indexes, not data, which remains completely unclear if you use 'x', 'y'.
>   So I would use 'x' or 'data' for the data part, and 'i', 'j', 'k' or 'idx1', 'idx2', 'idx3' for indices.

—
Reply to this email directly or view it on GitHub.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
76,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-19 07:04:58,"Well there are only three ""named"" axes/dimensions, no indices properly
speaking. One dimension is used to index the permutation number and is
called ""iter"" (or ""perm""). The second and third dimensions are used to
index a target variate ('y') and a tested variate ('x').

I will do a commit with 'iter' --> 'z' and see if it suits.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
77,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-19 07:04:58,"Same gut feeling: let's make the code simple and touch the 95% use cases. 

<div>-------- Original message --------</div><div>From: bthirion notifications@github.com </div><div>Date:19/06/2014  08:43  (GMT+01:00) </div><div>To: nilearn/nilearn nilearn@noreply.github.com </div><div>Cc: Gael Varoquaux gael.varoquaux@normalesup.org </div><div>Subject: Re: [nilearn] NF: Randomized Parcellation Based Inference (#196) </div><div>
</div>In nilearn/mass_univariate/rpbi.py:

> -            raise TypeError(
> -                '\'others\' is not a list/tuple of GrowableSparseArray '
> -                'or a GrowableSparseArray.')
> -        for gs_array in others:
> -            if not isinstance(gs_array, GrowableSparseArray):
> -                raise TypeError('List element is not a GrowableSparseArray.')
> -            if gs_array.n_iter != self.n_iter:
> -                raise ValueError('Cannot merge a structure with %d iterations '
> -                                'into a structure with %d iterations.'
> -                                % (gs_array.n_iter, self.n_iter))
>   +
> -        acc_sizes = [self.sizes]
> -        acc_data = [self.get_data()]
> -        for gs_array in others:
> -            # threshold the data to respect self.threshold
> -            if gs_array.threshold < self.threshold:
>   I guess we've mostly sold RPBI as a means to perform inference on scalar maps. I would rather run RPBI several times if had to test several variates. @VirgileFritsch , do you agree ?

—
Reply to this email directly or view it on GitHub.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
78,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-19 07:08:21,"I do not because re-running RPBI implies re-running the permutations (and
the parcellations building if not cached).

I agree that testing several variates is not the main use case, but
actually in the paper we show an example were 27 SNP from a gene are tested
in the same manner. Would not it be possible to use multiple tested
variates with RPBI, the computation time may be up to 27 time bigger.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
79,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-19 07:09:50,"I think that this discussion is really highlighting a difficulty of the code: I can never fit in my head what this structure corresponds to. We need to find good names and good comments. 

<div>-------- Original message --------</div><div>From: Virgile Fritsch notifications@github.com </div><div>Date:19/06/2014  09:04  (GMT+01:00) </div><div>To: nilearn/nilearn nilearn@noreply.github.com </div><div>Cc: Gael Varoquaux gael.varoquaux@normalesup.org </div><div>Subject: Re: [nilearn] NF: Randomized Parcellation Based Inference (#196) </div><div>
</div>In nilearn/mass_univariate/rpbi.py:

> -    (iii) a target variate.
> -    Memory is pre-allocated to store a large number of scores. The structure
> -    can be indexed efficiently according to three dimensions to add new
> -    scores at the right position fast.
> -    The allocated space can be extended if needed, but we want to avoid this
> -    because it is costly. User should carefully initialize the structure.
> -    Only scores above a predetermined threshold are actually stored, others
> -    are ignored.
>   +
> -    Attributes
> -    ----------
> -    n_elts: int
> -      The total number of scores actually stored into the data structure
>   +
> -    n_iter: int
> -      Number of trials (using as many iterators)
>   Well there are only three ""named"" axes/dimensions, no indices properly speaking. One dimension is used to index the permutation number and is called ""iter"" (or ""perm""). The second and third dimensions are used to index a target variate ('y') and a tested variate ('x').
>   …
>   —
>   Reply to this email directly or view it on GitHub.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
80,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-19 07:10:01,"Sorry, what I said is wrong. Please ignore it. I re-read your previous
comment and understood.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
81,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-19 07:10:57,"So let's go with 'data', 'x', 'y' and 'z'.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
82,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-06-19 07:22:27,"I will drop the 'x' dimension, but before I do that I would like to address
the others comments and keep the ""multi-tested_vars"" version in a branch on
my nilearn fork (so as to regenerate small examples of, say, gene
screening).
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
83,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-06-19 07:26:13,"Sorry, but as a matter of taste, I prefer 'i', 'j', 'k' if it is clear that these are indices. 'x', 'y' 'z' correspond in my mind to continuous quantities. 

----- Mail original -----

> De: ""Virgile Fritsch"" notifications@github.com
> À: ""nilearn/nilearn"" nilearn@noreply.github.com
> Cc: ""bthirion"" bertrand.thirion@inria.fr
> Envoyé: Jeudi 19 Juin 2014 09:10:57
> Objet: Re: [nilearn] NF: Randomized Parcellation Based Inference (#196)
> 
> In nilearn/mass_univariate/rpbi.py:
> 
> > -    (iii) a target variate.
> > -    Memory is pre-allocated to store a large number of scores. The
> >   structure
> > -    can be indexed efficiently according to three dimensions to add new
> > -    scores at the right position fast.
> > -    The allocated space can be extended if needed, but we want to avoid
> >   this
> > -    because it is costly. User should carefully initialize the structure.
> > -    Only scores above a predetermined threshold are actually stored,
> >   others
> > -    are ignored.
> >   +
> > -    Attributes
> > -    ----------
> > -    n_elts: int
> > -      The total number of scores actually stored into the data structure
> >   +
> > -    n_iter: int
> > -      Number of trials (using as many iterators)
> >   So let's go with 'data', 'x', 'y' and 'z'.
> 
> —
> Reply to this email directly or view it on GitHub .
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
9,issue_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-19 16:06:17,"You have failing tests (that's just side remark, I'll take a look at the code anyhow).
",nan,nan
84,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-19 16:09:14,"Actually, at some point, I think that it would be great to contribute this to joblib. No hurry, though
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(10, '', u'nilearn/_utils/common_checks.py')"
85,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-19 16:15:59,"Also, it would be good to have a unit-test for this function, that triggers raising the exceptions and does atomic checks that we are getting what we think we should be getting.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(10, '', u'nilearn/_utils/common_checks.py')"
10,issue_comment,196,nilearn,nilearn,GaelVaroquaux,2014-06-19 19:45:47,"> Thanks for the simplifcations, this is really great. Please take care of the
> failing tests, then OK for merging.

We are actually discussing with Virgile to see if standard CSR matrices can
replace the GrowableSparseArray. I think it is the case, and we are going
to see if it is possible to implement them.
",nan,nan
12,issue_comment,196,nilearn,nilearn,chrisfilo,2014-07-03 12:30:26,"If you merge it before Monday I will be able to show a demo at our journal club :)
",nan,nan
11,issue_comment,196,nilearn,nilearn,GaelVaroquaux,2014-07-03 12:34:36,"> If you merge it before Monday I will be able to show a demo at our
> journal club :)

I'll try to merge on Saturday then.
",nan,nan
86,pull_request_commit_comment,196,nilearn,nilearn,chrisfilo,2014-07-07 19:30:23,"Please add description of the 'auto' option.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(776, '', u'nilearn/mass_univariate/rpbi.py')"
87,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-07-10 17:42:52,"There's a bug here: if the provided mask_img is a NitfiImage,  np.asarray(mask_img) will make something inconsistent. @VirgileFritsch could you correct this ?
Otherwise, rpbi is really impressive in terms of computation speed : great job !
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
88,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-07-10 19:23:21,"Hmmm... From the code that I see above your comment, a NiftiImage will
correspond to the case where chek_niimg is called? Am I wrong?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
89,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-07-10 19:25:17,"> > -    ### Build parcellations
> > -    if not isinstance(mask_img, np.ndarray):
> > -        mask_img = check_niimg(mask_img)
> 
> Hmmm... From the code that I see above your comment, a NiftiImage will
> correspond to the case where chek_niimg is called? Am I wrong?

To me, the lines above do not make sens: mask_img should either be a
niimg-like, or an ndarray, but it should not have both options possible.
We want to separate clearly the world of niimgs and of ndarrays.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
90,pull_request_commit_comment,196,nilearn,nilearn,AlexandreAbraham,2014-07-11 12:16:44,"A good practice is to drop the `_img` suffix after calling `check_niimg`.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
91,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-07-11 15:35:01,"In any case, an error is returned when you provide a Nifti1Image.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
92,pull_request_commit_comment,196,nilearn,nilearn,GaelVaroquaux,2014-07-11 16:31:22,"> A good practice is to drop the _img suffix after calling check_niimg.

Wait, why? It stays a niimg, and the naming convention is that all niimgs
should end with _img.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
93,pull_request_commit_comment,196,nilearn,nilearn,AlexandreAbraham,2014-07-11 17:40:31,"Of course, I wanted to say after calling `get_data`, because in my head, the line above should be `mask = check_niimg(mask_img).get_data()`.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(None, '', u'nilearn/mass_univariate/rpbi.py')"
94,pull_request_commit_comment,196,nilearn,nilearn,VirgileFritsch,2014-08-01 20:18:24,"Done.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(776, '', u'nilearn/mass_univariate/rpbi.py')"
95,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-12 13:06:52,"This raises an error: replace with
p_ma = np.ma.masked_less(neg_log_pvals_rpbi_unmasked, vmin)
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(116, '', u'plot_haxby_rpbi.py')"
145,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-12 13:46:53,"corresponds
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(13, 592, u'nilearn/mass_univariate/rpbi.py')"
96,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-12 13:51:56,"consists in ('consists of' refers to the composition of...)
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(47, '', u'doc/building_blocks/massively_univariate_analysis.rst')"
97,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-12 13:54:04,"the same probability as
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(70, '', u'doc/building_blocks/massively_univariate_analysis.rst')"
98,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-12 13:55:07,"the smaller its associated p-value.
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(79, '', u'doc/building_blocks/massively_univariate_analysis.rst')"
99,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-12 15:02:52,"conveys
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(134, '', u'doc/building_blocks/massively_univariate_analysis.rst')"
100,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-12 15:03:32,"obtains
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(146, '', u'doc/building_blocks/massively_univariate_analysis.rst')"
101,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-15 01:33:49,"optional (ans also the next arguments)
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(242, '', u'nilearn/mass_univariate/rpbi.py')"
102,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-15 01:37:13,"n_wards -> n_parcellations
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(274, '', u'nilearn/mass_univariate/rpbi.py')"
103,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-15 01:41:07,"maybe this could be made private is it is not use outside  of the module ?
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(315, '', u'nilearn/mass_univariate/rpbi.py')"
104,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-15 01:48:44,", optional
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(471, '', u'nilearn/mass_univariate/rpbi.py')"
105,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-15 01:50:33,", optional
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(580, '', u'nilearn/mass_univariate/rpbi.py')"
106,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-15 01:57:31,", optional
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(759, '', u'nilearn/mass_univariate/rpbi.py')"
107,pull_request_commit_comment,196,nilearn,nilearn,bthirion,2014-09-15 13:51:38,"optional
",f9b9853cca225285e81a6f0a5d586225b632a3c1,"(115, '', u'nilearn/mass_univariate/utils.py')"
13,issue_comment,196,nilearn,nilearn,bthirion,2014-09-15 18:28:11,"Besides the tiny comments I did recently, I have one question on the use of GrowableSparseArrays: they ultimately yield (i, j, data) where i is a permutation index, j is a position index, and data a statistical value. The alternative  would be ton construct lists of i, j, data arrays (one list per permutation) and then to concatenate the lists to get the result as a COO matrix.
Why wasn't this done ? because it is too slow ? or to simplify the API ?
This question is mostly  to know whether we can avoid the use of this structure in the future.
Thanks for the work. 
",nan,nan
14,issue_comment,196,nilearn,nilearn,AlexandreAbraham,2014-10-31 08:20:35,"@bthirion, if I remember well my discussions with Benoît about this data structure, it is faster to preallocate the memory. I'm sure that he should have some bench results somewhere if you want to convince yourself.
",nan,nan
15,issue_comment,196,nilearn,nilearn,lesteve,2015-02-02 08:16:40,"Closing this one in favor of #375.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,pull_request_commit_comment,393,nilearn,nilearn,AlexandreAbraham,2015-02-05 12:47:59,"I agree that these names are better but shouldn't we stick to the semantic used in the paper?
",8a6dc4f4551f52a08c28b6d1f15d547483fa6ada,"(6, '', u'nilearn/datasets.py')"
6,pull_request_commit_comment,393,nilearn,nilearn,banilo,2015-02-05 13:37:48,"Isn't it rare to use capital-letter-only variable names in nilearn?
",8a6dc4f4551f52a08c28b6d1f15d547483fa6ada,"(13, '', u'examples/plot_atlas.py')"
7,pull_request_commit_comment,393,nilearn,nilearn,bthirion,2015-02-05 13:42:51,"I had a  quick look at the paper, and did not find these names. However, they are present in the following page
http://surfer.nmr.mgh.harvard.edu/fswiki/CorticalParcellation_Yeo2011
I do not have any strong opinion: the names are probably slightly better. Do we need to have some kind of compatibility with the freesurfer site ?
",8a6dc4f4551f52a08c28b6d1f15d547483fa6ada,"(6, '', u'nilearn/datasets.py')"
8,pull_request_commit_comment,393,nilearn,nilearn,GaelVaroquaux,2015-02-05 15:34:08,"After discussion with the group, we feel that it was better renaming this variable to lowercase.

I am implementing this change right now and merging. Thanks @bthirion 
",8a6dc4f4551f52a08c28b6d1f15d547483fa6ada,"(13, '', u'examples/plot_atlas.py')"
4,issue_comment,393,nilearn,nilearn,GaelVaroquaux,2015-02-05 15:37:54,"Merged. Thank you!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,390,nilearn,nilearn,bcipolli,2015-02-05 03:14:04,"I'm an idiot; there _is_ no `bg_img` for `plot_glass_brain`.  Right! :)
",nan,nan
3,issue_comment,390,nilearn,nilearn,lesteve,2015-02-05 06:19:01,"That must be one of the fastest resolved nilearn issue ever, good for our statistics :wink: !
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
9,issue_comment,397,nilearn,nilearn,lesteve,2015-02-05 15:31:16,"I really liked the fact that this was testing a litte bit of our setup.py (pip installing nibabel if it wasn't already installed) . Can we still have that if the NIBABEL is not defined?
",nan,nan
5,issue_comment,397,nilearn,nilearn,AlexandreAbraham,2015-02-10 16:25:03,"What is blocking this one?
",nan,nan
6,issue_comment,397,nilearn,nilearn,lesteve,2015-02-10 17:12:26,"In the mist of the sprint I have to admit I didn't fully follow how it was decided to bump up required versions so a brief reminder would be greatly appreciated. In particular does scikit-learn 0.12.1 have a special meaning?

At the very least I would keep an unaldurated neurodebian (i.e. with matplotlib), because it seems like a reasonable target given our end users and move the ""no matplotlib"" tests to a conda based environment.
",nan,nan
4,issue_comment,397,nilearn,nilearn,GaelVaroquaux,2015-02-10 17:14:36,"> In the mist of the sprint I have to admit I didn't fully follow how it was
> decided to bump up required versions so a brief reminder would be greatly
> appreciated.

Supporting scikit-learn 0.10 was too expensive, and neurodebian means
that even old ubuntu install can easily get more recent versions.

> In particular does scikit-learn 0.12.1 have a special meaning?

No. It's a configuration that's 2 years old, and we felt that 2 years old
was a good time.

> At the very least I would keep an unaldurated neurodebian (i.e. with
> matplotlib), because it seems like a reasonable target given our end users and
> move the ""no matplotlib"" tests to a conda based environment.

Agreed!
",nan,nan
7,issue_comment,397,nilearn,nilearn,bcipolli,2015-02-28 22:32:29,"I rebased to master here:
https://github.com/bcipolli/nilearn/tree/kshmelkov-master

I need to be on the proper versions to test the `fix_warnings` PR (https://github.com/nilearn/nilearn/pull/371).  Are there any concerns with the versions used to test in this PR?

Thanks!
",nan,nan
8,issue_comment,397,nilearn,nilearn,lesteve,2015-03-18 13:42:27,"Closed in favor of #502.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,396,nilearn,nilearn,GaelVaroquaux,2015-02-05 13:34:01,"This should probably go in sphinx_gallery, where it should be documented.
",nan,nan
6,issue_comment,396,nilearn,nilearn,salma1601,2015-02-05 16:28:16,"I have the same problem, will be interested by that
+1 for PR
",nan,nan
4,issue_comment,396,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:32:35,"The PR should go to the sphinx-gallery project that will be integrated to
nilearn
",nan,nan
5,issue_comment,396,nilearn,nilearn,AlexandreAbraham,2015-04-17 07:38:00,"Not a nilearn problem, so I close it.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,pull_request_commit_comment,395,nilearn,nilearn,AlexandreAbraham,2015-02-05 13:05:49,"I think it would be better for the user to output the atlas items so the user knows the option.
",d15f94af8d85236c8084e24585f750e87a5af3b7,"(59, '', u'nilearn/datasets.py')"
6,pull_request_commit_comment,395,nilearn,nilearn,AlexandreAbraham,2015-02-05 13:06:12,"`dirname *is* None`
",d15f94af8d85236c8084e24585f750e87a5af3b7,"(63, '', u'nilearn/datasets.py')"
7,pull_request_commit_comment,395,nilearn,nilearn,AlexandreAbraham,2015-02-05 13:08:24,"Put this in the previous condition with an `and` statement.
",d15f94af8d85236c8084e24585f750e87a5af3b7,"(65, '', u'nilearn/datasets.py')"
8,pull_request_commit_comment,395,nilearn,nilearn,AlexandreAbraham,2015-02-05 13:12:02,"Honestly? Why adding '..' and not removing 'HarvardOxford' above?
",d15f94af8d85236c8084e24585f750e87a5af3b7,"(68, '', u'nilearn/datasets.py')"
9,pull_request_commit_comment,395,nilearn,nilearn,AlexandreAbraham,2015-02-05 13:25:40,"FYI information, all these cases are already handled in _get_dataset_dir, you shouldn't do that manually. I will fix that, take a look when you have time.
",d15f94af8d85236c8084e24585f750e87a5af3b7,"(75, '', u'nilearn/datasets.py')"
10,pull_request_commit_comment,395,nilearn,nilearn,banilo,2015-02-05 13:33:15,"Good idea.
",d15f94af8d85236c8084e24585f750e87a5af3b7,"(59, '', u'nilearn/datasets.py')"
 , , , , , , , , , 
 , , , , , , , , , 
6,pull_request_commit_comment,394,nilearn,nilearn,AlexandreAbraham,2015-02-05 11:18:27,"Can you state in one line why it is relevant?
",a93328ba834f652333bc7d8411d22af2c6788c47,"(8, '', u'doc/building_blocks/data_preparation.rst')"
7,pull_request_commit_comment,394,nilearn,nilearn,AlexandreAbraham,2015-02-05 11:19:31,"I know that it was the code but I think that `sparsity = (prec == 0)` is clearer.
",a93328ba834f652333bc7d8411d22af2c6788c47,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
8,pull_request_commit_comment,394,nilearn,nilearn,lesteve,2015-02-05 11:19:50,"I think you can just remove the :align: lines (i.e. it defaults to left by default)
",a93328ba834f652333bc7d8411d22af2c6788c47,"(None, '', u'doc/building_blocks/data_preparation.rst')"
9,pull_request_commit_comment,394,nilearn,nilearn,lesteve,2015-02-05 11:21:25,"Does this do some kind of horizontal line?
",a93328ba834f652333bc7d8411d22af2c6788c47,"(None, '', u'doc/building_blocks/data_preparation.rst')"
10,pull_request_commit_comment,394,nilearn,nilearn,kshmelkov,2015-02-05 12:12:03,"Note aligns on the same line that image. I figured out that in other parts of doc such notes are in the beginning of section. So I moved it just after the header for consistency and nice html display.
",a93328ba834f652333bc7d8411d22af2c6788c47,"(8, '', u'doc/building_blocks/data_preparation.rst')"
11,pull_request_commit_comment,394,nilearn,nilearn,kshmelkov,2015-02-05 12:16:43,"Corrected.
",a93328ba834f652333bc7d8411d22af2c6788c47,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
12,pull_request_commit_comment,394,nilearn,nilearn,kshmelkov,2015-02-05 12:17:47,"Yes. Since images aren't sideimages anymore, we should make clear connection between a code snippet and its output.
",a93328ba834f652333bc7d8411d22af2c6788c47,"(None, '', u'doc/building_blocks/data_preparation.rst')"
5,issue_comment,394,nilearn,nilearn,lesteve,2015-02-05 13:00:09,"OK looks good merging, thanks a lot.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
12,issue_comment,399,nilearn,nilearn,lesteve,2015-02-12 10:08:57,"@Titan-C you have a tiny merge conflict in one of the examples. Would you mind rebasing on master and fixing it?
",nan,nan
13,issue_comment,399,nilearn,nilearn,lesteve,2015-02-12 10:26:36,"Also there is a new example examples/manipulating/visualizing/plot_atlas.py that needs parentheses around its print statement.
",nan,nan
14,issue_comment,399,nilearn,nilearn,Titan-C,2015-02-12 13:01:54,"Done
",nan,nan
15,issue_comment,399,nilearn,nilearn,lesteve,2015-02-12 14:01:27,"Thanks I think you should remove the old gallery generating code, for example gen_rst.py and related css.

Also I think what @GaelVaroquaux had in mind was shipping a version of sphinx-gallery in nilearn/doc/sphinxext rather than requiring to do `pip install sphinx-gallery`.
",nan,nan
5,issue_comment,399,nilearn,nilearn,GaelVaroquaux,2015-02-12 14:04:16,"> Also I think what @GaelVaroquaux had in mind was shipping a version of
> sphinx-gallery in nilearn/doc/sphinxext rather than requiring to do pip
> install sphinx-gallery.

Yes.
",nan,nan
16,issue_comment,399,nilearn,nilearn,Titan-C,2015-02-12 22:34:26,"I was also wondering about that. If one keeps a local version of the sphinx-gallery extension, and probably every project will keep its own local copy. What was the aim of keeping the centralized extension? wont all versions end up branching again? Isn't it better to use the git version installed in `develop` mode more practical?
I was having a look at the scikit-learn externals. It is a static set of code that gets updated manually, why? and why the extra install scripts within that module?
",nan,nan
17,issue_comment,399,nilearn,nilearn,lesteve,2015-02-13 08:24:05,"> I was also wondering about that. If one keeps a local version of the sphinx-gallery extension, and probably every project will keep its own local copy. What was the aim of keeping the centralized extension? wont all versions end up branching again? Isn't it better to use the git version installed in develop mode more practical?

I guess it's up to each project to make a choice whether they want to ship sphinx-gallery or not. The main point of doing so is pure convenience for people generating the doc.

About sphinx-gallery evolving separately in different projects, there is an implicit agreement that only released versions of sphinx-gallery should be used and that potential changes should be propagated upstream.

> I was having a look at the scikit-learn externals. It is a static set of code that gets updated manually, why? and why the extra install scripts within that module?

I guess convenience again is the main reason. Users are spared having to install a few packages in order to use scikit-learn. I think the technical term is vendorizing, you may want to see what the internet has to say about it. I didn't know about the extra install scripts in external so I can't help on this one.
",nan,nan
6,issue_comment,399,nilearn,nilearn,GaelVaroquaux,2015-02-13 08:38:20,"> If one keeps a local version of the sphinx-gallery extension, and
> probably every project will keep its own local copy. What was the aim
> of keeping the centralized extension? wont all versions end up
> branching again?

Keeping a local version doesn't mean that we will branch. The idea is to
have a synchronization script that copies exactly the sphinx-gallery code
in the projects that use it. In these projects it should never be
modified. One example of this pattern is how joblib is integrated in
scikit-learn, in sklearn/externals.

> Isn't it better to use the git version installed in develop mode more
> practical?

More practical for you. It raises two problems. One is of technicality.
It's one more thing to learn and master for a contributor. These things
pile up and make it harder and harder to contribute to a project. The
second problem is that it means that any backword incompatible change or
bug introduce in sphinx-gallery will break the projects using it.
Decoupling is a good thing.
",nan,nan
33,issue_comment,399,nilearn,nilearn,lesteve,2015-02-13 12:39:58,"Something I didn't spot right away. We added some additional text at the top of the examples gallery and this was added directly in gen_rst.py

![nilearn_examples_header](https://cloud.githubusercontent.com/assets/1680079/6187300/344c09de-b385-11e4-8809-23f5a6321177.png)

For now a work-around would be to move this text to examples/README.rst.
",nan,nan
34,issue_comment,399,nilearn,nilearn,lesteve,2015-02-16 10:29:51,"Great job, this looks pretty close to me! I am regenerating the doc and I'll have a closer look later this afternoon.
",nan,nan
35,issue_comment,399,nilearn,nilearn,lesteve,2015-02-16 12:17:17,"Tiny comment: I am wondering whether the joblib import in doc_resolv.py should not try to import it from sklearn.externals as a fall-back if joblib is not installed.

The good: no extra package to install to generate the doc for nilearn, scikit-learn, and other packages users that have scikit-learn installed.

The not that great: a tiny bit of scikit-learn specific code for projects that are potentially unrelated. 

I was thinking something along those lines (but with a better error message):

``` python
try:
    import joblib
except ImportError as exc_joblib:
    try:
        from sklearn.externals import joblib
    except ImportError as exc_sklearn_joblib:
        exc_sklearn_joblib.args += ('joblib or scikit-learn needs to be installed',)
        raise
```
",nan,nan
7,issue_comment,399,nilearn,nilearn,GaelVaroquaux,2015-02-16 12:23:17,"> Tiny comment: I am wondering whether the joblib import in doc_resolv.py should
> not try to import it from sklearn.externals as a fall-back if joblib is not
> installed.

:+1:. We cannot have a joblib dependency.

I would actually favor not using joblib but a simple shelve, and a test
to see if the URL is already in the shelve.

Here is some pseudo code to implement what I have in mind:

<pre>
import shelve
mem = shelve.open('foo')
if not url in mem:
    data = get_url(url)
    mem[url] = data
    mem.sync()
else:
    data = mem[url]
</pre>
",nan,nan
36,issue_comment,399,nilearn,nilearn,lesteve,2015-02-16 13:30:30,"I don't know the code very well so it's hard for me to estimate how easy the shelve solution is and whether it would take some time to get right.

I would be inclined to say let's just use the joblib + sklearn.externals.joblib fall-back for now so that we can merge this PR.

As far as I know, the two projects that are closer to start using sphinx-gallery are nilearn and scikit-learn anyway.
",nan,nan
8,issue_comment,399,nilearn,nilearn,GaelVaroquaux,2015-02-16 16:41:46,"> I would be inclined to say let's just use the joblib +
> sklearn.externals.joblib fall-back for now so that we can merge this
> PR.

I'd rather not. Creeping dependencies are a problem, and we must tackle
them. The pseudo code that I have given demonstrates how easy it is to
use shelve.

> As far as I know, the two projects that are closer to start using
> sphinx-gallery are nilearn and scikit-learn anyway.

Well, as Oscar is mentionning, it's already posing problems for CI.

But anyhow, let us foster adoption by having little dependencies.
",nan,nan
37,issue_comment,399,nilearn,nilearn,lesteve,2015-02-16 16:57:06,"> Well, as Oscar is mentionning, it's already posing problems for CI. 

Fair point, let's go for the shelve way then.
",nan,nan
38,issue_comment,399,nilearn,nilearn,lesteve,2015-02-16 17:02:04,"> > Well, as Oscar is mentionning, it's already posing problems for CI. 
> 
> Fair point, let's go for the shelve way then.

Actually not such a fair point, since the import joblib would work for the sphinx-gallery CI but I agree the shelve solution doesn't seem so hard and is the right way to do it.
",nan,nan
18,issue_comment,399,nilearn,nilearn,Titan-C,2015-03-17 23:38:34,"This includes the shelve and is rebased to the current master. There are more examples than in the current nilearn website. In my computer there seems to be 2 examples that don't get executed. I can't figure out why? On the rest it does work.
",nan,nan
19,issue_comment,399,nilearn,nilearn,lesteve,2015-03-18 07:31:24,"Thanks a lot for rebasing on master! The nilearn website hasn't been updated since the latest release so that would explain why it doesn't feature examples that have been added recently.

Ideally what we want is to make a sphinx-gallery release and use it in nilearn. Do you think this is feasible?
",nan,nan
39,pull_request_commit_comment,399,nilearn,nilearn,lesteve,2015-03-18 07:34:02,"I think this file should be kept unchanged because this changes are not really related to this PR or are they?
",f733ad2b1521f4474d050a00c89004509f775441,"(1, '', u'examples/decoding/plot_simulated_data.py')"
40,pull_request_commit_comment,399,nilearn,nilearn,Titan-C,2015-03-18 08:16:49,"This is the only remaining part of the py2 py3 compatibility, as all print functions disapeared on rebase. This is needed because sphinx-gallery imports from future division, so it really requires integers as keys it crashes otherwise.
",f733ad2b1521f4474d050a00c89004509f775441,"(1, '', u'examples/decoding/plot_simulated_data.py')"
20,issue_comment,399,nilearn,nilearn,Titan-C,2015-03-18 08:24:54,"> Ideally what we want is to make a sphinx-gallery release and use it in nilearn. Do you think this is feasible?

Publishing sphinx-gallery as 0.0.7 with the shelve is straight forward, can upload to pypi now. But I wouldn't launch it yet as a stable release. As some to do from @GaelVaroquaux are still missing. https://github.com/sphinx-gallery/sphinx-gallery/issues/20
Moreover I want to test a bit longer on the configuration dictionary key naming, test the nametuple as well. Since after a stable release one shall not change the user interphase.
",nan,nan
21,issue_comment,399,nilearn,nilearn,lesteve,2015-03-18 09:10:21,"> As some to do from @GaelVaroquaux are still missing. sphinx-gallery/sphinx-gallery#20

They could be tackled in a further release.

> Moreover I want to test a bit longer on the configuration dictionary key naming, test the nametuple as well. Since after a stable release one shall not change the user interphase.

Fair enough, how long do you need roughly to be reasonably confident there is no major issues?

Because sphinx-gallery is not used massively at the moment backward-incompatible changes are not such a big deal I would say.
",nan,nan
41,pull_request_commit_comment,399,nilearn,nilearn,lesteve,2015-03-18 10:31:43,"I can run this example in master with python 3 so I don't think this change is absolutely needed.

Using float as numpy array indices is deprecated indeed as the following snippet shows so feel free to open a separate PR with this change

``` python
import warnings
import numpy as np
warnings.simplefilter('always', DeprecationWarning)

arr = np.arange(10)
print(arr[2.3:5.9])
```
",f733ad2b1521f4474d050a00c89004509f775441,"(1, '', u'examples/decoding/plot_simulated_data.py')"
22,issue_comment,399,nilearn,nilearn,lesteve,2015-04-13 09:09:57,"@Titan-C any news on this front? We may do a release of nilearn soonish, it'd be great to start using sphinx-gallery!

I think the main things we need is:
- a sphinx-gallery release with the shelve functionality (maybe it has already happened I haven't checked)
- a script to update the nilearn sphinx-gallery copy similary to what is done for joblib in scikit-learn. TBH, it would be fine to have a simple copy as a first step and work on this script in a separate PR.
",nan,nan
23,issue_comment,399,nilearn,nilearn,Titan-C,2015-04-13 09:25:50,"Yes, few days ago I updated to version 0.0.7 which includes the shelve and the dictionary configuration. Then the quick release of 0.0.8 is because I get a bug with CSS as it conflicts with some of the Sphinx themes. The update script is already there and it worked for the last 2 updates.
- You can run this branch. There are some examples that in my computer don't work, as I claimed before. 
",nan,nan
24,issue_comment,399,nilearn,nilearn,Titan-C,2015-04-13 10:04:07,"> ~~You can run this branch. There are some examples that in my computer don't work, as I claimed before.~~
- I merged locally master into this to test. All examples work!
- But now one has to rename all images in the documentation, as now they are numbered with 3 digits (001). So the carousel it the star page can't find the image as neither other places in the documentation
",nan,nan
25,issue_comment,399,nilearn,nilearn,lesteve,2015-04-13 10:46:03,"> Yes, few days ago I updated to version 0.0.7 which includes the shelve and the dictionary configuration. Then the quick release of 0.0.8 is because I get a bug with CSS as it conflicts with some of the Sphinx themes. The update script is already there and it worked for the last 2 updates.

Great stuff, I'll take a closer look this afternoon!

 Don't hesitate to add a comment when you push commits into your PR branch and you think things are in a good shape. This way we get notifications and it's easier to get a feeling what is going on with the project.
",nan,nan
26,issue_comment,399,nilearn,nilearn,lesteve,2015-04-13 12:29:59,"@Titan-C, I did some quick and dirty renaming of the pngs in https://github.com/lesteve/nilearn/commit/e00ca5006febccd9928b22b4ea04af862b73e1f9. You should be able to cherry-pick it easily into your PR branch.

I did a few sanity checks and it seems fine but it'd be great if you could double-check too. A good comparison would be the documentation that Gaël generated for one of his course: http://gaelvaroquaux.github.io since nilearn.github.io is trailing a lot behind master atm.
",nan,nan
27,issue_comment,399,nilearn,nilearn,Titan-C,2015-04-13 20:12:48,"It doesn't work in my home computer. Certainly this needs a new issue. But I can't get 2 examples to work at home. 
- plot_probabilistic_atlas_extraction.py
- plot_inverse_covariance_connectome.py
  https://gist.github.com/Titan-C/7eab460917461adc61a4
  there seems like the data has changes, but has not been updated. How to do it?

Apart from this, and everything that links to this images, I don't see much any difference.
",nan,nan
28,issue_comment,399,nilearn,nilearn,lesteve,2015-04-13 20:39:27,"Hmmm works for me, try `rm ~/nilearn_data/msdl_atlas/ -rf` and rerunning the examples which are failing.
",nan,nan
29,issue_comment,399,nilearn,nilearn,Titan-C,2015-04-13 22:20:30,"OK it works ! all examples execute!

There are examples missing, because documentation calls them.
- connectivity/plot_connect_comparison.py removed in 25bce1f1d9a0a722faa099d95dcce8c478f21b39
  called from connectivity/connectome_extraction.rst
  I fixed one reference in this file, the other I'm not completely sure which is re replacement file.

This I don't if is related to this PR
- I don't get the user guide for Image manipulation and visualization and Advanced usage: manual pipelines and scaling up. So 2 complete chapters are missing.
- And also I have some missing links appear in manipulating_visualizing/plotting.rst. They are missing in Gael's version too.
",nan,nan
9,issue_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 05:59:36,"> There are examples missing, because documentation calls them.

Good catch. Could you add an issue listing all the problems that you have
found in the documentation. We can address it separately.
",nan,nan
42,pull_request_commit_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 06:46:19,"PEP8: you should have spaces before and after the ""+"" operator. 

In addition, it would be better if you used os.path.join, rather than string concatenation (it avoid hard coding the ""/"", which varies across OS).
",f733ad2b1521f4474d050a00c89004509f775441,"(8, '', u'doc/sphinxext/sphinxgallery/__init__.py')"
43,pull_request_commit_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 06:46:55,"Maybe some white space: ""}"" on new lines and empty lines between blocks.
",f733ad2b1521f4474d050a00c89004509f775441,"(12, '', u'doc/sphinxext/sphinxgallery/_static/gallery.css')"
44,pull_request_commit_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 06:47:13,"It seems to me that these blocks are not indented correctly.
",f733ad2b1521f4474d050a00c89004509f775441,"(23, '', u'doc/sphinxext/sphinxgallery/_static/gallery.css')"
45,pull_request_commit_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 06:48:24,"PEP8: isn't this line too long (more than 79 characters)?
",f733ad2b1521f4474d050a00c89004509f775441,"(51, '', u'doc/sphinxext/sphinxgallery/gen_gallery.py')"
46,pull_request_commit_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 06:48:49,"PEP8: two empty lines should separate top-level definitions.
",f733ad2b1521f4474d050a00c89004509f775441,"(92, '', u'doc/sphinxext/sphinxgallery/gen_gallery.py')"
47,pull_request_commit_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 06:49:20,"PEP8: too many empty lines: there should be only 2.
",f733ad2b1521f4474d050a00c89004509f775441,"(174, '', u'doc/sphinxext/sphinxgallery/gen_rst.py')"
10,issue_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 06:50:24,"Almost there: only a few cosmetic comments. After these are addressed, we are ready to merge.

Congratulations, this is great!
",nan,nan
30,issue_comment,399,nilearn,nilearn,lesteve,2015-04-14 06:58:29,"> Almost there: only a few cosmetic comments. After these are addressed, we are ready to merge.
> 
> Congratulations, this is great!

I think your comments are related to sphinx-gallery and not nilearn. I reckon we should merge this PR. The alternative is for your comments to be addressed in sphinx-gallery and a new sphinx-gallery release to be made before we can merge this PR. This seems a little bit too much overhead for what it is worth IMHO.

Just for clarity we'll try to keep the sphinx-gallery copy inside nilearn in sync with the latest sphinx-gallery release going forward, which means that if your comments get addressed in sphinx-gallery they will eventually reach the nilearn sphinx-gallery copy.
",nan,nan
11,issue_comment,399,nilearn,nilearn,GaelVaroquaux,2015-04-14 07:36:49,"I agree. Oscar, could you please either address these comments inside sphinx gallery,  or copy them as an issue,  so that they don't get lost. 

Sent from my phone. Please forgive brevity and mis spelling

On Apr 14, 2015, 08:58, at 08:58, ""Loïc Estève"" notifications@github.com wrote:

> > Almost there: only a few cosmetic comments. After these are
> > addressed, we are ready to merge.
> > 
> > Congratulations, this is great!
> 
> I think your comments are related to sphinx-gallery and not nilearn. I
> reckon we should merge this PR. The alternative is for your comments to
> be addressed in sphinx-gallery and a new sphinx-gallery release to be
> made before we can merge this PR. This seems a little bit too much
> overhead for what it is worth IMHO.
> 
> Just for clarity we'll try to keep the sphinx-gallery copy inside
> nilearn in sync with the latest sphinx-gallery release going forward,
> which means that if your comments get addressed in sphinx-gallery they
> will eventually reach the nilearn sphinx-gallery copy.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/399#issuecomment-92657390
",nan,nan
31,issue_comment,399,nilearn,nilearn,AlexandreAbraham,2015-04-14 07:37:10,":+1: for merging as-is and address comments in sphinx-gallery repo.
",nan,nan
32,issue_comment,399,nilearn,nilearn,lesteve,2015-04-14 07:50:36,"OK merging then, thanks a lot for this and hurray for nilearn officially starting to use sphinx-gallery !
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
8,pull_request_commit_comment,398,nilearn,nilearn,AlexandreAbraham,2015-02-05 14:18:21,"Use `get_affine()`.
",abe01ebd63395442d3263a3f5462a6d9837b6f2d,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
9,pull_request_commit_comment,398,nilearn,nilearn,AlexandreAbraham,2015-02-05 14:21:18,"`interpolation=""nearest""`
",abe01ebd63395442d3263a3f5462a6d9837b6f2d,"(None, '', u'nilearn/input_data/nifti_region.py')"
10,pull_request_commit_comment,398,nilearn,nilearn,lesteve,2015-02-05 15:10:01,"Do we want a test that uses an explicit resampling_target=""data"" to check that it is the same as not specifying resampling_target?
",abe01ebd63395442d3263a3f5462a6d9837b6f2d,"(36, '', u'nilearn/input_data/tests/test_nifti_region.py')"
11,pull_request_commit_comment,398,nilearn,nilearn,GaelVaroquaux,2015-02-05 15:39:24,"I think that it is not necessary, as long as we keep an eye on the coverage.
",abe01ebd63395442d3263a3f5462a6d9837b6f2d,"(36, '', u'nilearn/input_data/tests/test_nifti_region.py')"
5,issue_comment,398,nilearn,nilearn,GaelVaroquaux,2015-02-05 15:39:57,"Any more reviews, I think this is mergeable.
",nan,nan
7,issue_comment,398,nilearn,nilearn,lesteve,2015-02-05 15:44:17,"LGTM
",nan,nan
6,issue_comment,398,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:06:04,"Tests pass. I am merging.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
11,pull_request_commit_comment,414,nilearn,nilearn,lesteve,2015-02-06 12:58:32,"Should we try to add similar tests for plot_stat_map where the data has both positive and negative values?
",94ed0aa814f813d507873b18fd1c0ad84fbe385f,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
5,issue_comment,414,nilearn,nilearn,GaelVaroquaux,2015-02-06 13:10:18,"Can we make the array a bit smaller: right now it is 20x20x20. I am a bit afraid at the cumulated time that this test is taking.
",nan,nan
10,issue_comment,414,nilearn,nilearn,eickenberg,2015-02-06 13:23:37,"Gladly, but I cannot go lower than 7 on axes x and y because of the axis slicer who seems to expect at least this. So now I am running all the previous tests for positive, negative and mixed data, that means I am doing 3 \* 10 = 30 plots. In total this takes around 55 seconds.

The only way to reduce this significantly is by doing less test cases, not by reducing the image size - we are almost in pure plotting overhead here. I could do positive/negative/mixed only for plot_stat_map for instance.
",nan,nan
7,issue_comment,414,nilearn,nilearn,lesteve,2015-02-06 13:33:58,"There is an issue for speeding up the plotting tests #408. I'd be in favour of merging this and tackling the plotting tests slowness after the release.
",nan,nan
8,issue_comment,414,nilearn,nilearn,AlexandreAbraham,2015-02-06 13:43:23,"If plotting is the bottleneck, you can use the backend `template` (I have seen that currently the tests use `svg`). `template` is an empty backend that doesn't draw anything. But I don' t think that the speed up will be significant.
",nan,nan
9,issue_comment,414,nilearn,nilearn,lesteve,2015-02-06 13:54:51,"OK merging this one. @AlexandreAbraham can you add your suggestion of using the `template` bottleneck in #408 so that we don't forget about it?
",nan,nan
6,issue_comment,414,nilearn,nilearn,GaelVaroquaux,2015-02-06 14:10:54,"55s is really nasty. We'll have to reduce this. We are accumulating
technical debt here.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
8,issue_comment,378,nilearn,nilearn,bcipolli,2015-02-01 19:38:22,"I read up on most of the rest of the test failures--they are due to string handling differences between Python 2 and 3 and relatively heavy usage (compared to `sklearn`) in `nilearn` of numpy's `loadtxt` and `recfromtxt` functions without specifying column dtypes, and `nilearn`.

`numpy` has chosen to always return `loadtxt` and `recfromtxt` strings without types as bytes.  However, string literal defaults in Python are version dependent: Python 2 defaults strings to bytes, and Python 3 defaults to unicode.

This fails when in `nilearn` we explicitly filter based on condition masks using string literals, e.g. 

``` python
haxby_dataset = datasets.fetch_haxby_simple()
conditions = np.recfromtxt(haxby_dataset.conditions_target)['f0']
condition_mask = np.logical_or(conditions == 'face', conditions == 'house')
```

This will succeed in Python 2, but fail in Python 3.  In Python 2, the `'f0'` column is bytes (default), the condition mask `'face'` is bytes, so the comparison succeeds.  In Python 3, the `'f0'` column is bytes (default), the condition mask `'face'` is unicode, so the comparison fails.

One solution could be to specify all string literals as bytes, e.g. `b'face'`.  This is what `sklearn` does, but they don't use `loadtxt` nor `recfromtxt` in user-facing examples.  I think it'd be weird to use these byte literals in examples, especially when most users won't need to know about it (only those using Python 3.x).

Another solution could be to write our own `loadtxt` and `recfromtxt` functions that call `numpy`'s version, then convert any string fields to unicode by calling `decode()` on the strings.  I dislike wrapper functions like this because those familiar with `numpy` may no longer read the examples as clearly (similar, but different function is called....)

A final solution is to repackage the dataset code (where most of this info lies) more carefully, such that the column definitions and datatypes are part of the package.  I think this is the best option--we have that information (we spent the time to curate these datasets), and it would allow better column names (we could use `'condition'` instead of defaults like `'f0'`), but it would take some thinking about how to package that information well.

My suggestion: implement our own wrappers for `loadtxt` and `recfromtxt` and use them in our examples.  If there's interest in the third one, I can open an issue for it.

If no objections, I'll start on solution #2 on Tuesday.  Thanks!
",nan,nan
4,issue_comment,378,nilearn,nilearn,GaelVaroquaux,2015-02-01 19:40:38,"If it's only on the examples, let's punt: the examples won't work out of
the box in Python 3. That's too bad. But given that a very large fraction
of our target users are not in Python 3, it will not affect them. On the
other hand, making the examples harder to read would affect them.
",nan,nan
9,issue_comment,378,nilearn,nilearn,bcipolli,2015-02-01 19:43:26,"The issue also exists in `test_datasets.py`, but I don't think it's needed for any core code.  I assume with the tests, I can solve that either way (literals or through a conversion function).
",nan,nan
5,issue_comment,378,nilearn,nilearn,GaelVaroquaux,2015-02-01 19:45:21,"> I assume with the tests, I can solve that either way (literals or
> through a conversion function).

I'd solve it via the simplest way, which probably does not entail writing
a wrapper function.
",nan,nan
10,issue_comment,378,nilearn,nilearn,bcipolli,2015-02-01 19:46:32,"If punting, I suggest adding information somewhere (could be at the top of relevant examples, could be somewhere on the website) about this issue.  The examples are a core part of getting people on `nilearn`, and if claiming `python 3` support I think it's important to let users know that the examples won't work for them.
",nan,nan
6,issue_comment,378,nilearn,nilearn,GaelVaroquaux,2015-02-01 21:06:53,"> If punting, I suggest adding information somewhere (could be at the top of
> relevant examples, could be somewhere on the website) about this issue.

Sounds right. If there aren't too many examples where this is the case, I
would add it there.
",nan,nan
7,issue_comment,378,nilearn,nilearn,lesteve,2015-02-01 21:25:14,"It looks like using conditions == b'face' will work for both Python 2 and 3, i.e.:

``` python
condition_mask = np.logical_or(conditions == b'face', conditions == b'house')
```

and another thing about:

> All nilearn imports should be relative (except, perhaps, in tests)

I seem to remember the scikit-learn policy was to use absolute import in tests. I guess this way you can easily run the test file independently from the package it is coming from, say run a test from your scikit-learn git checkout with an older version of scikit-learn for example.
",nan,nan
11,pull_request_commit_comment,378,nilearn,nilearn,lesteve,2015-02-02 15:37:56,"I was thinking we could use the 'six' version that is shipped in sklearn.externals.
",55ccc61f3350fe817400e69aa793761626c67355,"(4, '', u'README.rst')"
12,pull_request_commit_comment,378,nilearn,nilearn,lesteve,2015-02-02 15:40:38,"I don't think you should bother about this file too much. We are supposed to switch to [sphinx-gallery](http://github.com/sphinx-gallery/sphinx-gallery) at one point and I think it is already compatible with Python3.
",55ccc61f3350fe817400e69aa793761626c67355,"(1, '', u'doc/sphinxext/gen_rst.py')"
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,524,nilearn,nilearn,satra,2015-03-27 12:48:26,"turns out i can pass vmax - it's not noted in the documentation anywhere.
",nan,nan
4,issue_comment,524,nilearn,nilearn,GaelVaroquaux,2015-03-27 12:54:47,"> it's not noted in the documentation anywhere.

I'll reopen the issue for this reason. I am wondering if we should not
add it explicitely, rather than having it in the hidden kwargs.
",nan,nan
5,issue_comment,524,nilearn,nilearn,AlexandreAbraham,2015-04-17 07:24:19,"I think we should fix this problem ASAP since other people reported it.
",nan,nan
6,issue_comment,524,nilearn,nilearn,lesteve,2015-04-24 13:21:10,"Unfortunate timing: just saw that it has been assigned to Kamalaker but I actually started working on it this morning ...
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,428,nilearn,nilearn,lesteve,2015-02-13 13:48:18,"Before I forget, there are a few URLs in docstrings that will need to be amended if the doc moves around. Off the top of my head:
- Niimg-like description URL in a lot of docstrings
- installation instructions URL in the import error message in nilearn/version.py

There may be others, easy enough to git grep for nilearn.github.io.
",nan,nan
3,issue_comment,428,nilearn,nilearn,GaelVaroquaux,2015-02-28 19:41:00,"I am working on the issue on the branch https://github.com/GaelVaroquaux/nilearn/tree/doc_rework
",nan,nan
4,issue_comment,428,nilearn,nilearn,AlexandreAbraham,2015-04-17 07:35:28,"Thanks Gael! I close this one as I think that a new rework of the doc should be done in another issue.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,526,nilearn,nilearn,GaelVaroquaux,2015-03-28 22:54:58,"Yes it does not. As stated in the documentation, you need to close the figure when you are done with it. This is done automatically when you specify an output_file argument. 

Sent from my phone. Please forgive brevity and mis spelling

On Mar 28, 2015, 23:39, at 23:39, Danilo Bzdok notifications@github.com wrote:

> As a tentative bug report: I used a combination of plot_stat_map() +
> plt.subplots() + plt.savefig() several thousand times in a script. This
> used up several hundred MB of disk space and slowed my computer down
> until crash. Commenting out just the plotting-loop solved all these
> problems.
> 
> Is it possible that plot_stat_map does not cleanup some figure handles
> or something like that?
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/526
",nan,nan
4,issue_comment,526,nilearn,nilearn,AlexandreAbraham,2015-03-28 22:55:00,"Yes. matplotlib does not release the memory of the plot if you don't close it. call pylab.close() or matplotlib.pyplot.close() after saving your figure. Or use the option in plot_stat_map to directly save in a file.
",nan,nan
5,issue_comment,526,nilearn,nilearn,banilo,2015-03-28 22:59:12,"Thanks @Galex !
",nan,nan
6,issue_comment,526,nilearn,nilearn,AlexandreAbraham,2015-03-28 23:10:15,"Nota: check your logs but marplotlib usually output a warning xhen mre than 20 figures are opened at the same time.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,527,nilearn,nilearn,eickenberg,2015-03-30 12:37:32,"LVGTM
",nan,nan
6,issue_comment,527,nilearn,nilearn,lesteve,2015-03-30 12:48:29,"You may as well replace all `import pylab` instances while you are at it.

```
~/dev/nilearn $ git grep -l pylab nilearn
nilearn/plotting/displays.py
nilearn/plotting/img_plotting.py
nilearn/plotting/tests/test_cm.py
nilearn/plotting/tests/test_displays.py
nilearn/plotting/tests/test_img_plotting.py
```
",nan,nan
7,issue_comment,527,nilearn,nilearn,AlexandreAbraham,2015-03-30 14:09:26,"@lesteve , any remaining objection?
",nan,nan
8,issue_comment,527,nilearn,nilearn,lesteve,2015-03-30 15:00:48,"Good stuff, thanks a lot.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,520,nilearn,nilearn,GaelVaroquaux,2015-03-23 15:44:43,"Could you please add a test.
",nan,nan
6,pull_request_commit_comment,520,nilearn,nilearn,bthirion,2015-03-24 21:33:12,"Please remove these lines.
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
7,pull_request_commit_comment,520,nilearn,nilearn,AlexandreAbraham,2015-03-25 15:30:57,"Not a good idea to pop both values if only one of them is nan.
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/img_plotting.py')"
8,pull_request_commit_comment,520,nilearn,nilearn,AlexandreAbraham,2015-03-25 15:31:31,"Is there a reason to remove them in the first place?
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
9,pull_request_commit_comment,520,nilearn,nilearn,banilo,2015-03-25 15:35:00,"These lines do not pass the tests with the vmin/vmax patch.
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
10,pull_request_commit_comment,520,nilearn,nilearn,GaelVaroquaux,2015-03-25 15:38:20,"> These lines do not pass the tests with the vmin/vmax patch.

Then the patch has a regression and this needs to be fixed.
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
11,pull_request_commit_comment,520,nilearn,nilearn,AlexandreAbraham,2015-03-25 15:41:37,"Use warnings.warn
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/img_plotting.py')"
12,pull_request_commit_comment,520,nilearn,nilearn,AlexandreAbraham,2015-03-27 14:10:27,"FYI: this failing test is actually failing for a real reason because of a bug in your code. Fix it and we can merge ;)
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
13,pull_request_commit_comment,520,nilearn,nilearn,AlexandreAbraham,2015-03-27 14:11:46,"`if ('vmax' in kwargs and kwargs['vmax'] is not None and np.isnan(kwargs['vmax'])):`
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/img_plotting.py')"
14,pull_request_commit_comment,520,nilearn,nilearn,lesteve,2015-03-27 14:20:05,"Can you use a `with tempfile.TemporaryFile` as above? IIRC this will cause a warning with Python 3.
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
15,pull_request_commit_comment,520,nilearn,nilearn,lesteve,2015-03-27 14:25:49,"This comment is lying
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
16,pull_request_commit_comment,520,nilearn,nilearn,banilo,2015-03-27 15:02:15,"Why?

Updated the rest.

2015-03-27 15:25 GMT+01:00 Loïc Estève notifications@github.com:

> In nilearn/plotting/tests/test_img_plotting.py
> https://github.com/nilearn/nilearn/pull/520#discussion_r27298367:
> 
> > -    # Test saving with empty plot
> 
> This comment is lying
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/520/files#r27298367.

## 

Viele Grüße,
Danilo
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
17,pull_request_commit_comment,520,nilearn,nilearn,lesteve,2015-03-27 15:33:36,"It would be great to check that the expected warning has been emitted. Look at `git grep catch_warnings` for some examples in our code.
",72089d5f9fa21cabb5bd8fb202b817b3973801a2,"(20, '', u'nilearn/plotting/tests/test_img_plotting.py')"
 , , , , , , , , , 
 , , , , , , , , , 
6,pull_request_commit_comment,521,nilearn,nilearn,banilo,2015-03-24 11:55:28,"Is there no way to combine the two md5_hash() functions with an option for UNICODE or not?
",24862fdaf7c69a653593880caba676bda00b79a4,"(25, '', u'nilearn/_utils/compat.py')"
7,pull_request_commit_comment,521,nilearn,nilearn,banilo,2015-03-24 11:57:54,"""for special behaviors."" might be obscure to some users
",24862fdaf7c69a653593880caba676bda00b79a4,"(None, '', u'nilearn/datasets.py')"
8,pull_request_commit_comment,521,nilearn,nilearn,banilo,2015-03-24 12:00:19,"I am perhaps wrong on this one, but I thought that checking whether a string is empty is most elegantly done by `not` operator.
",24862fdaf7c69a653593880caba676bda00b79a4,"(61, '', u'nilearn/datasets.py')"
9,pull_request_commit_comment,521,nilearn,nilearn,banilo,2015-03-24 12:01:47,"grammar
",24862fdaf7c69a653593880caba676bda00b79a4,"(None, '', u'nilearn/datasets.py')"
10,pull_request_commit_comment,521,nilearn,nilearn,GaelVaroquaux,2015-03-24 12:02:01,"> I am perhaps wrong on this one, but I thought that checking whether a
> string is empty is most elegantly done by not operator.

But if the users passed something that is not a string, it will blow in a
strange way.
",24862fdaf7c69a653593880caba676bda00b79a4,"(61, '', u'nilearn/datasets.py')"
11,pull_request_commit_comment,521,nilearn,nilearn,AlexandreAbraham,2015-03-24 12:03:53,"This is doable although I find more clear to have a separation between python2 and python3 code.
",24862fdaf7c69a653593880caba676bda00b79a4,"(25, '', u'nilearn/_utils/compat.py')"
12,pull_request_commit_comment,521,nilearn,nilearn,banilo,2015-03-24 12:04:44,"Could this 2/3-python-distinction be done inside a single function?
",24862fdaf7c69a653593880caba676bda00b79a4,"(25, '', u'nilearn/_utils/compat.py')"
13,pull_request_commit_comment,521,nilearn,nilearn,AlexandreAbraham,2015-03-24 12:07:53,"Oh, you noticed that I don't want people to look into that? :P.
Fixed.
",24862fdaf7c69a653593880caba676bda00b79a4,"(None, '', u'nilearn/datasets.py')"
14,pull_request_commit_comment,521,nilearn,nilearn,AlexandreAbraham,2015-03-24 12:09:28,"Actually we already know that the variable is a string (see call to `basename` above). But I must admit that I don't like to write `if file_name:`. Reminds me of C code.
",24862fdaf7c69a653593880caba676bda00b79a4,"(61, '', u'nilearn/datasets.py')"
15,pull_request_commit_comment,521,nilearn,nilearn,AlexandreAbraham,2015-03-24 12:10:56,"Fixed.
",24862fdaf7c69a653593880caba676bda00b79a4,"(None, '', u'nilearn/datasets.py')"
16,pull_request_commit_comment,521,nilearn,nilearn,GaelVaroquaux,2015-03-24 12:11:02,"> But I must admit that I don't like to write if file_name:. Reminds me
> of C code.

I agree. I find that what you wrote is more readable.
",24862fdaf7c69a653593880caba676bda00b79a4,"(61, '', u'nilearn/datasets.py')"
17,pull_request_commit_comment,521,nilearn,nilearn,AlexandreAbraham,2015-03-24 12:17:30,"Yes, this is doable although I find more clear to have a separation between python2 and python3 code.
",24862fdaf7c69a653593880caba676bda00b79a4,"(25, '', u'nilearn/_utils/compat.py')"
5,issue_comment,521,nilearn,nilearn,AlexandreAbraham,2015-03-25 14:54:12,"Merging because this is kind of urgent if people are using it. Please open issues for additional comments (if needed).
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,522,nilearn,nilearn,GaelVaroquaux,2015-03-25 06:36:17,"> I started using the plotting tools. Is there a way to add two statistical maps
> (overlaid over a bg image) so that common voxels are represented by a mixed
> color resulting from the two maps?

You need to use 'add_overlay' as in the following example:
http://gaelvaroquaux.github.io/auto_examples/manipulating_visualizing/plot_probabilistic_atlas.html
(note that this is not the official documentation, but a preview of the
next version)
",nan,nan
7,issue_comment,522,nilearn,nilearn,AlexandreAbraham,2015-03-25 07:02:20,"This example does not answer his question...
",nan,nan
4,issue_comment,522,nilearn,nilearn,GaelVaroquaux,2015-03-25 07:07:41,"> This example does not answer his question...

Why? Doesn't add_overlay answer the question?
",nan,nan
8,issue_comment,522,nilearn,nilearn,AlexandreAbraham,2015-03-25 07:22:31,"From what I know, add_overlay relies on matshow which does not mix red and blue like asked here but stack them. But I may have missed an option.
",nan,nan
5,issue_comment,522,nilearn,nilearn,GaelVaroquaux,2015-03-25 07:28:06,"OK, I understood the question differently.

@f4bry : could you detail your question? Do you want 2 overlays over a background, or only 1 overlay mixing 2 different colorbars. @AlexandreAbraham is right that add_overlay does not mix colors, just overlays.
",nan,nan
9,issue_comment,522,nilearn,nilearn,banilo,2015-03-25 07:30:29,"Like here for example:

http://www.frontiersin.org/files/Articles/83378/fpsyg-05-00353-HTML/image_m/fpsyg-05-00353-g001.jpg
",nan,nan
10,issue_comment,522,nilearn,nilearn,f4bry,2015-03-25 07:51:52,"Hi,
Thank you!
Yes, like in banilo example. 
Suppose I have 2 t-maps. I would like to show them, superimposed to the same anatomical template, one colored in red and the other in yellow. The common voxels (i.e. overlapped voxels) colored in orange.

fab
",nan,nan
11,issue_comment,522,nilearn,nilearn,banilo,2015-03-25 07:56:23,"As far as I know, there is currently no possiblity to plot 2 (or more) statistical maps colored as a function of topographical overlap.

Good hint for improvement of the plotting function stack....
",nan,nan
6,issue_comment,522,nilearn,nilearn,GaelVaroquaux,2015-03-25 08:04:03,"> As far as I know, there is currently no possiblity to plot 2 (or more)
> statistical maps colored as a function of topographical overlap.

Well, just compute the overlap as an indicate on the {0, 1, 2, 3} set: 0
= non activated, 1 = map1 activated, 2 = both activated, 3 = map2
activated, and then you can use the standard plotting stack.
",nan,nan
12,issue_comment,522,nilearn,nilearn,AlexandreAbraham,2015-03-25 08:11:58,"Short answer: this is not possible and probably not a good idea.

Long answer: like Michael said, what you want is a 2D colorbar. This goal is usually achieved in matplotlib by using`imshow` because you can give it directly the RGB colors. However this is not possible in nilearn because, in-between, we do a lot of operations that assume that the data is scalar.
AFAIK, matplotlib still does have options to specify layer fusion method (typically, you'd like to have the multiply fusion).
So what I would (because I'm a bit lazy) is to fix the cut coords, output 2 images (red and blue) and mix the channels by using, for example, imagemagic (it,s very easy). You may also be able to do that direcrly in python by grabbing the binary representation of the plots in matplotlib (less easy).
I said that this is not a good idea because, perceptually, the color has a great influence on how we perceive things. We typically distinguish red tones better than blue tones. So if you mix them in the same image, people will have the feeling that red is stronger.Same with color mixing : if you make a 2D plot of a gradient going from red to blue, people will tend to say that it is reddish rrather than blueish. Let us know if you find a solution ;).
",nan,nan
13,issue_comment,522,nilearn,nilearn,f4bry,2015-03-26 00:26:10,"Thank you all for the suggestions!

Alexandre, I don't think I got all your points, but I will try to find a solution and I'll keep you posted.

I understand your comments about mixing colors. However, I think that showing such overlap can be useful in many applications.

fab
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
10,pull_request_commit_comment,523,nilearn,nilearn,GaelVaroquaux,2015-03-25 12:35:34,"I think that you should cast nyq to a float: float(nyq), just in case some integer finds its way here.
",c2838502cd8577e2602cfb425b75ff304a6c3402,"(None, '', u'nilearn/signal.py')"
5,issue_comment,523,nilearn,nilearn,GaelVaroquaux,2015-03-25 12:36:27,"Looks great. Thanks heaps. Maybe a better name for wn, lf, hf?
",nan,nan
11,pull_request_commit_comment,523,nilearn,nilearn,AlexandreAbraham,2015-03-25 12:48:34,"I can do it but it is already implictly casted in line 216: `nyq = sampling_rate * 0.5`
",c2838502cd8577e2602cfb425b75ff304a6c3402,"(None, '', u'nilearn/signal.py')"
7,issue_comment,523,nilearn,nilearn,AlexandreAbraham,2015-03-25 12:49:00,"> Maybe a better name for wn, lf, hf?

Reworded.
",nan,nan
12,pull_request_commit_comment,523,nilearn,nilearn,GaelVaroquaux,2015-03-25 12:49:59,"> I can do it but it is already implictly casted in line 216: nyq =
> sampling_rate \* 0.5

That's outside the function. If someone later reuses the function, he/she
may not be careful enough.
",c2838502cd8577e2602cfb425b75ff304a6c3402,"(None, '', u'nilearn/signal.py')"
8,issue_comment,523,nilearn,nilearn,AlexandreAbraham,2015-03-25 14:13:53,"@GaelVaroquaux is that okay? Sorry to bother you but Mehdi wants to use filtering and he would like to have this guard ;)
",nan,nan
6,issue_comment,523,nilearn,nilearn,GaelVaroquaux,2015-03-25 14:15:36,"Merged. Thanks
",nan,nan
9,issue_comment,523,nilearn,nilearn,AlexandreAbraham,2015-03-25 14:47:25,"Cool! Thanks.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,420,nilearn,nilearn,GaelVaroquaux,2015-02-10 13:13:28,"> For several people, the caching directory is seen as a big pile of junk that
> grows without able to clean specific masked datasets (as they are all
> identified by a hash). We should find a solution to make it clearer for the
> users.

This has recently come up in joblib. I suggest prepending a very short
description of the inputs to the hash in the directory name. Make
the description of the inputs both short and meaningful will not be
trivial.
",nan,nan
5,issue_comment,420,nilearn,nilearn,AlexandreAbraham,2015-02-10 13:20:00,"I think that it's mainly useful for dataset masking. However, we don't know the which dataset is used at masking time. So I think that we should let the user decide of this. Depending on the usage, I'm sure than any user can come up with a unique ID.
",nan,nan
4,issue_comment,420,nilearn,nilearn,GaelVaroquaux,2015-02-10 13:28:18,"> I think that it's mainly useful for dataset masking. However, we don't
> know the which dataset is used at masking time. So I think that we
> should let the user decide of this. Depending on the usage, I'm sure
> than any user can come up with a unique ID.

OK. Part of the problem will be addressed by a functionning cache
replacement policy system in joblib.

The other part of the problem is a general provenance/information problem
that is so far an open problem in software (nobody has solved it in a
good way).

That said, the relevant information is in the joblib store: in each
result directory there is a 'metadata.json'

A function to crawl such information and give a good view of the store
would probably be useful. For instance a 'list' method on the 'memory'
object, that could take an optional function as an argument (in which
case it would list only the content of the cache for this function.

I think that this would be useful. Can you open an issue on the joblib
tracker?
",nan,nan
6,issue_comment,420,nilearn,nilearn,AlexandreAbraham,2015-02-10 13:41:05,"I don't think that people will bother crawling a lot of folders using such a function to clean their directory.
",nan,nan
7,issue_comment,420,nilearn,nilearn,GaelVaroquaux,2015-02-10 14:23:45,"Then it's a problem we cannot solve.

Sent from my phone. Please forgive brevity and mis spelling

On Feb 10, 2015, 14:41, at 14:41, Alexandre Abraham notifications@github.com wrote:

> I don't think that people will bother crawling a lot of folders using
> such a function to clean their directory.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/420#issuecomment-73700197
",nan,nan
8,issue_comment,420,nilearn,nilearn,AlexandreAbraham,2015-02-10 15:57:18,"I talked with Salma during the coffee break.
1. In all examples, the maskers have `""nilearn_cache""` as cache directory. We should replace that by `""nilearn_cache/dataset_name""`. Because when users realize this fact, it's already too late and they have a huge cache directory.
2. The other problem is when you mask a dataset of 200 subjects, and then change a parameter (typically smoothing). Even if the first problem is solved, you will end up will 400 folders with hashed names in your cache. Having a function that reads _metadata.json_ files is not helping because a script is still needed to parse the result and delete only a subset of the files. For this problem, we would need a 2-level cache like this:

```
nilearn_cache_adhd
├ hash('filter_and_mask(all_params_but_filepath_smoothing_6)')
│  ├ hash('filepath_1')
│  ├ hash('filepath_2')
│  └ ...
└ hash('filter_and_mask(all_params_but_filepath_smoothing_8)')
   ├ hash('filepath_1')
   ├ hash('filepath_2')
   └ ...
```

This is a quick suggestion, I haven't really thought about this.
",nan,nan
9,issue_comment,420,nilearn,nilearn,GaelVaroquaux,2015-02-10 16:21:21,"> 1. In all examples, the maskers have ""nilearn_cache"" as cache directory. We
>    should replace that by ""nilearn_cache/dataset_name"". Because when users
>    realize this fact, it's already too late and they have a huge cache
>    directory.

Yes and no: there are common things across the different datasets, and
the benefit of putting everything in the same directory is that these
common things are not duplicated or recomputed.

> 1. The other problem is when you mask a dataset of 200 subjects, and then
>    change a parameter (typically smoothing). Even if the first problem is
>    solved, you will end up will 400 folders with hashed names in your cache.
>    Having a function that reads metadata.json files is not helping because a
>    script is still needed to parse the result and delete only a subset of the
>    files. For this problem, we would need a 2-level cache like this:
> 
> nilearn_cache_adhd
> ├ hash('filter_and_mask(all_params_but_filepath_smoothing_6)')
> │  ├ hash('filepath_1')
> │  ├ hash('filepath_2')
> │  └ ...

That's always going to be custom and never going to scale, because you
need to know which parameters should go where.

From what I hear, all these problems are problems that we cannot solve.

What we can do, is try to implement a cache replacement policy, and be
able to limit the disk occupied by caching. This is on my radar.
",nan,nan
10,issue_comment,420,nilearn,nilearn,AlexandreAbraham,2015-02-10 16:41:30,"> Yes and no: there are common things across the different datasets, and the benefit of putting everything in the same directory is that these common things are not duplicated or recomputed.

Do you have something in mind? Because I can't think of one.

> That's always going to be custom and never going to scale, because you need to know which parameters should go where.

That works for the masker: the first level is everything but the filepath.

> What we can do, is try to implement a cache replacement policy, and be able to limit the disk occupied by caching. This is on my radar.

My guess is that people will get scared if things that used to run smoothly (because cached) become slow (because cache has been invalidated).
",nan,nan
11,issue_comment,420,nilearn,nilearn,GaelVaroquaux,2015-02-10 16:45:10,"> Do you have something in mind? Because I can't think of one.

Yes. Loading the haxby dataset and applying to it 2 different
classifiers.

> ```
> That's always going to be custom and never going to scale, because
> you need to know which parameters should go where.
> ```
> 
> That works for the masker: the first level is everything but the filepath.

Yes, but it means that you need to hand craft this everywhere, which is
really what I am trying to avoid.

> ```
> What we can do, is try to implement a cache replacement policy, and
> be able to limit the disk occupied by caching. This is on my radar.
> ```
> 
> My guess is that people will get scared if things that used to run smoothly
> (because cached) become slow (because cache has been invalidated).

People have long stopped understanding how a computer works. There are
caching mechanisms everywhere in a computer. Some day things are fast.
Other days they are slow. The world is still a better place with caching
:).
",nan,nan
12,issue_comment,420,nilearn,nilearn,AlexandreAbraham,2015-02-10 19:27:19,"> Yes. Loading the haxby dataset and applying to it 2 different classifiers.

I see no problem in changing `nilearn_cache` to `nilearn_cache/haxby` for that particular task.

> Yes, but it means that you need to hand craft this everywhere, which is really what I am trying to avoid.

I was just thinking of the masker for that point.

> People have long stopped understanding how a computer works. There are caching mechanisms everywhere in a computer. Some day things are fast. Other days they are slow. The world is still a better place with caching :).

I have no strong feeling about that. I just had several complaints about a `nilearn_cache` directory growing out of control and people not wanting to delete it by fear of losing all their cache.
",nan,nan
13,issue_comment,420,nilearn,nilearn,GaelVaroquaux,2015-02-12 07:17:08,"> I see no problem in changing nilearn_cache to nilearn_cache/haxby for that
> particular task.

OK. Point taken. I agree with you. Sorry, I was being dumb. I would
welcome a joblib cache per dataset as long as we don't have a cache
replacement policy.

> I was just thinking of the masker for that point.

I am trying to minimize the amount of code that goes 

> I have no strong feeling about that. I just had several complaints
> about a nilearn_cache directory growing out of control and people not
> wanting to delete it by fear of losing all their cache.

That tells me we need cache replacement policy :). That's difficult work,
but it is feasible, and it will solve many problems at once.
",nan,nan
14,issue_comment,420,nilearn,nilearn,AlexandreAbraham,2015-02-12 08:47:50,"> OK. Point taken. I agree with you. Sorry, I was being dumb. I would welcome a joblib cache per dataset as long as we don't have a cache replacement policy.

Cool, I'll do a PR to fix that.

> I am trying to minimize the amount of code that goes

I agree. Adding a subdirectory to nilearn_cache is basically the idea of a two level cache but handled at user level ;). I think it can be more useful to sensibilize users to this problem rather than doing everything for them.

> That tells me we need cache replacement policy :). That's difficult work, but it is feasible, and it will solve many problems at once.

I'm not sure that it will solve the general problem, but I guess that it's better than nothing ;).
",nan,nan
15,issue_comment,420,nilearn,nilearn,banilo,2015-02-12 08:49:52,"Loosly related, how about an explicit caching-related example to make the various flavors and advantages clear in a neuroimaging context?
",nan,nan
16,issue_comment,420,nilearn,nilearn,GaelVaroquaux,2015-02-12 08:54:30,"I'd rather rework completely the docs, before adding advanced
documentation and examples. Do you want to take some time to brainstorm
on reworking the docs? I think that it would be very useful.
",nan,nan
17,issue_comment,420,nilearn,nilearn,AlexandreAbraham,2015-02-12 09:23:15,":+1:
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,423,nilearn,nilearn,GaelVaroquaux,2015-02-12 13:10:32,"To address @yarikoptic's comment, we should list all the code that we have included and that came from outside in the copying, with a pointer to the license. I can only see nilearn/doc/sphinxext
",nan,nan
6,issue_comment,423,nilearn,nilearn,lesteve,2015-02-13 08:03:38,"Right I added licenses for all the incorporated software I could find via `git grep -iPl 'license|copyright'`.

I drew inspiration from the Sphinx [LICENSE](https://github.com/sphinx-doc/sphinx/blob/master/LICENSE).

While I was at it I rename COPYING to LICENSE.
",nan,nan
7,issue_comment,423,nilearn,nilearn,bthirion,2015-02-13 08:10:03,"LGTM
",nan,nan
8,issue_comment,423,nilearn,nilearn,GaelVaroquaux,2015-02-13 08:18:05,"Thank you! This is great. Merging!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,365,nilearn,nilearn,GaelVaroquaux,2015-01-22 15:03:08,"I agree with you. However, for most of our default colormaps this is
already the case, so I am not sure what we can do more.
",nan,nan
5,issue_comment,365,nilearn,nilearn,banilo,2015-01-22 15:09:04,"For example, one or two more ""transparent"" flavors could be added. Currently, I only find:

```
nilearn_cm.blue_transparent
nilearn_cm.green_transparent
nilearn_cm.red_transparent
```
",nan,nan
4,issue_comment,365,nilearn,nilearn,GaelVaroquaux,2015-01-22 15:17:34,"> For example, one or two more ""transparent"" flavors could be added.
> Currently, I only find:

You want also the cmy flavor corresponding to the rgb ones? Fine with me,
it's just a PR away :).
",nan,nan
6,issue_comment,365,nilearn,nilearn,banilo,2015-01-22 15:33:47,"It's kinda surprising, but almost 10% of men are red-green blind and 0,5% of women. So, 1 out of 20 plot viewers/paper readers will not be able to tell red and green aspects apart. In fact, this twentieth person might be one of your reviewers ;-)
",nan,nan
7,issue_comment,365,nilearn,nilearn,lesteve,2015-01-22 15:33:48,"If you really want to do that, just go there https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/cm.py#L170 and add your favourite color.

Something I would say: transparent color map rendering is not great and that's the reason we dropped them from the glass brain if you remember.
",nan,nan
8,issue_comment,365,nilearn,nilearn,AlexandreAbraham,2015-01-22 15:35:16,"CMY is for printing, I don't see the relation with color blindness (yellow especially is bad for a colormap).

In order to show several things in the same plot, I made some code to take _n_ colors from any colormap and create a ""transparent to color"" colormap. Typically, if you apply that to 3 fuzzy brain maps with the spectral colormap, it will take the first, the last and the middle color of spectral, build 3 colormaps different from them, and overlay the 3 brain maps on one figure.

I know that it won't solve the color blindness problem, but if you think that (part of) this code can be useful here, it is just 2 clicks away ;).
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,issue_comment,362,nilearn,nilearn,lesteve,2015-01-22 08:02:48,"I have been annoyed on occasions by this too and I thought the same, i.e. ""why is it not more like nilearn_data?"".

The Memory object is coming from joblib (shipped with scikit-learn) so I am not sure we want to change Memory directly. We could use a nilearn-specific thin wrapper around it that has the logic you mention. I would probably add a bullet point to your list in 3rd position: ~/nilearn_cache or something like this if there is no explicit argument and NILEARN_CACHE is not defined.
",nan,nan
7,issue_comment,362,nilearn,nilearn,bcipolli,2015-01-22 08:10:49,":+1: for the thin wrapper!

I didn't add that third bullet, because if we did that it would change the default behavior (which is not to cache results).  It would be easy to do either way.

So what I'm thinking is to have a thin wrapper around `joblib.Memory`, and all `nilearn` functions that receive `joblib.Memory` objects will simply default to the `nilearn` default (say, `nilearn._utils.cache_mixin.Memory`, or `nilearn._utils.cache_mixin.DefaultMemory`, rather than `Memory(cachedir=None)`

At this point, I also think the `nilearn._utils.cache_mixin` module is a bit overloaded; it's already used not just for the Mixin, but caching functions.  I would suggest to rename it simply to `nilearn._utils.cache` or `nilearn._utils.caching` when this change is made.
",nan,nan
8,issue_comment,362,nilearn,nilearn,lesteve,2015-01-22 08:24:21,"Sounds good to me but I would wait for @GaelVaroquaux and @AlexandreAbraham inputs before spending too much time on this. The cache location has been like this for quite a while, so maybe they have use cases where the default cache location wouldn't be practical.
",nan,nan
9,issue_comment,362,nilearn,nilearn,AlexandreAbraham,2015-01-22 08:52:24,"> Cache files are distributed in multiple locations and therefore hard to clear.

I think that this highly depends on your usage of nilearn. The most useful caching feature, I think, is in the masker (because masking can be long). If you put all cache into one single folder, it will be simply impossible to clear. If you mask 10 datasets, you won't be able to clear the data for one dataset only.

> - Searching the source tree becomes slow (as some search programs search all files for text)
> - If the cache location isn't already in the .gitignore, then git workflow can become messy (for example, using git gui).

Those are developers' concern, not really users'.

I am not fundamentally against having a `NILEARN_CACHE` directory. However, we need to find a solution to compartmentalize cache from different scripts. Otherwise I know what will happen: people will use this system, the folder will grow until it fills the hard drive, and then people will have to delete the whole thing and will lose everything.

> ~/nilearn_cache or something like this if there is no explicit argument and NILEARN_CACHE is not defined

What if I don't want to cache?
",nan,nan
3,issue_comment,362,nilearn,nilearn,GaelVaroquaux,2015-01-22 09:33:56,"I agree with Alex's comments: its easier for the end user if the caches
are separated, because it makes it clear what cache belong to what
processing.

Ideally, in the long run, I had in mind to have the cache and the reports
next one to another. That way the user really understand that they go one
with the other, ie that the cache are intermediate files to create the
report. In the case of multiple runs of the same processing pipeline, we
could have the same cache and sub-reports. This is a bit the way FSL
organizes the storage on disk.
",nan,nan
10,issue_comment,362,nilearn,nilearn,bcipolli,2015-01-22 10:02:59,"@AlexandreAbraham, @GaelVaroquaux that makes sense.  This doesn't affect the ability to set the cache exactly as you do already.  What this enables is caching when you haven't explicitly set the cache--perhaps during script development and also nilearn testing--things that you would gladly have cached, and delete later.

None of the existing behavior changes (nothing is cached by default, and you can specify whatever Memory location you want); it just allows another capability (to cache by default to a common location, if you add an environment variable) that I am finding useful for myself.
",nan,nan
4,issue_comment,362,nilearn,nilearn,GaelVaroquaux,2015-01-22 17:07:08,"> None of the existing behavior changes (nothing is cached by default,
> and you can specify whatever Memory location you want); it just allows
> another capability (to cache by default to a common location, if you
> add an environment variable) that I am finding useful for myself.

I wonder if it's not something that we should worry about later.

Right now, my priority is to be able to teach a course on decoding and
functional connectivity to cognitive neuroscientist and that it flows
without any problem. Once we have this, we can iterate on providing more
value to user, including advanced user.

This is a general strategy for me: first grow the user base by getting
the API right and solving the easy problems. Then try to turn some of
these users in developers. Then start including more advanced features.
",nan,nan
11,issue_comment,362,nilearn,nilearn,bcipolli,2015-01-22 17:22:16,"@GaelVaroquaux Understood.  For me, I do small, inessential features like this (but also sometimes more core ones, like Python 2.6 support) as I learn a software package.  I figured this out and implemented it locally as part of understanding what the cache is (and working with it as best I could).

So, it's implemented on my machine, it's just a question of whether y'all also find it useful and want to include it in the codebase. :)  Either way is fine by me!
",nan,nan
5,issue_comment,362,nilearn,nilearn,GaelVaroquaux,2015-01-22 18:39:59,"> I do small, inessential features like this (but also sometimes more
> core ones, like Python 2.6 support) as I learn a software package.

Absolutely. It's a great way of doing it. However we have to be careful
not to put all our pet peaves in nilearn.
",nan,nan
12,issue_comment,362,nilearn,nilearn,bcipolli,2015-01-24 13:51:05,"Let me know if this is something to move forward with.  Otherwise, I suggest we close it as wontfix.

For me, this is a nice alternative to explicitly hard-coding behavior across the app (`Memory(cachedir=none)`), where we can control that behavior with a single change in the future.  The file name change from `cache_mixin.py` to `cache.py` also seems like an improvement.  And the code is done.

Either way is fine by me, just wanting to get some clarity.  Thanks!
",nan,nan
13,issue_comment,362,nilearn,nilearn,lesteve,2015-01-26 09:53:00,"It looks like there is no strong agreement on this one, so closing this a won't fix for now.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,424,nilearn,nilearn,alpinho,2015-02-12 12:33:26,"Also: in section 2.1.3.1. Dimension reduction with feature selection
X and y are undefined
",nan,nan
4,issue_comment,424,nilearn,nilearn,alpinho,2015-02-12 12:37:11,"section 2.1.4 n_conditions is not defined
",nan,nan
5,issue_comment,424,nilearn,nilearn,alpinho,2015-02-12 12:39:15,"same section

> > > rfe_svc = Pipeline([('rfe', rfe), ('svc', clf)])
> > > clf is actually svc
",nan,nan
6,issue_comment,424,nilearn,nilearn,lesteve,2015-02-12 12:41:29,"Thanks for your report, posting the errors traceback would be helpful as would a link to the documentation section you are referring to.

Because part of the documentation snippets are from examples scripts in examples and part of the other snippets are directly in the rst files (the one starting with the python promts `>>>`) it may well be the case that there is some mismatch between the two.

Of course PR are more than welcome on these documentation issues.
",nan,nan
7,issue_comment,424,nilearn,nilearn,AlexandreAbraham,2015-04-08 08:59:34,"Does the new doc solve these problems?
",nan,nan
8,issue_comment,424,nilearn,nilearn,lesteve,2015-04-08 11:50:30,"> Does the new doc solve these problems?

My guess: probably not although I haven't checked. I think the emphasis was more on restructuring than fixing bugs.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,pull_request_commit_comment,426,nilearn,nilearn,AlexandreAbraham,2015-02-13 13:07:14,"Duplicated code.
",89d8624fdcc77b4473cfcee8047da847587e144f,"(22, '', u'nilearn/input_data/nifti_labels_masker.py')"
7,pull_request_commit_comment,426,nilearn,nilearn,banilo,2015-02-13 13:08:03,"I know, there is a similar situation with a helper function in the tests. What's your suggestion to handle this?
",89d8624fdcc77b4473cfcee8047da847587e144f,"(22, '', u'nilearn/input_data/nifti_labels_masker.py')"
8,pull_request_commit_comment,426,nilearn,nilearn,AlexandreAbraham,2015-02-13 13:15:05,"My suggestion is: not duplicating the code.

What we can do is to let it pass in this PR. Given that it's a 5 line private function, it's not a big matter. Afterward, I suggest that we take all the little tricks that we use to have a nice display and put them somewhere in _utils.
",89d8624fdcc77b4473cfcee8047da847587e144f,"(22, '', u'nilearn/input_data/nifti_labels_masker.py')"
5,issue_comment,426,nilearn,nilearn,banilo,2015-02-16 12:37:06,"rebased!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
25,issue_comment,449,nilearn,nilearn,lesteve,2015-02-20 07:28:31,"I think that happens because the default figure facecolor is grey (that's what you get when you do a plt.figure() for example).

In your case you can just do that:

``` python
fh = plt.figure(facecolor='w')
```
",nan,nan
3,issue_comment,449,nilearn,nilearn,lesteve,2015-02-20 07:49:42,"In my mind passing an axes to plot_\* functions is an advanced usage and as a consequence you need to know a little bit more what you are doing.

Changing the background of the figure would be fine provided we check that the figure facecolor is not different than the default from rcParams. I may want to create a figure with a green background for my plot and I would be pretty annoyed if the color was overriden by the black_bg argument of the plot_ function.
",nan,nan
4,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 07:59:38,"Looking at the code, the background color of the ""L"" and ""R"" text is hard-coded to black or white.  My preference would be to make that code a bit smarter (to use black if `black_bg` is set, otherwise, pull the figure face color and use that).

https://github.com/nilearn/nilearn/blob/master/nilearn/plotting/displays.py#L583

I have a change on my machine that does this, but I'm not sure it generalizes to all object types that the `axes` parameter could accept.  Note that the label actually has a grey background (i.e. it isn't transparent)

![image](https://cloud.githubusercontent.com/assets/4072455/6283028/45d0319a-b893-11e4-8bc4-a7f6017c9b31.png)
",nan,nan
5,issue_comment,449,nilearn,nilearn,AlexandreAbraham,2015-02-20 09:02:05,"> In my mind passing an axes to plot_\* functions is an advanced usage and as a consequence you need to know a little bit more what you are doing.

Not so advanced. People may copy-paste from the internets.
Why not setting the background of the _axis_ only to white or black? Advanced users will know how to revert it to another color if needed.

I honestly don't think that not handling figures with green background is a big drawback. But the rendering should be correct for default parameters at least.
",nan,nan
6,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 16:05:51,"I disagree that subplotting is advanced.  I always do subplotting and I have never touched face colors.  There's also an example that uses subplotting (and I think that's good!), so using axes should be available to all users.

Another compromise, different than the one above, is to remove the colored bounding box and move the labels a bit farther away from the brains, to avoid overlap in all reasonable cases.  

Indeed, I noticed that the padding of the bounding box is not very good above (note how the ""L"" touches the border of the brain), and in playing with that last night I settled this (bounding box still colored):

![image](https://cloud.githubusercontent.com/assets/4072455/6289681/9ef29978-b8d6-11e4-91bf-40c3fee3997e.png)
![image](https://cloud.githubusercontent.com/assets/4072455/6289679/95a5cbce-b8d6-11e4-8e2a-f4881ef77b9e.png)
![image](https://cloud.githubusercontent.com/assets/4072455/6289688/adb7e63e-b8d6-11e4-98a2-a073ecbbae0c.png)
![image](https://cloud.githubusercontent.com/assets/4072455/6289716/efd978b6-b8d6-11e4-9c9d-b1303d548aeb.png)

For me, that positioning looks better, and there is only label overlap with the brain at the very smallest (to me, unreasonable) sizes.  In that case, removing the colored bounding box seems reasonable to me.  Thoughts?
",nan,nan
7,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 16:55:24,"Note that this issue is also present for the slice position.  I've made a similar change.

From

![image](https://cloud.githubusercontent.com/assets/4072455/6304906/889cdaa2-b8dc-11e4-8fe8-a59c28131066.png)
and
![screen shot 2015-02-20 at 8 44 04 am](https://cloud.githubusercontent.com/assets/4072455/6304949/c4941f02-b8dc-11e4-9d92-bc0dab7f67f2.png)

To
![image](https://cloud.githubusercontent.com/assets/4072455/6305166/00196eaa-b8de-11e4-9667-fe242890719e.png)
and
![screen shot 2015-02-20 at 8 54 29 am](https://cloud.githubusercontent.com/assets/4072455/6305195/2e736bf2-b8de-11e4-9533-4b6f6f8cac5a.png)

Note that in this final cases, I had to tweak the logic such that if `position` is set, the background color is pulled from the figure, to avoid intersection of the ""L"" label and the cut localization lines.
",nan,nan
8,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 16:56:57,"One more suggestion: having a set of plotting tests that are intended for visual inspection (so, local-only, skipped on Travis) and are annotated (through the title, perhaps) with what's being tested, would be great for testing changes to plotting code (and feeling more confident about it!)
",nan,nan
9,issue_comment,449,nilearn,nilearn,lesteve,2015-02-20 17:15:23,"How does it look like in terms of code changes?

If I am completely honest, my preference would be to tackle #212 i.e. provide a high-level construct to create the kind of plots you are showing rather than just having tiny improvements that make our plotting functions play a little bit nicer with figure suplots. 
",nan,nan
10,issue_comment,449,nilearn,nilearn,lesteve,2015-02-20 17:27:05,"> One more suggestion: having a set of plotting tests that are intended for visual inspection (so, local-only, skipped on Travis) and are annotated (through the title, perhaps) with what's being tested, would be great for testing changes to plotting code (and feeling more confident about it!)

I agree it'd be nice to have better tests for plotting since at the moment we only have very limited smoke tests. I don't have a great suggestion for how to do that though. I meant to look at what matplotlib and seaborn was doing a while ago but I haven't got around to do it.
",nan,nan
11,issue_comment,449,nilearn,nilearn,GaelVaroquaux,2015-02-20 17:35:39,"> Indeed, I noticed that the padding of the bounding box is not very good above
> (note how the ""L"" touches the border of the brain), and in playing with that
> last night I settled this (bounding box still colored):

can you show us the lines of code that you changed.
",nan,nan
12,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 17:36:19,"I've done it in two ways in the past.
1. Use the `TRAVIS` environment variable to select / skip tests (i.e. skip plotting tests in Travis, leave it to local testing).  It just looks like `@skip_if(os.environ('TRAVIS'))`.
2. Implement a light-weight test runner that accepts command-line flags, where you can choose the types of tests (and again, set environment variables that are detected by the `@skip_if` decorator).

Regardless of which case (or any other), this kind of code can be abstracted into a set of simple decorators in the `testing` utils, so we can say `@skip_if_travis` or `@skip_if_not_plotting` or whatever abstractions are desired.
",nan,nan
13,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 17:39:17,"> can you show us the lines of code that you changed.

@lesteve @GaelVaroquaux It's embedded in a change where I was trying to allow users to easily override any of the defaults.  Here's the code I'm running:
https://github.com/bcipolli/nilearn/compare/nilearn:master...bcipolli:issue-449?expand=1

Things looked relatively clean to me, except the last change to deal with the position/label conflict:
https://github.com/bcipolli/nilearn/blob/issue-449/nilearn/plotting/displays.py#L588
",nan,nan
14,issue_comment,449,nilearn,nilearn,GaelVaroquaux,2015-02-20 19:22:07,"> 1. Use the TRAVIS environment variable to select / skip tests (i.e. skip
>    plotting tests in Travis, leave it to local testing). It just looks like
>    @skip_if(os.environ('TRAVIS')).
> 2. Implement a light-weight test runner that accepts command-line flags, where
>    you can choose the types of tests (and again, set environment variables
>    that are detected by the @skip_if decorator).

Hum, why would you need this? Why do you want to skip tests on travis? We
have never had to do it in the past.
",nan,nan
15,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 19:26:03,"> Why do you want to skip tests on travis? 
> It would allow adding tests that don't increase coverage, can't be auto-verified and would take substantial time... but would be important tests to have.

All of the plotting edge cases I'm looking at now, and things like print-to-PDF concerns, seems like important regression tests to verify before changing plotting code, but would slow down the Travis run.

There are other designs possible; for example, these types of tests could be implemented outside the `nosetests` framework.  That's just the way I've dealt with it in the past.  Very open to suggestions, but I do feel quite nervous changing plotting code without good regression tests to check that I'm not overlooking anything.
",nan,nan
16,issue_comment,449,nilearn,nilearn,GaelVaroquaux,2015-02-20 19:27:54,"> All of the plotting edge cases I'm looking at now, and things like
> print-to-PDF concerns, seems like important regression tests to verify
> before changing plotting code, but would slow down the Travis run.

If they are not run on Travis, they will go under our radar when merging
pull request. So we need to find a way to have both good code coverage
and fast test suite. In my experience, it has always been possible,
though it sometime required work.
",nan,nan
17,issue_comment,449,nilearn,nilearn,GaelVaroquaux,2015-02-20 19:33:29,"> @lesteve @GaelVaroquaux It's embedded in a change where I was trying to allow
> users to easily override any of the defaults. Here's the code I'm running:
> https://github.com/bcipolli/nilearn/compare/
> nilearn:master...bcipolli:issue-449?expand=1

I am very worried that adding the option to override defaults is going
overboard in terms of complexity for little benefits. This is going to be
of interest to a absolutely tiny fraction of users and it brings more
code lines, and more ways of putting the plotting code in corner cases,
and thus forcing us to add even more complexity. I think that we must
limit the amount of customization: after all, it doesn't bring that much
to the average user, who wants to do simple analysis and plotting of
data.
",nan,nan
18,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 19:35:23,"> If they are not run on Travis, they will go under our radar when merging pull request.

Unless I'm misunderstanding, even if they're run on Travis, and somehow we can show the image output, we'd have to remember to manually check that they ""look good"".  At least, I can't think of any automatic verification for the tests I'm thinking of (like, does the ""L"" label look good when the selected slice lines are nearby / intersecting?)
",nan,nan
19,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-20 19:41:25,"> I am very worried that adding the option to override defaults is going overboard in terms of complexity for little benefits.

I agree, but this capability is already there--all of these functions take `kwargs`.  In my (admittedly uncertain) testing, this didn't work well for the existing functionality.

My real reason for doing this was that the args passed to the `ax.text` function was duplicated for `L` and `R` labels, and they got out of sync (one was passed with `alpha`, the other was not).  In refactoring that code, I noticed that switching the order of where `kwargs` was added gave the opportunity to override.  No need to even mention it, but it's there.

> it brings more code lines

I believe it actually reduced the number of lines and chances for real bugs, as the parameters passed for setting text are consistent between ""L"" and ""R"" labels.  Duplicating that logic elsewhere for consistency added 1-2 lines in 2 other places, but it's either a wash or slightly shorter overall.

No biggie either way to me.
",nan,nan
20,issue_comment,449,nilearn,nilearn,AlexandreAbraham,2015-02-22 14:45:14,"I'm a bit lost in this PR. Putting aside the story of ""visual only"" tests, what do we do about the original problem?
",nan,nan
21,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-23 20:52:59,"How about I submit a PR with what I have? All I did is tweak the spacing and eliminate the coloring of the bounding box.

I think the spacing of hemisphere labels is better, and it simplifies changing the background color.  See https://github.com/nilearn/nilearn/issues/449#issuecomment-75272574 for the current result.
",nan,nan
22,issue_comment,449,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:48:05,"> How about I submit a PR with what I have? All I did is tweak the spacing and
> eliminate the coloring of the bounding box.

Can you submit a PR with only these lines. When I looked at the diff
earlier, it was confusing.

Also typically, what we use as regression testing for visual aspect of
things is simply the examples. Can you check that the plotting examples
still look nice?
",nan,nan
23,issue_comment,449,nilearn,nilearn,bcipolli,2015-02-24 19:16:21,"@GaelVaroquaux makes sense; I simplified the code and am looking over the examples.

I see that `plot_epi` looks a little weird in subplots now.  Rather than tweaking parameters for a PR immediately, I'd rather try to do #212 in conjunction with this (as that may touch the same code).  

If that sounds good, I will put things on hold here, take a look there, and come back if there's anything left here.
",nan,nan
24,issue_comment,449,nilearn,nilearn,AlexandreAbraham,2015-04-09 08:37:23,"Any volunteer to take useful code from this issue and submit a PR?
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
12,pull_request_commit_comment,448,nilearn,nilearn,lesteve,2015-02-20 14:17:25,"Is there any reason to restrict to 10 subjects ? Just not sure what was the original intention was. I would just stick to `datasets.fetch_adhd()` (i.e. 40 subjects) and remove the n_subjects line which wasn't used at all as you spotted.
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
13,pull_request_commit_comment,448,nilearn,nilearn,AlexandreAbraham,2015-02-20 14:18:52,"Usually the number of subjects is chosen to have an exmaple running in a reasonable time with reasonable good results.
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
14,pull_request_commit_comment,448,nilearn,nilearn,lesteve,2015-02-20 14:37:07,"Previously n_subjects wasn't used at all. I guess I just wanted to make sure that restricting to 10 subjects didn't change the plots too much.

Also a side-comment, this script uses n_jobs!=1 which means it won't work on Windows ...
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
15,pull_request_commit_comment,448,nilearn,nilearn,bcipolli,2015-02-20 15:48:12,"I think having `n_subjects=[something]` is useful for having a demo of the parameter.
On my machine (mac), I also have  `n_jobs` as a parameter, and set it to one.  Parallel was crashing Python for me.

I think having `n_jobs=1`, with a comment about tweaking it (including limitations), could be instructive to users.

Or, could remove `n_jobs` and have an example that focuses on the parallel (and perhaps caching) aspects of the package, as kind of a mini-tutorial.
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
16,pull_request_commit_comment,448,nilearn,nilearn,AlexandreAbraham,2015-02-20 16:00:34,"`n_jobs != 1` is prohibited in nilearn examples.
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
17,pull_request_commit_comment,448,nilearn,nilearn,bcipolli,2015-02-20 16:06:48,"OK, will change this.
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
5,issue_comment,448,nilearn,nilearn,bcipolli,2015-02-20 17:46:28,"Removed n_jobs, left n_subjects as is (added in the comment that the max is 40)
",nan,nan
18,pull_request_commit_comment,448,nilearn,nilearn,lesteve,2015-02-20 18:12:31,"you have two `#` now. Maybe it's just me but I would remove the (max: 40): this information is mentioned in fetch_adhd docstring.
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
6,issue_comment,448,nilearn,nilearn,lesteve,2015-02-20 18:17:37,"While you are at it tweaking this example: I noticed two things today while playing with this example for the connectome: 
- it'd be good to add ""subject "" in front of the title [here](https://github.com/bcipolli/nilearn/blob/issue-446/examples/connectivity/plot_adhd_covariance.py#L98) because it's not clear what 0 means.
- the graph lasso doesn't have one covariance per subject so we should remove plotted_subject from the title [here](https://github.com/bcipolli/nilearn/blob/issue-446/examples/connectivity/plot_adhd_covariance.py#L103)
",nan,nan
7,issue_comment,448,nilearn,nilearn,lesteve,2015-02-20 18:18:10,"Also just curious, have you checked whether the plots look similar with 10 subjects compared to 40 subjects?
",nan,nan
19,pull_request_commit_comment,448,nilearn,nilearn,bcipolli,2015-02-20 18:18:11,"OK.  I think many of the comments in examples are (or should be) duplicated in docstrings, that the goal was to help newbies get up to speed faster and play with the parameters in scripts.

At least, that's definitely how I'm using them :)

Will remove the second ""#"".  I converted ""Number of"" to ""#"", for space reasons, but it can just be eliminated!  Let me know if you feel strongly about the ""max"" thing, I won't push any harder than my words above :).
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
20,pull_request_commit_comment,448,nilearn,nilearn,bcipolli,2015-02-20 18:19:45,"@lesteve will follow up on the other two comments.
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
21,pull_request_commit_comment,448,nilearn,nilearn,lesteve,2015-02-20 18:50:19,"> Let me know if you feel strongly about the ""max"" thing

not really, I have to admit.
",d517fbffd92d6da00d5f5f7d8c458d23a2fd497d,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
8,issue_comment,448,nilearn,nilearn,bcipolli,2015-02-20 23:07:52,"@lesteve All plots are virtually identical (slight variations noticeable), except for one.  First is for 40 subjects, second is for 10.  

I must admit I don't understand the result, nor why the other graphs are identical.  Happy to email all to you, if helpful.

![figure_2a](https://cloud.githubusercontent.com/assets/4072455/6310983/58d2e142-b911-11e4-9140-d65e9b0c62c8.png)
![figure_2b](https://cloud.githubusercontent.com/assets/4072455/6310984/58d4564e-b911-11e4-8815-cf43253a4200.png)
",nan,nan
9,issue_comment,448,nilearn,nilearn,lesteve,2015-02-23 07:42:36,"Not sure either, maybe one for @GaelVaroquaux or @AlexandreAbraham.

Other than this, changes look good.
",nan,nan
10,issue_comment,448,nilearn,nilearn,GaelVaroquaux,2015-02-23 07:45:00,"OK, let's do 10 subjects, it will run faster, which is a good thing.
",nan,nan
11,issue_comment,448,nilearn,nilearn,lesteve,2015-02-23 08:08:03,"All right merging this one then, thanks.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,443,nilearn,nilearn,bcipolli,2015-02-19 16:43:22,"Digging a little deeper, in fact the image is non-zero.  However, the maximum value is ~ 0.45, and the `activation_threshold` in `find_xyz_cut_coords` is passed as `0.5`.  So... this is a probabilistic atlas, and  `plot_stat_map` is a better method to use.  

Two questions / suggestions: 
- I suggest mentioning in the `fetch_msdl_atlas` that this is a probabilistic atlas.
- I suggest mentioning how non-boolean images are thresholded in `plot_roi`, in the `plot_roi` docstring.  Indeed, I expected that images passed to `plot_roi` would plot data as `img.get_data().astype(bool)`, not this threshold approach.
",nan,nan
3,issue_comment,443,nilearn,nilearn,lesteve,2015-03-26 09:47:58,"I think this one has been fixed probably by #473.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,442,nilearn,nilearn,lesteve,2015-02-19 06:14:10,"Good catch! From what I remember from other places the mask is generally getting a verbose parameter like `max(0, self.verbose - 1)`. That would definitely make sense to do the same here.
",nan,nan
3,issue_comment,442,nilearn,nilearn,bcipolli,2015-02-21 00:17:52,"Fixed in #445
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,302,nilearn,nilearn,lesteve,2014-12-05 08:08:05,"> when a single image or filename/path

I can not believe you didn't use Niimg-like object :wink: 

Do you have a short self-contained example with the traceback?

I would expect these functions to use `_utils.check_niimg(img, assert_3d)`, which throws when its `img` is an iterable only when `assert_3d=True` and `assert_3d` is False by default. Maybe that's just a case for using `assert_3d=True` where appropriate?
",nan,nan
4,issue_comment,302,nilearn,nilearn,banilo,2014-12-05 08:14:41,"The thing is that, in most cases, there is probably no error. So the user might be fooled by input arguments being sounds but encounter unexpected outputs anyways. This might be especially true for tools such as NiftiLabelsMasker that are somewhat tricky to get into, IMHO. One might for example think that one image needs to be provided for each label individually.

`assert_3d=True`seems like a very good idea.

Some of those functions also go back to `_load_mask_img`...

In any event, catching unwanted/unexpected iterables of niimgs, could be in large part centralized to check_niimg/_load_mask_img calls, I guess.
",nan,nan
5,issue_comment,302,nilearn,nilearn,eickenberg,2014-12-05 08:20:34,"Just taking the first element of an iterable and not warning that it should
be 3d is definitely not the way to go. Using the appropriate kwarg in
check_niimg, whenever 3d needs to be enforced seems to address this neatly
- provided the error message is understood. But I think it should be
  understqndqble the way check_niimg is right now.

On Fri, Dec 5, 2014 at 9:14 AM, Danilo Bzdok notifications@github.com
wrote:

> The thing is that, in most cases, there is probably no error. So the user
> might be fooled by input arguments being sounds but encounter unexpected
> outputs anyways. This might be especially true for tools such as
> NiftiLabelsMasker that are somewhat tricky to get into, IMHO. One might for
> example think that one image needs to be provided for each label
> individually.
> 
> assert_3d=Trueseems like a very good idea.
> 
> Some of those functions also go back to _load_mask_img...
> 
> In any event, catching unwanted/unexpected iterables of niimgs, could be
> in large part centralized to check_niimg/_load_mask_img calls, I guess.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/302#issuecomment-65759228.
",nan,nan
6,issue_comment,302,nilearn,nilearn,banilo,2014-12-05 12:47:47,"So, how should we attack this?
",nan,nan
7,issue_comment,302,nilearn,nilearn,eickenberg,2014-12-05 12:49:59,"As @lesteve suggests, right? Use ensure_3d=True whenever this is necessary

On Fri, Dec 5, 2014 at 1:47 PM, Danilo Bzdok notifications@github.com
wrote:

> So, how should we attack this?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/302#issuecomment-65785389.
",nan,nan
8,issue_comment,302,nilearn,nilearn,banilo,2014-12-05 12:56:08,"That does not cover all the cases, see first message...
",nan,nan
9,issue_comment,302,nilearn,nilearn,eickenberg,2014-12-05 13:00:45,"Which are the ones that remain?
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
7,pull_request_commit_comment,440,nilearn,nilearn,AlexandreAbraham,2015-02-18 10:30:27,"This should go into the ""if"" condition. If we decide to run coverage on only one of the runs, then we should skip it in the others as it requires a significant time to run.
",0abfce4f46155dba7e4fed54faed2b14f1c32115,"(5, '', u'continuous_integration/install.sh')"
8,pull_request_commit_comment,440,nilearn,nilearn,lesteve,2015-02-18 10:40:40,"> we should skip it in the others as it requires a significant time to run

I double-checked and looks like you are right. An additional 30"" for coverage gathering on top of the 1'30"" for the tests only on my machine.
",0abfce4f46155dba7e4fed54faed2b14f1c32115,"(5, '', u'continuous_integration/install.sh')"
5,issue_comment,440,nilearn,nilearn,coveralls,2015-02-18 10:43:02,"[![Coverage Status](https://coveralls.io/builds/1947670/badge)](https://coveralls.io/builds/1947670)

Changes Unknown when pulling **d1e85f1b688c5894e804d756097ac9cddc562268 on lesteve:coveralls-support** into *\* on nilearn:master**.
",nan,nan
9,pull_request_commit_comment,440,nilearn,nilearn,AlexandreAbraham,2015-02-18 10:45:12,"Of course I'm right! I timed it too :watch:.
",0abfce4f46155dba7e4fed54faed2b14f1c32115,"(5, '', u'continuous_integration/install.sh')"
6,issue_comment,440,nilearn,nilearn,coveralls,2015-02-18 10:51:31,"[![Coverage Status](https://coveralls.io/builds/1947727/badge)](https://coveralls.io/builds/1947727)

Changes Unknown when pulling **0abfce4f46155dba7e4fed54faed2b14f1c32115 on lesteve:coveralls-support** into *\* on nilearn:master**.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,issue_comment,447,nilearn,nilearn,coveralls,2015-02-19 21:15:06,"[![Coverage Status](https://coveralls.io/builds/1959371/badge)](https://coveralls.io/builds/1959371)

Coverage remained the same at 91.82% when pulling **6024a8675023d94b3585f23dfa20667991728a4d on bcipolli:issue-444** into **a9c2f86006ed7500f500eb2c78af5ba67a003b51 on nilearn:master**.
",nan,nan
5,issue_comment,447,nilearn,nilearn,lesteve,2015-02-19 21:48:37,"Thanks
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,446,nilearn,nilearn,bcipolli,2015-02-19 17:16:30,"I removed the comment about abstracting `verbose` to a script parameter.  I agree that the examples tend to be more readable with fewer variables / more hard-coded values.
",nan,nan
3,issue_comment,446,nilearn,nilearn,lesteve,2015-02-19 17:34:05,"> An atlas is used to create the connection matrix, but is never shown. I suggest showing the atlas to the user, as the connection matrices are uninterpretable without it. Or, probably much better, plot the centroids of the ROIs on a single mask via the (coming!) connectome plotting.

Just a heads up: I actually have done that in the PR #441 commit is [here](https://github.com/lesteve/nilearn/commit/c9c602f3d69d4594fa10da553ba1c049b2185c1e).
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,444,nilearn,nilearn,lesteve,2015-02-19 17:45:48,"Good catch and I agree on all your points! For small fixes like this don't hesitate to do a PR directly, it does reduce the overhead a little bit.

Bonus message if you add a test where you check the error message if there is none already.
",nan,nan
6,issue_comment,444,nilearn,nilearn,bcipolli,2015-02-19 18:14:42,"Cool--glad to do a PR directly for these types of small changes.
I will take a look at the test situation and do a PR sometime soon!
",nan,nan
5,issue_comment,444,nilearn,nilearn,lesteve,2015-02-19 21:48:17,"> Or just push it into master :P (private joke for @lesteve).

:laughing: 
",nan,nan
3,issue_comment,444,nilearn,nilearn,bcipolli,2015-02-21 00:18:10,"lol :)  Fixed in #447.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,381,nilearn,nilearn,GaelVaroquaux,2015-02-02 09:04:34,"> ~resting_state seems more readable to me.

That's onlny because you know C (or matlab, actually). To a layman, it's
not readable at all. I like to push people to use np.logical_not in the
codebase.
",nan,nan
5,issue_comment,381,nilearn,nilearn,lesteve,2015-02-02 09:12:04,"Fair enough, I switched the title to np.logical_not. Also for the sake of completeness I don't know matlab.
",nan,nan
4,issue_comment,381,nilearn,nilearn,GaelVaroquaux,2015-02-02 09:15:02,"> Also for the sake of completeness I don't know matlab.

I am sorry. I didn't mean to insult you :)
",nan,nan
6,issue_comment,381,nilearn,nilearn,lesteve,2015-02-02 09:19:12,"> > Also for the sake of completeness I don't know matlab.
> 
> I am sorry. I didn't mean to insult you :)

No worries, no offense taken ;-).
",nan,nan
7,issue_comment,381,nilearn,nilearn,salma1601,2015-02-05 08:53:57,"I am working on it
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
7,issue_comment,386,nilearn,nilearn,bcipolli,2015-02-05 06:23:53,"Looks like one file may have been included unintentionally? `nilearn/decomposition/dict_learning.py`
",nan,nan
8,issue_comment,386,nilearn,nilearn,bcipolli,2015-02-05 07:32:20,"Quick note: I tried this with #371, in place of the change I had made, and it solved all of the memory warnings.
",nan,nan
5,issue_comment,386,nilearn,nilearn,lesteve,2015-02-05 08:01:36,"> Looks like one file may have been included unintentionally? nilearn/decomposition/dict_learning.py

Yep good catch!
",nan,nan
9,issue_comment,386,nilearn,nilearn,bcipolli,2015-02-05 08:06:06,"Two suggestions from the test side: 
- Could you add tests to test the cache invalidation code?  There are two different warnings, a test to trigger each pathway seems appropriate.
  *Could you add `verbose=0` to your `Memory` object to avoid output in the test?
",nan,nan
6,issue_comment,386,nilearn,nilearn,lesteve,2015-02-05 09:24:01,"LGTM, once the neurodebian travis passes.
",nan,nan
10,issue_comment,386,nilearn,nilearn,bcipolli,2015-02-05 18:03:50,"Awesome re: invalidation test.  Glad this is in, got to learn `nilearn` a bit more today through reading all the activity!  Hope I can participate in a future sprint :)
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,387,nilearn,nilearn,lesteve,2015-02-03 23:13:13,"> Just to clarify: are there other examples with the one you mentioned ?

Those are the only ones I can remember.

> Do you suggest that the plots should be separated more systematically ? 

It the example is included in some narrative documentation it makes more sense to have one plot per figure because it makes the insertion of plots more seamless: i.e. code snippet - plot - code snippet - plot - etc ...

I think there were some discussion about this kind of things in other issues I'll have to find them again.
",nan,nan
4,issue_comment,387,nilearn,nilearn,banilo,2015-02-03 23:24:18,"cf. 

#331 
#259 
",nan,nan
5,issue_comment,387,nilearn,nilearn,salma1601,2015-02-05 09:55:04,"doing this
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 10:56:34,"**a** nifti image or maybe Nifti image not sure what the convention about the capitalization of nifti is.
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
7,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 10:57:01,"missing URL
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
8,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 10:57:31,"Oops forget that it is present a few lines below
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
9,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 10:59:51,"I think you need to say 4D Niimg-like object (and probably add the URL so that the error is helpful)
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
10,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 11:03:20,"I think we still need to have a short description of the parameter
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(14, '', u'nilearn/image/image.py')"
11,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 11:03:39,"idem, needs a short description of the parameter
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(23, '', u'nilearn/image/image.py')"
12,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 11:05:07,"the first niimg and colon should be removed
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/input_data/base_masker.py')"
13,pull_request_commit_comment,388,nilearn,nilearn,banilo,2015-02-05 13:29:34,"Adressed - but did not fold.
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(14, '', u'nilearn/image/image.py')"
14,pull_request_commit_comment,388,nilearn,nilearn,banilo,2015-02-05 13:29:39,"Adressed - but did not fold.
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(23, '', u'nilearn/image/image.py')"
15,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 14:20:55,"Same comment here about a short description needed
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(4, '', u'nilearn/image/image.py')"
16,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 14:22:08,"One 'niimg: ' too many
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/masking.py')"
17,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 14:24:18,"Shouldn't you keep 3D ?
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/masking.py')"
18,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 14:24:38,"Keep 3D?
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/masking.py')"
19,pull_request_commit_comment,388,nilearn,nilearn,lesteve,2015-02-05 14:24:46,"Keep 3D?
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(None, '', u'nilearn/masking.py')"
20,pull_request_commit_comment,388,nilearn,nilearn,banilo,2015-02-05 15:40:39,"Done
",1b32a740c1b436ff4dd4b8a68905808222752b69,"(4, '', u'nilearn/image/image.py')"
5,issue_comment,388,nilearn,nilearn,lesteve,2015-02-05 15:50:09,"LGTM, merging, thanks.

Next time better commit messages and it'll be even greater :wink:
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
9,issue_comment,375,nilearn,nilearn,AlexandreAbraham,2015-01-30 15:34:21,"> just checking: there is a standardize=True for the masker in plot_haxby_rpbi.py with a comment that says that it is important for RPBI. The thing is that standardize=True is not used for the other RPBI examples. Any reason why?

We should check in RPBI that data is standardize and raise a warning if not.
",nan,nan
4,issue_comment,375,nilearn,nilearn,bcipolli,2015-02-23 06:07:03,"@lesteve I have been looking at this today, I think it could be useful for some of the RSA things I've been doing in the background.

I'd be happy to help push this forward.  I can take care of the merge conflicts and take care of the printing / verbose issues, for example.  I also think the coding of the `plot_haxby_rpbi` example could be simplified.    

I also had a couple of questions about analysis choices made in the `plot_haxby_rpbi` example.  I worry that my questions / concerns may be naive (I am still very new to neuroimaging analysis), but I will follow up with them in case they're questions others might have in learning from the examples.
",nan,nan
5,issue_comment,375,nilearn,nilearn,bcipolli,2015-02-23 06:44:02,"2 questions to start:
- Why does the Haxby example limit data to houses and faces?  I think a comment there would be helpful.
- The code mentions that it takes the mean image per condition, as different samples within the same session have dependencies in time.
  - Isn't this issue also true (to a lesser degree) between conditions (house vs. face)?
  - Would this be (at least partially) alleviated by passing `detrend=True` in the mask?
  - Is this really a concern in a block design (24s per stimulus, 12s of rest in-between)?
",nan,nan
6,issue_comment,375,nilearn,nilearn,lesteve,2015-02-27 09:36:28,"> I'd be happy to help push this forward.

That would be great indeed! There was some interest about working on it during the 0.1 sprint but other issues were deemed more important at the time.

I guess the first thing would be to rebase on master and fix merge conflicts. The bullet points mentioned in my message at the very top are good next steps.
",nan,nan
7,issue_comment,375,nilearn,nilearn,eickenberg,2015-02-27 12:01:11,"> Isn't this issue also true (to a lesser degree) between conditions (house vs. face)?

Probably, but the extent depends on long range temporal interactions (which are typically drift components) that are difficult to quantify

> Is this really a concern in a block design (24s per stimulus, 12s of rest in-between)?

Drift cutoff in nipy GLM is set by default to a period of 128s. If the interactions are really that long, then this would be a concern. 

> Would this be (at least partially) alleviated by passing detrend=True in the mask?

Probably. But as mentioned elsewhere, this detrending needs to be done by chunks (as indicated by the `chunk` variable in the label data)
",nan,nan
8,issue_comment,375,nilearn,nilearn,bcipolli,2015-02-28 20:47:02,"Rebased to master / fixed merge conflicts:
https://github.com/bcipolli/nilearn/tree/rpbi

Thanks @eickenberg ; I can perhaps include some of that in the example (like the detrending in chunks), and a bit more in comments.  I also think the code can be cleaned up a bit (after working through the example for some of the RSA-focused work I'm doing).

I'll also take a look at the bullet points listed!
",nan,nan
10,issue_comment,375,nilearn,nilearn,AlexandreAbraham,2015-12-18 13:22:40,"Should we kill this one? Or resurrect it?
",nan,nan
11,issue_comment,375,nilearn,nilearn,bthirion,2015-12-18 13:36:16,"I am wondering what the right placeholder for that method is: Nilearn/Nistats. There are two blockers: 
- the structure instantiated to obtain the p-values through permutation is a bit complex / hard to maintain.
- Ward clustering is very slow. Renn should be implemented instead.
  The second point is easy to address, not the first one.

An idea that we have currently is to have a procedure that does not require the permutations, but this is a topic of research. Should go to nilearn-sandbox ?
",nan,nan
12,issue_comment,375,nilearn,nilearn,lesteve,2016-09-06 14:23:10,"Closing this one, since this is in nilearn_sandbox now, see https://github.com/nilearn/nilearn_sandbox/pull/8.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
7,issue_comment,519,nilearn,nilearn,banilo,2015-03-23 13:32:15,"I can take care of that.
",nan,nan
3,issue_comment,519,nilearn,nilearn,GaelVaroquaux,2015-03-23 13:33:19,"> I can take care of that.

Thanks!
",nan,nan
8,issue_comment,519,nilearn,nilearn,AlexandreAbraham,2015-03-23 14:04:51,"Well, you had what you deserved :P
",nan,nan
9,issue_comment,519,nilearn,nilearn,AlexandreAbraham,2015-03-23 14:27:58,"What is the usecase? Your tried to compute vmax yourself and your image had nans?
",nan,nan
4,issue_comment,519,nilearn,nilearn,GaelVaroquaux,2015-03-23 14:58:12,"> What is the usecase? Your tried to compute vmax yourself and your image had
> nans?

Not me, but the student with whom I am working did that.
",nan,nan
10,issue_comment,519,nilearn,nilearn,AlexandreAbraham,2015-03-23 15:09:59,"OK. Do you think that the error message should advise the user to use `np.nan_max` rather than `np.max`?
",nan,nan
5,issue_comment,519,nilearn,nilearn,GaelVaroquaux,2015-03-23 15:17:51,"> OK. Do you think that the error message should advise the user to use
> np.nan_max rather than np.max?

Yes, but I'd like to not have crasher, because sometimes there is a nan
in the data, and everything crashes which is a problem when you are
trying to analyse data.
",nan,nan
6,issue_comment,519,nilearn,nilearn,GaelVaroquaux,2015-03-27 15:44:11,"> Closed #519 via #520.

Thank you team!!!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,518,nilearn,nilearn,AlexandreAbraham,2015-03-23 09:36:02,"I may have ran into this problem this week-end when I was not supposed to work and I may have already fixed it. The question is: do we add tests for that? I think that this would not be trivial at all (due to the fact that we have to basically mock everything).
",nan,nan
3,issue_comment,518,nilearn,nilearn,GaelVaroquaux,2015-03-23 09:37:24,"> The question is: do we add tests for that? I think that this would not
> be trivial at all

If it's really nasty to test, let's not test it.
",nan,nan
5,issue_comment,518,nilearn,nilearn,AlexandreAbraham,2015-03-23 09:58:48,"OK, let's add details for the record.

For `fetch_craddock_2012` and `fetch_localizer_calculations`, resuming is not supported. But, instead of raising error 206 saying that they do not support it, they just resend the whole file. The problem is that, on our side, we are unaware of the original size of the file and just trust the server.

Luckily, server who support resuming add a ""Content-range"" header with the size already downloaded and the total size of the file. We now rely on that header.

A good thing would be to behave like browsers : pre-allocate the size of the file and keep track of total size and already downloaded file. But that would mean to create a metadata file and a layer of complexity over the fetcher so I won't do it.
",nan,nan
6,issue_comment,518,nilearn,nilearn,AlexandreAbraham,2015-03-25 14:54:46,"Fix by #521.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
7,pull_request_commit_comment,437,nilearn,nilearn,GaelVaroquaux,2015-02-17 14:42:27,"Give us an example here (doctested), because it is very hard to understand from the docstring what this function does.
",e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a,"(19, '', u'nilearn/_utils/logger.py')"
8,pull_request_commit_comment,437,nilearn,nilearn,lesteve,2015-02-17 14:46:43,"Can you use items rather than iteritems? Just that I have been looking at python3 support lately and that would be one less to fix ...
",e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a,"(None, '', u'nilearn/_utils/logger.py')"
9,pull_request_commit_comment,437,nilearn,nilearn,AlexandreAbraham,2015-02-17 14:55:16,"For consistency, I would prefer to iterate over `sorted(kwargs.keys())`.
",e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a,"(None, '', u'nilearn/_utils/logger.py')"
10,pull_request_commit_comment,437,nilearn,nilearn,GaelVaroquaux,2015-02-17 15:16:07,"> For consistency, I would prefer to iterate over sorted(kwargs.keys()).

Great catch. This is actually important.

Actually, sorted(kwargs.items()) works too.
",e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a,"(None, '', u'nilearn/_utils/logger.py')"
11,pull_request_commit_comment,437,nilearn,nilearn,banilo,2015-02-17 15:18:46,"Like we have one now?
",e4f1dd473b0f768fde73eb9ae6f5fcb98fa9e14a,"(19, '', u'nilearn/_utils/logger.py')"
6,issue_comment,437,nilearn,nilearn,banilo,2015-02-17 18:28:20,"Ok, should be fine now.

Nice string-in-the-string situation, by the way ;)
",nan,nan
5,issue_comment,437,nilearn,nilearn,lesteve,2015-02-18 08:40:42,"LGTM, merging.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,pull_request_commit_comment,515,nilearn,nilearn,AlexandreAbraham,2015-03-20 13:32:18,"This is a very ugly hack. But:
- it works for all functions
- it exposes the nice urllib refactoring made in P3
- it is inefficient because name resolution is made at runtime. It can be fastened using cache (typically a dictionary) but this is wasting time considering that we make 10 calls to urllib to download a dataset.
- it is developper friendly (meaning, no additional work is required to make things work if a new feature of urllib is used)

I'm opened to comments ;)
",385d3b227fb5daed4349bc63d7fff4a893b8fff5,"(48, '', u'nilearn/_utils/compat.py')"
7,pull_request_commit_comment,515,nilearn,nilearn,GaelVaroquaux,2015-03-20 14:05:44,"I like this. It's simple and compact.
",385d3b227fb5daed4349bc63d7fff4a893b8fff5,"(48, '', u'nilearn/_utils/compat.py')"
5,issue_comment,515,nilearn,nilearn,GaelVaroquaux,2015-03-20 14:06:10,":+1: for merge. Nice work!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
43,pull_request_commit_comment,430,nilearn,nilearn,eickenberg,2015-02-15 18:14:27,"Maybe: the seeds are taken to be the locations indicated by all voxels with non-zero values
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
44,pull_request_commit_comment,430,nilearn,nilearn,eickenberg,2015-02-15 18:14:36,"for
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
45,pull_request_commit_comment,430,nilearn,nilearn,eickenberg,2015-02-15 18:15:22,"set to 0
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
46,pull_request_commit_comment,430,nilearn,nilearn,eickenberg,2015-02-15 18:15:48,".
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
41,issue_comment,430,nilearn,nilearn,eickenberg,2015-02-15 18:19:52,"fyi I did some benchmarks and `tensordot` is just fine. Compared to my proposed alternatives it is also readable.
",nan,nan
47,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 18:27:52,"I like it!
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
48,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 18:29:02,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
49,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 18:31:10,"This part was taken from the doc NiftiLabelsMasker. We should propagate the fix to other classes (I won't do it here given that a modification is pending in PR #426).
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
50,pull_request_commit_comment,430,nilearn,nilearn,eickenberg,2015-02-15 18:32:45,"Don't worry - ``put'' is  not wrong, my comment is purely cosmetic
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
51,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 20:43:00,"Might not strike as a crisp description. Perhaps ""Mask nifti images by spherical volumes for seed-region analyses""
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(2, '', u'nilearn/input_data/nifti_spheres_masker.py')"
52,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 20:52:09,"Rather throw NotImplemented exception?

Regarding the message: would it not be a seed's time series data, the user would, if existing, pass o to inverse_transform()? -> If yes, ""Inverse transformation does not make sense for seed-derived data.""?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
53,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 20:52:37,"""images"" -> ""Nifti-like objects""
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
54,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 21:17:10,"From experience with coordinate-based meta-analysis: many people appear to get confused about when TAL versus MNI coordinates make a difference. Perhaps include something related here.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
55,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 21:44:34,"Same as

``` python
mask = np.zeros((3, 3, 3), dtype=np.bool)
mask[1, :, 1] = True
```
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/tests/test_nifti_spheres_masker.py')"
56,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 21:49:33,"The nature of the seed nifti is not verified (many zero, and a few non-zero indicator voxels).
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
57,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 21:52:25,"Nift1Image.get_data() automatically makes sure that time dimension comes last. Not sure the related part in the imgs-explanation is necessary.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(220, '', u'nilearn/input_data/nifti_spheres_masker.py')"
58,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 22:05:31,"in ""voxel space""
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
59,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 22:07:41,"Why do we actually not have an `is_niimg` function?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
60,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 22:18:28,"Actually, I was waiting for your PR to be finalized and merged to have a common description across all maskers ;).
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(2, '', u'nilearn/input_data/nifti_spheres_masker.py')"
61,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 22:19:29,"Because finding out if an object is a niimg is the same as loading it.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
62,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-15 22:20:04,"Good to mention that, I was wondering about the optimal order of masker-related merges.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
63,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 22:20:40,"fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
64,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 22:22:26,"It seems obvious to me that the given coordinates must ""live"" in the same space as the images. What do you suggest?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
65,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-02-15 22:30:00,"Is there a strong usecase for that type of input? I am a bit bit weary of functions that are very polymorphous in their inputs. They can make errors hard to track.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
66,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 22:31:16,"No. Do you think that using `masking._load_mask_img` is enough or should we specifically count the number of seeds and raise an error if there are too many?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
67,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-02-15 22:31:22,"I'd rather have the method simply not present. That way it is possible to test if an object implements inverse_transform or not using hasattr.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
68,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 22:33:43,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
69,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 22:34:54,"This part comes from NiftiLabelsMasker.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(220, '', u'nilearn/input_data/nifti_spheres_masker.py')"
70,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 22:35:47,"Yes, I prefer Gael's option, I didn't think of `hasattr`.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
71,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-15 23:06:59,"There is not and I will remove it. In fact, by writing the tests, I realized that there is no simple way to specify the order in which the voxels must be loaded. I think that it's better to rely on coordinates.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
72,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-17 21:26:17,"I wanted to keep explicit matrices to be clearer but maybe I was wrong.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/tests/test_nifti_spheres_masker.py')"
42,issue_comment,430,nilearn,nilearn,banilo,2015-02-19 04:34:25,"My naive view would be: If the goal is really spheres, and spheres only, then We can restrain ourselves to coordinates as input. Special overlapping or non-overlapping cases can be handled by NiftiMapsMasker and NiftiLabelsMasker.

Sent from my iPhone

> On 19 Feb 2015, at 00:29, Alexandre Abraham notifications@github.com wrote:
> 
> Absolutely no problem. I was just trying to consider all the edge cases. I thought of this particular case because depending on the post treatment applied to the data, it may be a problem to have identical features.
> 
> —
> Reply to this email directly or view it on GitHub.
",nan,nan
73,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-02-25 15:36:48,"points at end of explanation missing here and in some subsequent arguments.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
5,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-25 20:10:20,"I just started to try and work with this, and I found it has a very limited function.  It would be much more useful to me (and perhaps others?) if the masker accepted a transformation function.  You extract the voxels within the sphere and you pass them to me; I have a function to create a value from it.

Is it something to consider here, in #353, or to open a new issue about?
Edit: Here's my code for having a generic `xfer_fn`: https://github.com/bcipolli/nilearn/commit/d085fcd934a48bc65ffb2557c388c0788ecb1e58

Edit: Turns out, the algorithm is fixed to loop over seeds (vs. image slices).  I actually want the latter.  Since this is a bigger generalization of the idea, I'll open up a new issue for this to discuss.
",nan,nan
6,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-25 21:50:33,"How about an `inverse_transform` method, that outputs the vector values at each seed location?  At the very least it's good for visualization.

Edit: this would require a `seeds_img`.  Allowing input of a `seeds_img` instead of `seeds` in the constructor would be a nice feature as well.
",nan,nan
74,pull_request_commit_comment,430,nilearn,nilearn,bcipolli,2015-02-25 23:03:28,"`coords` is 4d; worth mentioning that fact, and the 4th (constant) dimension here?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
7,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-26 00:17:37,"Since I needed both of these suggestions today, I did my best to do them myself.
- Allow a user-defined transform function: https://github.com/bcipolli/nilearn/commit/deea263ad72419dc407339b3aa2ccf2e508c5ef3
- Allow seed specification via a mask image, and implement `inverse_transform`: https://github.com/bcipolli/nilearn/commit/9f17287f48db575400cd339adcde78cf6a6e8bb8

I didn't add tests for either, as I'm in a rush and not sure if y'all will like the above.  Either way, here's a sample script (yes, I know it does some things unnecessarily.. it's my base script for playing :) ):

``` python
import matplotlib.pyplot as plt

import nibabel

from nilearn import datasets
from nilearn.input_data import NiftiSpheresMasker
from nilearn.plotting import plot_stat_map, plot_roi
from nilearn.image import index_img

# Defs
subj_idx = 0
cut_coords = (28, -34, -22)

# Get data
print(""Loading data..."")
haxby_dataset = datasets.fetch_haxby(n_subjects=subj_idx + 1)
func_img = index_img(nibabel.load(haxby_dataset.func[subj_idx]),
                     range(100))  # remove most slices for speed
mask_img = nibabel.load(haxby_dataset.mask_vt[subj_idx])


def my_xform(sphere_data):
    return sphere_data.mean(axis=0)

# Create mask
print(""Fit the SphereMasker..."")
sphere_masker = NiftiSpheresMasker(seeds=mask_img, radius=5,
                                   xform_fn=my_xform,
                                   mask_img=mask_img,
                                   memory=None, memory_level=10,
                                   verbose=10)
sphere_masker.fit()
plot_roi(sphere_masker.seeds_img_, title='seed img', cut_coords=cut_coords)
plot_roi(sphere_masker.mask_img_, title='mask img', cut_coords=cut_coords)

# Compute the mean image.
print(""Transforming the image..."")
vecs = sphere_masker.transform(func_img)
mean_img = sphere_masker.inverse_transform(vecs)
plot_stat_map(index_img(mean_img, 0), cut_coords=cut_coords)

plt.show()
```
",nan,nan
8,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-26 01:21:41,"The initial implementation contained `mask_img` but I removed it after discussions.
",nan,nan
9,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-26 03:36:44,"@AlexandreAbraham OK, well, you have my vote for it being essential. :)
",nan,nan
75,pull_request_commit_comment,430,nilearn,nilearn,bcipolli,2015-02-26 03:39:07,"This looks highly parallelizable; perhaps create a nested function of the code in this loop and parallelize it?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
76,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-26 06:49:19,"This is indeed but it would require more memory. For maskers, I prefer to lower memory consumption as much as possible since this usually is the bottleneck here. Also people usually mask once and then use cached data so the time overhead only happens once.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
10,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-26 10:21:41,"> @AlexandreAbraham OK, well, you have my vote for it being essential. :)

Do you have a usecase? We removed it precisely because we couldn't find anybody using a seed mask and there is no available atlas available online to my knowledge.

> Allow a user-defined transform function: bcipolli@deea263

What function do you want to use apart from `mean`? We don't offer that choice either in NiftiLabelsMasker. We could add it but I want to check that it's not YAGNI.

> How about an inverse_transform method, that outputs the vector values at each seed location? At the very least it's good for visualization.
> Edit: this would require a seeds_img. Allowing input of a seeds_img instead of seeds in the constructor would be a nice feature as well.

An `inverse_transform` would rise a lot of other problems, like the shape to use. Plus, I don't see why anybody would want to visualize that. We definitely need visualization for seed based experiences but correlation matrix plot is much more fit than brains in that specific case.
",nan,nan
77,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-26 10:22:58,"I don't get your remark. Can you elaborate?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
78,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-26 10:23:30,"This has been copied from NiftiLabelsMasker, we should open another issue about that and fix it afterward.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
11,issue_comment,430,nilearn,nilearn,eickenberg,2015-02-26 10:35:56,"> What function do you want to use apart from mean?

I have seen `mean`, `std`, `min` and `max` used. Cannot judge on whether that is advisable or not.
",nan,nan
12,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-26 11:51:44,"I suggest that we focus on simple behavior for the moment. Since this question is common to spheres and labels masker, we can open an issue about that and discuss it. How does it sound?
",nan,nan
13,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-26 15:26:02,"> > @AlexandreAbraham OK, well, you have my vote for it being essential. :)
> > Do you have a usecase? We removed it precisely because we couldn't find anybody using a seed mask and there is no available atlas available online to my knowledge.

For my analysis, I have a mask of ventral-temporal (VT) cortex.  For each voxel in that mask, I want a ball of nearby voxels.  I will use them to compute something (right now, a similarity matrix... but could be mean, std, etc.) that I then store as the value at that voxel position. I need to do that for every voxel in that VT mask.

> > Allow a user-defined transform function: bcipolli@deea263
> > What function do you want to use apart from mean? We don't offer that choice either in NiftiLabelsMasker. We could add it but I want to check that it's not YAGNI.

It is very powerful to have a vector of voxels for each slice simultaneously.  Again, this is exactly what I need for RSA, but if you have a callback function, you can do whatever you want (using global variables).  It's very powerful.

> > How about an inverse_transform method, that outputs the vector values at each seed location? At the very least it's good for visualization.
> > An inverse_transform would rise a lot of other problems, like the shape to use. Plus, I don't see why anybody would want to visualize that. We definitely need visualization for seed based experiences but correlation matrix plot is much more fit than brains in that specific case.

My seeds are very dense.  I want to visualize the values coming out in brain space. 

As far as the input, I also don't want to have to specify seed locations in template space, but rather through voxel indices.  Otherwise, I'll have to do the `np.tensordot` logic myself, and that is not simple at all.

> I suggest that we focus on simple behavior for the moment. Since this question is common to spheres and labels masker, we can open an issue about that and discuss it. How does it sound?

I'm absolutely all for that, in all of these cases. :)  I think there are two things to discuss (allow specification of an `xform_fn`, allow specifying a `seed_img` as input / inverse_transform on output), would be glad to open two issues.  

Note that in my RSA project, I'm already using both of the above.  For me, it's just a question of whether it's potentially useful to others, to in `nilearn`.
",nan,nan
79,pull_request_commit_comment,430,nilearn,nilearn,bcipolli,2015-02-26 15:28:47,"The comment `Create an array of shape (3, array.shape)` is above the definition of `coords`.  `Coords` actually has a 4th row of all ones, so the comment isn't strictly true.  I thought it might be worth mentioning that 4th (constant) row in the comment.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
14,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-26 15:39:19,"> For my analysis [...]

Sounds like your usage corresponds more to SearchLight than NiftiSpheresMasker. Both are very close and I was thinking of sharing some code between the two. Could you take a look at SearchLight and tell me if you can achieve what you want by changing the estimator?
",nan,nan
80,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-02-26 15:40:37,"OK. My comment describes the two lines below, not the first one, but I'll make it clearer ;).
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
15,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-26 17:20:28,"> Sounds like your usage corresponds more to SearchLight than NiftiSpheresMasker. Both are very close and I was thinking of sharing some code between the two. Could you take a look at SearchLight and tell me if you can achieve what you want by changing the estimator?

I'm not sure, I'm having a tough time understanding the code well, or how to use the more complex features.  I don't want to stop things here at all, so let's discuss in a new issue (and when I'm not on a deadline, like today :) )
",nan,nan
16,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-28 18:42:00,"After using this class for a poster I just presented (on RSA searchlight) and then reviewing the documentation, I wonder if this class isn't better implemented as a `Transformer` built on top of a more generalized `Masker`?

From my understanding, a masker is for selecting subsets of voxels.
http://nilearn.github.io/building_blocks/pipeline_introduction.html#masking
I believe this fits how all the current maskers work.

Transformers are about filtering and/or modifying the data:
http://scikit-learn.org/stable/developers/#apis-of-scikit-learn-objects

I would expect a `NiftiSpheresMasker` to mask the data without transforming it, while a `NiftiSpheresTransformer` to mask the data, then transform it.

Generalizing the `NiftiSpheresMasker` could form the basis of the searchlight procedure, the `NiftiSpheresTransformer`, and could easily be the basis of my RSA searchlight code (which is different from the classification-focused searchlight code).

Alternately, keeping this class as implemented, but changing the name to `NiftiSpheresTransformer`, would match the existing `nilearn` and `scikit-learn` object model schema better (and make future refactoring, if needed, avoid renaming objects).
",nan,nan
17,issue_comment,430,nilearn,nilearn,GaelVaroquaux,2015-02-28 18:48:48,"From a user perspectice, the 99% usecases of this class are going to be
extracting signals for an ROI analysis. I can see that from a coding
perspective there is a very interesting link to RSA. However, it is
important to have a very simple story to tell to the user on what this
class is doing and what it is for, so I fear that making it more general,
or changing its name is dangerous.

That said, I agree that there could be value, in a later PR, to extract
part of the logic of this class in a set of reusable functions, that
could be later combined in a different class, eg for RSA, relying on
similar operations. From a software design principle, the idea would be
that the high-level classes exposed to the user are different, to give a
simple picture of the package to the user, but they share some underlying
code. That's one of the strong values of externalizing the core
numerical functionality in functions rather than classes.

What do you think?
",nan,nan
18,issue_comment,430,nilearn,nilearn,banilo,2015-02-28 18:54:59,"Agreed.

> Generalizing the NiftiSpheresMasker could form the basis of the searchlight procedure, the NiftiSpheresTransformer, and could easily be the basis of my RSA searchlight code (which is different from the classification-focused searchlight code).

In general, once the NiftiSpheresMasker is merged, one could simply derive new, more targeted classes from it.
",nan,nan
19,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-28 19:02:39,"> I can see that from a coding perspective there is a very interesting link to RSA. However, it is
> important to have a very simple story to tell to the user on what this class is doing and what it is for, so I fear that making it more general, or changing its name is dangerous.

I should probably have separated it into two parts.  One is that I think calling this a `Masker` is confusing for users; it doesn't fit with the other maskers (it transforms data, not just extracting it).   The other is about how to go about doing the abstractions.

> In general, once the NiftiSpheresMasker is merged, one could simply derive new, more targeted classes from it.

I agree, but I think it's really a `Transformer`, not a `Masker`.  I think it's best to get names right first, so good to discuss before merging.  So to repeat: I think making it a pure masker, or calling it something else (my suggestion was `NiftiSpheresTransformer`) would fit the schema of what masks are, what transforms are, and therefore much clearer for users.
",nan,nan
20,issue_comment,430,nilearn,nilearn,GaelVaroquaux,2015-02-28 19:09:32,"> I agree, but I think it's really a Transformer, not a Masker.

All maskers are transformers (I feel that this sentence feel like it has
a deep meaning and should be said with the voice of Mr Spock :} ).

> I think it's best to get names right first, so good to discuss before
> merging.

OK. But I do claim that this object belong to the same family of concepts
as our other ""masker"" objects, it is very close to the NiftiLabelsMasker
of the NiftiMapsMasker.

Maybe all the ""Masker"" objects should be renamed to ""Loader"" objects.
That said, I don't see something horribly wrong with using the names
""masker"" for what we doing with them. But I admit that I can be convinced
otherwise.
",nan,nan
21,issue_comment,430,nilearn,nilearn,eickenberg,2015-02-28 19:17:57,"On Sat, Feb 28, 2015 at 8:09 PM, Gael Varoquaux notifications@github.com
wrote:

> > I agree, but I think it's really a Transformer, not a Masker.
> 
> All maskers are transformers (I feel that this sentence feel like it has
> a deep meaning and should be said with the voice of Mr Spock :} ).

+1

> > I think it's best to get names right first, so good to discuss before
> > merging.
> 
> OK. But I do claim that this object belong to the same family of concepts
> as our other ""masker"" objects, it is very close to the NiftiLabelsMasker
> of the NiftiMapsMasker.
> 
> +1
> 
> Maybe all the ""Masker"" objects should be renamed to ""Loader"" objects.

-1

> That said, I don't see something horribly wrong with using the names
> ""masker"" for what we doing with them. But I admit that I can be convinced
> otherwise.
> 
> I understand Ben's distinction in that a masker is perceived to extract,
> but not change, data and that a transformer necessarily applies some
> non-trivial change to the data.

The name ""Transformer"" comes from the nomenclature of scikit-learn, by
which any object is one if it exposes the method ""transform"" and thus can
be used as a pipeline step. Evidently such an informatics concept may not
overlap 1000% with the intuitions of users, but: a) The maskers DO change
the data, e.g. by detrending/standardizing and b) you can see them as the
beginning of a pipeline even if the way it acts upon data is not always
compatible with the checks performed in the scikit-learn pipeline object.

> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/430#issuecomment-76540627.
",nan,nan
22,issue_comment,430,nilearn,nilearn,bcipolli,2015-02-28 19:25:30,"I think I'm understanding this better, thanks for the feedback.  I think my intuitions come from the naming and documentation of `NiftiMasker`, which does more extraction/filtering than recombination.  I expected similar things from other maskers, as the naming is so similar (`NiftiXXMasker`) and the documentation from `NiftiMasker` implied to me that it represents all `Masker` objects.
http://nilearn.github.io/building_blocks/pipeline_introduction.html#masking

I will open an issue for discussion of those ideas (suggesting tweaking the docs, asking about the naming) as they're separate from my question related to this PR (whether this is best called `NiftiSpheresTransformer`).  

Thanks again! 
",nan,nan
23,issue_comment,430,nilearn,nilearn,GaelVaroquaux,2015-02-28 19:41:07,"> the documentation from NiftiMasker implied to me that it represents all
> Masker objects.
> http://nilearn.github.io/building_blocks/pipeline_introduction.html#masking

Yes, the documentation is crap. I am working on a massive rewrite in the
branch
https://github.com/GaelVaroquaux/nilearn/tree/doc_rework

The corresponding issue is https://github.com/nilearn/nilearn/issues/428
",nan,nan
24,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-03-01 10:07:41,"We all agree that there is a common logic behind Nifti{Labels,Maps,Speheres}Masker, and Searchlight. So, I have a proposition. What if I finish up the work on this one as-is and merge it. Then, we refactor the code to use a ""magic"" iterator behind the scenes, for all these classes. Something like:
`_mask_iter_img(niimgs, iter_element, mask_img=none)`
where `iter_element` is to be defined (I have ideas, but I don't want to explain all of this here as I'm not yet sure it will be feasible).

After that, advanced users like @bcipolli could directly import the iterator for their advanced code. This would factorize the code inside and the masker, and provide a useful object for methods people. However, this magic iterator being private, we don't guarantee any backward compatibility, which should not be a problem as it will only be used by advanced people (well, only by Ben and maybe Mehdi in our team I think ;)). An inspiration could be `numpy.nditer`.

Does that sound reasonable?
",nan,nan
25,issue_comment,430,nilearn,nilearn,eickenberg,2015-03-01 10:24:23,"definitely advancing here

+1 for finishing this up.

Looking forward to a proposal for `_mask_iter_img` by advanced persons for advanced persons. Not sure if it is a good idea if it has to be kept private due to conceptual fragility, though.
",nan,nan
26,issue_comment,430,nilearn,nilearn,GaelVaroquaux,2015-03-01 10:52:52,"> Then, we refactor the code to use a ""magic""
> iterator behind the scenes,

""magic"" in software is never a good thing :)
",nan,nan
27,issue_comment,430,nilearn,nilearn,bcipolli,2015-03-01 15:16:02,"+1 for merging and discussing further as well.  My concerns have been addressed, and I'll look forward to  hearing your ideas @AlexandreAbraham !
",nan,nan
81,pull_request_commit_comment,430,nilearn,nilearn,bthirion,2015-03-01 20:32:22,"Shouldn't this be elsewhere ?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
28,issue_comment,430,nilearn,nilearn,bthirion,2015-03-01 20:36:20,"LGTM otherwise
",nan,nan
82,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-03-01 20:36:34,"> Shouldn't this be elsewhere ?

We have moved compose_err_msg() to _utils/logger.py. This probably happened in parallel to this PR.

https://github.com/nilearn/nilearn/blob/master/nilearn/_utils/logger.py#L76
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
83,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-03-01 20:37:02,"Indeed, this code was replicated in NiftiLabelsMasker and NiftiMapsMasker. @banilo moved it in the utils. I will fix that when I'll rebase.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
29,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-03-12 08:50:14,"Sidenote: doc must be updated but I will do that after @GaelVaroquaux's #483 has been merged.
",nan,nan
84,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-03-13 15:22:41,"typo in ""store"" it appears
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
85,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-03-13 15:32:22,"Suggestions: ""List of coordinate triplets...""
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(90, '', u'nilearn/input_data/nifti_spheres_masker.py')"
86,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-03-13 15:33:58,"2 inconsistencies in this docstring
a) point at the end of variable type
b) point at the end of variable description
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
30,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-07 09:05:07,"Tests are passing on my box but not on Travis :(.
Can anybody reproduce?
",nan,nan
31,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 09:20:23,"The example is very basic but shows hwo to use the spheres masker.
",nan,nan
32,issue_comment,430,nilearn,nilearn,banilo,2015-05-13 09:33:53,"> Can anybody reproduce?

tests pass on my machine
",nan,nan
87,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 09:35:47,"As you are delaying the imports to where they are relevant (which I think is great), I think that you could move these two down to the plotting part.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
88,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 09:36:00,"Comment not valid.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
89,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 09:37:21,"Sorry: my remark is incomprehensible.

I think that, to make the example simple, we should not use a group sparse covariance, by something simpler: GraphLasso maybe.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
90,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 09:39:03,"Those two lines above are not needed (which will lead to removing more lines further above).
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
91,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 09:40:15,"Tell use (in a comment) what these coordinates mean.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
92,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 10:46:02,"Honestly, I just copied an existing example and modified it to ake it simpler and use the spheres masker.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
93,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 10:47:43,"> Honestly, I just copied an existing example and modified it to ake it simpler
> and use the spheres masker.

I noticed :). And I thought that it could be more focused/simplified.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
33,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:43:16,"Figures generated by the example:

[obsolete]
",nan,nan
34,issue_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:44:55,"I don't understand the second figure: the timeseries seem very short to me.
",nan,nan
94,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:45:42,"Title is wrong. On top of this, I wouldn't mention ADHD in the title. I would focus on the fact that this is about extracting time series on a set of spheres.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
95,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:46:43,"Can't you make the example simpler by not specifying colors and letting matplotlib choose some?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
96,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:47:45,"You're probably missing a transpose on the 'time_series'.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
97,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:48:23,"I think that I would prefer to have a 'fit_transform' a bit further down. This fit looks stranger.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
98,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:49:31,"Does the connectome look any different without the high variance confounds?

I would rather not put it, and point people to the corresponding part of the docs on extracting time series for connectome in the documentation.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
99,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:50:19,"This print is wrong.

On top of this, I am not sure that we need it at all.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
100,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:50:54,"I don't think that we need this print.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
101,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 11:51:18,"I would move this guy at the bottom, next to the 'show'
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
102,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:53:32,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
103,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:55:54,"Moved as down as possible.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
104,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:56:52,"I don't know why but verbose is activated for maskers in all examples. If we don't put this print, the user will see weird caching prints after a ""fetching dataset"" message, which may seem weird to him.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
105,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:57:15,"If I don't specify colors, I can't put the same colors in the time-series plot and in the connectome.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
106,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:58:09,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
107,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:59:05,"They are the same. Removing.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
108,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:59:21,"Yes, I fixed that after uploading the figures ;).
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
109,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 11:59:57,"Removed all prints.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
110,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 12:00:39,"> I don't know why but verbose is activated for maskers in all examples.

Let's change that for this example. It makes sense for examples with many
subjects, but with only one subject it does not make sense.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
111,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 12:01:29,"> If I don't specify colors, I can't put the same colors in the time-series plot
> and in the connectome.

Which you are already not doing, I believe. Anyhow, I wouldn't bother: we
want a very simple example showing how to use the sphere masker, not much
more.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
35,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 12:03:02,"New figures:

[obsolete]
",nan,nan
112,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 12:05:49,"Before telling us this, tell us that it extract signals on sphere specified by there position in MNI space. That's the goal of the example in terms of learning experience.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
113,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 12:06:19,"You don't need memory anymore. You can just give a path to the masker.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
114,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 12:06:38,"Do you still need image?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
115,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-13 12:08:56,"If we low pass a bit, what does the connectome look like? I find that the link between the PCC and the ACC is weak.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
116,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 12:10:09,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
117,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 12:10:16,"Removed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
118,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 12:10:52,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
119,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 12:13:19,"Looks much better. I also replaced precision matrix by covariance since it makes more sense in that example.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
36,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-13 12:15:05,"Latest figures:

![dmn_conn](https://cloud.githubusercontent.com/assets/1647301/7610102/722c14b6-f97a-11e4-93fc-567d3ce97135.png)
![dmn_ts](https://cloud.githubusercontent.com/assets/1647301/7610103/722c85d6-f97a-11e4-8a28-88321341d50d.png)
",nan,nan
37,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-18 08:34:36,"Ping @lesteve @GaelVaroquaux. Sorry to push you a little bit but some people are strongly asking for this feature. Do you have some time to review it?
",nan,nan
120,pull_request_commit_comment,430,nilearn,nilearn,salma1601,2015-05-19 11:42:54,"a bit of repetition here, may be you don't need to specify you are focusing on the DMN
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(7, '', u'examples/connectivity/plot_adhd_spheres.py')"
121,pull_request_commit_comment,430,nilearn,nilearn,salma1601,2015-05-19 11:43:57,"a comment on what you are doing would be nice
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
122,pull_request_commit_comment,430,nilearn,nilearn,salma1601,2015-05-19 11:45:44,"Some people don't know what are precision matrices nor LedoitWolf estimator. Why not use np.corrcoef ?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
123,pull_request_commit_comment,430,nilearn,nilearn,salma1601,2015-05-19 11:48:52,"rather timestep or TR or volumes
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
124,pull_request_commit_comment,430,nilearn,nilearn,bthirion,2015-05-20 19:54:37,"Isn't there any more readable way to perform nearest neighbor assignment (maybe not, I'm just asking) ?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
125,pull_request_commit_comment,430,nilearn,nilearn,bthirion,2015-05-20 19:57:03,"Make clear that ""prior knowledge"" here refers to MNI (?) coordinates.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(86, '', u'nilearn/input_data/nifti_spheres_masker.py')"
126,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:17:15,"Well, redundancy is on purpose and I don't understand why we shouldn't say what we are doing in the example. Can we have another opinion?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(7, '', u'examples/connectivity/plot_adhd_spheres.py')"
127,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:20:09,"I was asked to remove them...
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
128,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:21:22,"Because covariance estimators works better. I think it's more important to show people things they don't know, rather than showing simple stuff that gives poor results.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
129,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:21:50,"Fixed. I put 'TR'.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
130,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:22:43,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(2, '', u'nilearn/input_data/nifti_spheres_masker.py')"
131,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:24:01,"There is one now. It's a function that allows to compute it without declaring a NearestNeighbors object. But it doesn't exist in previous versions of sklearn so I would have to make switch here, which would be less readable.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
132,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:24:54,"Oops, edit: it refers to ROIs that were computed elsewhere.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(86, '', u'nilearn/input_data/nifti_spheres_masker.py')"
133,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:29:02,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(90, '', u'nilearn/input_data/nifti_spheres_masker.py')"
134,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-20 21:30:13,"> a) point at the end of variable type

It's an error, fixed.

> b) point at the end of variable description

There is no clear rule in all nilearn doc.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
135,pull_request_commit_comment,430,nilearn,nilearn,bthirion,2015-05-21 06:40:10,"Hm, sorry, not TR
TR is the time it takes to acquire one volume, typically 2s.
Please use 'scan number' or 'repetition'
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
136,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-21 08:18:50,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
137,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-05-21 11:46:16,"there is only one dataset that is fetched
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
138,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-05-21 12:38:19,"Should the pooling function be an optional parameter of the NiftiSpheresMasker class?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(76, '', u'nilearn/input_data/nifti_spheres_masker.py')"
139,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-05-21 12:39:34,"nice way to comment here in `__init__`
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(149, '', u'nilearn/input_data/nifti_spheres_masker.py')"
140,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-21 12:47:41,"Yes! But for further work, for several reasons:
- people will argue about what aggregation functions should be offered by default, wording, doc, etc...
- I don't have an example showing the interest of using another aggregation function.

But I definitely want to do a PR in that sense after this one.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(76, '', u'nilearn/input_data/nifti_spheres_masker.py')"
141,pull_request_commit_comment,430,nilearn,nilearn,banilo,2015-05-21 12:54:50,"why is there no parameter check before calling clean, similar to smoothing_fwhm?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(252, '', u'nilearn/input_data/nifti_spheres_masker.py')"
142,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-21 13:44:36,"Because there are 6 parameters and `clean` is equivalent to `id` if all of them are None.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(252, '', u'nilearn/input_data/nifti_spheres_masker.py')"
143,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-21 19:17:43,"That said, the comment is still incorrect :).
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
144,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-22 07:28:30,"Fixed!

On Thu, May 21, 2015 at 9:17 PM, Gael Varoquaux notifications@github.com
wrote:

> In examples/connectivity/plot_adhd_spheres.py
> https://github.com/nilearn/nilearn/pull/430#discussion_r30837045:
> 
> > +]
> > +
> > +masker = input_data.NiftiSpheresMasker(
> > -    dmn_coords, radius=8,
> > -    detrend=True, standardize=True,
> > -    low_pass=0.1, high_pass=0.01, t_r=2.5,
> > -    memory='nilearn_cache', memory_level=1, verbose=2)
> >   +
> >   +func_filename = adhd_dataset.func[0]
> >   +confound_filename = adhd_dataset.confounds[0]
> >   +
> >   +time_series = masker.fit_transform(func_filename,
> > -                             confounds=[confound_filename])
> >   +
> >   +
> >   +# Computing group-sparse precision matrices ###################################
> 
> That said, the comment is still incorrect :).
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/430/files#r30837045.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'examples/connectivity/plot_adhd_spheres.py')"
145,pull_request_commit_comment,430,nilearn,nilearn,GaelVaroquaux,2015-05-22 07:59:49,"> Should the pooling function be an optional parameter of the NiftiSpheresMasker
> class?

I don't think so.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(76, '', u'nilearn/input_data/nifti_spheres_masker.py')"
38,issue_comment,430,nilearn,nilearn,AlexandreAbraham,2015-05-29 12:22:47,"@lesteve Could you do a pass on this one?
",nan,nan
146,pull_request_commit_comment,430,nilearn,nilearn,lesteve,2015-06-03 14:01:53,"`list(seed)` ?
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
147,pull_request_commit_comment,430,nilearn,nilearn,lesteve,2015-06-03 14:07:10,"Why not:

``` python
for seed in self.seeds:
    if len(seed) != 3:
        raise ValueError('Seeds must be a list of triplets ...')
```

bonus points if you add the non conforming seed in the error
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
148,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-06-03 14:09:47,"No.

Seeds[i] is a triplet but mask_coords elements are lists. So, for the `index` function to work, a conversion to list type is needed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
149,pull_request_commit_comment,430,nilearn,nilearn,lesteve,2015-06-03 14:29:13,"Maybe it'd be good to be sure and improve the comment ...
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
150,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-06-03 14:40:54,"My version is ugly, I admit, but it catches a lot of bad values. Your version implies that `seeds` is iterable for example.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
151,pull_request_commit_comment,430,nilearn,nilearn,lesteve,2015-06-04 05:12:35,":confused: I was just proposing to replace `seeds[i]` by `seed`
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
152,pull_request_commit_comment,430,nilearn,nilearn,lesteve,2015-06-04 05:17:52,"Any reason this `seeds` check can not be moved to `__init__`, in order to fail as fast as possible?

> My version is ugly, I admit, but it catches a lot of bad values. Your version implies that seeds is iterable for example.

Then just check isinstance(self._seeds, collections.Iterable) or something equivalent.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
153,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-06-04 07:29:27,"My bad, you're totally right ! I misread your comment.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
154,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-06-04 07:34:12,"> Any reason this seeds check can not be moved to **init**, in order to fail as fast as possible?

Apart from the fact that we don't do any check in init, there is not. In all other functions, checks are always done in the fit.

> Then just check isinstance(self._seeds, collections.Iterable) or something equivalent.

So you don't like my lazy solutions :(
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
155,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-06-04 08:02:56,"Fixed.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
156,pull_request_commit_comment,430,nilearn,nilearn,lesteve,2015-06-08 09:41:33,"You could have the switching logic in _utils/fixes. That wouldn't impair readability and make it easier to remove when the minimum scikit-learn version is bumped up enough.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
157,pull_request_commit_comment,430,nilearn,nilearn,lesteve,2015-06-08 09:41:52,"Still a valid comment.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
158,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-06-08 11:48:58,"Sorry I missed this one. Improved.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
159,pull_request_commit_comment,430,nilearn,nilearn,AlexandreAbraham,2015-06-08 11:56:18,"I was mistaken. There is a function available outside of the object but it is less optimized as it computes the whole distance matrix, not just for the seeds.
",3114db43146906d7c09df5c98b8a1b212ff9866d,"(None, '', u'nilearn/input_data/nifti_spheres_masker.py')"
215,pull_request_commit_comment,430,nilearn,nilearn,lesteve,2015-06-08 12:10:52,"Sorry to be a pain but you might as well use the link to the issue for more context:
https://github.com/scikit-learn/scikit-learn/issues/4072.
`https://github.com/scikit-learn/scikit-learn/issues/4072` is the full URL (can't figure out how to prevent github to shorten the URL)
",baaadae478c2cbac5320511d1d73062e7969639f,"(25, 45, u'nilearn/input_data/nifti_spheres_masker.py')"
39,issue_comment,430,nilearn,nilearn,bcipolli,2015-06-08 16:02:30,"Good work @AlexandreAbraham ! :+1: 
",nan,nan
40,issue_comment,430,nilearn,nilearn,banilo,2015-06-08 16:03:21,"+1 +1 +1

2015-06-08 18:02 GMT+02:00 Ben Cipollini notifications@github.com:

> Good work @AlexandreAbraham https://github.com/AlexandreAbraham ! [image:
> :+1:]
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/430#issuecomment-110053581.

## 

Viele Grüße,
Danilo
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,431,nilearn,nilearn,surchs,2015-02-16 01:18:55,"Awesome. This is what I needed. I'm happy to help with the example. Let me know how I could help.

Best,
Seb
",nan,nan
4,issue_comment,431,nilearn,nilearn,lesteve,2015-02-16 08:07:37,"> We should do an example on this.

There are a few examples using index_img and iter_img. 

```
$ git grep -lP 'index_img|iter_img' examples/
examples/connectivity/plot_canica_resting_state.py
examples/connectivity/plot_ica_resting_state.py
examples/decoding/plot_haxby_searchlight.py
examples/manipulating_visualizing/plot_mask_computation.py
examples/plot_nifti_simple.py
```

Are you saying we should add something like this in a simpler example for example the plot_nilearn_101.py one?
",nan,nan
5,issue_comment,431,nilearn,nilearn,lesteve,2015-02-16 11:53:54,"> Yes,  I have in mind a specific example for that: plotting 4d images.

@surchs you are more than welcome to put together an example showing how to plot 4d images with index_img and possibly iter_img.

It should go in examples/manipulating_visualizing and you can use datasets.fetch_nyu_rest (as in examples/plot_nifti_simple.py) to have a 4d image that you can then slice.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,458,nilearn,nilearn,AlexandreAbraham,2015-02-23 21:45:43,"> A more general check (that one of the dimensions is equal to the # of non-zero entries in the mask) requires a call to np.count_nonzero, which though lightweight, would have to get called on every successful call of unmask_nd.

I am :+1: for this solution. First, we don't need `count_nonzero` but `sum` since the mask is boolean. We can bench it but I think that the additional cost is negligible. If not, we could compute it once and for all in the masker (because this function will be more likely called from the masker).
",nan,nan
4,issue_comment,458,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:49:47,"> I am :+1: for this solution. First, we don't need count_nonzero but sum
> since the mask is boolean. We can bench it but I think that the
> additional cost is negligible. If not, we could compute it once and for
> all in the masker (because this function will be more likely called
> from the masker).

+1
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
12,pull_request_commit_comment,459,nilearn,nilearn,lesteve,2015-02-24 10:00:18,"I'd be enclined to always throw if `X.shape[-1] != n_features` rather than have a special edge case that automagically works.
",370ea18296bd5a77327342ce259e49d868d2b094,"(None, '', u'nilearn/masking.py')"
13,pull_request_commit_comment,459,nilearn,nilearn,AlexandreAbraham,2015-02-24 10:00:32,"I don't like this kind of magic it could lead to very weird edge cases. I think we should just raise an error.
",370ea18296bd5a77327342ce259e49d868d2b094,"(None, '', u'nilearn/masking.py')"
14,pull_request_commit_comment,459,nilearn,nilearn,lesteve,2015-02-24 10:00:58,"Could you remove these two additional lines?
",370ea18296bd5a77327342ce259e49d868d2b094,"(None, '', u'nilearn/tests/test_masking.py')"
15,pull_request_commit_comment,459,nilearn,nilearn,lesteve,2015-02-24 10:01:26,"Any particular reason why you rename this function?
",370ea18296bd5a77327342ce259e49d868d2b094,"(52, '', u'nilearn/tests/test_masking.py')"
16,pull_request_commit_comment,459,nilearn,nilearn,eickenberg,2015-02-24 10:02:48,"Nitpick: Can we have `X.shape[1]` here? (By the previous checks, `X` must be 2D, and it is better to be explicit)
",370ea18296bd5a77327342ce259e49d868d2b094,"(None, '', u'nilearn/masking.py')"
17,pull_request_commit_comment,459,nilearn,nilearn,eickenberg,2015-02-24 10:04:25,"I would prefer `if X.shape[0] == n_features and X.shape[1] != n_features` in order not to have inexplicable transposes one day somebody uses a lot of data or a very small mask.
",370ea18296bd5a77327342ce259e49d868d2b094,"(None, '', u'nilearn/masking.py')"
18,pull_request_commit_comment,459,nilearn,nilearn,eickenberg,2015-02-24 10:09:59,"Or what Alex says, didn't see that.
",370ea18296bd5a77327342ce259e49d868d2b094,"(None, '', u'nilearn/masking.py')"
5,issue_comment,459,nilearn,nilearn,eickenberg,2015-02-24 10:12:23,"While you are at it, could you look at the docstring of `_unmask_3D`, I think the shape of the input is wrong.

Also, I would propose to rename `_unmask_nd` to `_unmask_4d`, because it doesn't do any n-d at all and may confuse people trying to understand the code.
",nan,nan
19,pull_request_commit_comment,459,nilearn,nilearn,bcipolli,2015-02-24 10:25:42,"This tests errors, not warnings.
",370ea18296bd5a77327342ce259e49d868d2b094,"(52, '', u'nilearn/tests/test_masking.py')"
6,issue_comment,459,nilearn,nilearn,bcipolli,2015-02-24 10:26:01,"Thanks for the comments!  Should all be set.
",nan,nan
7,issue_comment,459,nilearn,nilearn,eickenberg,2015-02-24 10:29:51,"Could you change l628 from `(n_samples,)` to `(n_features,)`? (Or am I wrong about this?)  
",nan,nan
8,issue_comment,459,nilearn,nilearn,bcipolli,2015-02-24 10:35:27,"@eickenberg good eye!  Just pushed that change now as well.
",nan,nan
20,pull_request_commit_comment,459,nilearn,nilearn,lesteve,2015-02-24 10:36:53,"Right I didn't properly expand the diff and only saw the ""2D X (should be ok) test"", sorry for that
",370ea18296bd5a77327342ce259e49d868d2b094,"(52, '', u'nilearn/tests/test_masking.py')"
9,issue_comment,459,nilearn,nilearn,lesteve,2015-02-24 11:57:31,"You have one test failing, probably the one with the auto transpose logic that was removed.
",nan,nan
21,pull_request_commit_comment,459,nilearn,nilearn,GaelVaroquaux,2015-02-24 12:22:49,"+1

Sent from my phone. Please forgive brevity and mis spelling

On Feb 24, 2015, 11:00, at 11:00, ""Loïc Estève"" notifications@github.com wrote:

> > @@ -665,7 +665,15 @@ def _unmask_nd(X, mask, order=""C""):
> >      if mask.dtype != np.bool:
> >          raise ValueError(""mask must be a boolean array"")
> >      if X.ndim != 2:
> > -        raise ValueError(""X must be a 2-dimensional array"")
> > -        raise TypeError(""X must be a 2-dimensional array"")
> > -    n_features = mask.sum()
> > -    if X.shape[-1] != n_features:
> > -        # Handle (potential) transpose as a special case, as this
> > -        #   mistake can lead to system-fatal memory allocation
> >   below.
> > -        if X.shape[0] == n_features:
> > -            X = X.T
> > -        else:
> > -            raise TypeError('X must be of shape (samples, %d).' %
> >   n_features)
> 
> I'd be enclined to always throw if `X.shape[-1] != n_features` rather
> than have a special edge case that automagically works.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/459/files#r25240484
",370ea18296bd5a77327342ce259e49d868d2b094,"(None, '', u'nilearn/masking.py')"
22,pull_request_commit_comment,459,nilearn,nilearn,banilo,2015-02-24 15:14:15,"rather TypeError?
",370ea18296bd5a77327342ce259e49d868d2b094,"(None, '', u'nilearn/masking.py')"
10,issue_comment,459,nilearn,nilearn,bcipolli,2015-02-24 16:21:23,"@lesteve Fixed that.
@banilo Changed that and added tests (there were none).
Also, while creating new tests, noticed that the 3D and 4D errors for wrong shape were different.  Added the similar shape check to the 3D code, and updated the tests.
",nan,nan
11,issue_comment,459,nilearn,nilearn,AlexandreAbraham,2015-02-27 00:19:37,"Thanks !
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,335,nilearn,nilearn,AlexandreAbraham,2015-01-07 14:44:01,"I have these functions in my toolbox and use them all the time.
",nan,nan
4,issue_comment,335,nilearn,nilearn,banilo,2015-01-07 14:59:00,"How about a cool nifti generator? :-P

https://github.com/nilearn/nilearn/pull/272
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,451,nilearn,nilearn,AlexandreAbraham,2015-02-22 14:33:25,"LGTM.

Regarding the test, a bit of explanation about matplotlib.

`from matplotlib import pyplot as plt`

If you use a plotting function like `plt.plot`, the plot will be added to the current figure that you can access with `plt.gcf()`. 

So, if I take your original code and simplify it (I didn't run this code :P), we could do:

```
import matplotlib.pyplot as plt
import nibabel
import numpy as np
from nilearn.plotting import plot_glass_brain


maps_img = nibabel.Nifti1Image(np.random,random((10, 10, 10)), np.eye(4))
fh1 = plt.figure()
fh2 = plt.figure()
ax1 = fh1.add_subplot(1, 1, 1)
# Note: pl.gcf()== fh2 because it is the last figure created.
assert(pl.gcf() == fh2)
# Since we gave ax1, the figure should be plotted in fh1.
# Before your fix it was plot in fh2.
slicer = plot_glass_brain(maps_img, axes=ax1, title='test')
# Test it
assert(slicer.axes[0].get_figure() == fh1)
```
",nan,nan
6,issue_comment,451,nilearn,nilearn,bcipolli,2015-02-22 15:27:58,"Great.  I will add a test and update.
",nan,nan
7,issue_comment,451,nilearn,nilearn,bcipolli,2015-02-22 16:48:37,"I added a test (thanks @AlexandreAbraham for the starting point!) and did a bit of drive-by linting in the test file.
",nan,nan
8,issue_comment,451,nilearn,nilearn,AlexandreAbraham,2015-02-22 16:56:04,"LGTM, great work!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
12,pull_request_commit_comment,452,nilearn,nilearn,bcipolli,2015-02-21 09:49:48,"The only functional change is here.
",4ff19eea12c5319413fa645c96066d11d66be0ae,"(48, '', u'nilearn/plotting/find_cuts.py')"
5,issue_comment,452,nilearn,nilearn,lesteve,2015-02-21 10:05:21,"> This necessitated a call to np.asscalar in #441 (since changed).

I realised that the np.asscalar wasn't needed at all in my case. Do you have a use case where it matters whether you have a list of numpy scalar arrays vs a list of floats?

Note that you actually return an array of shape (3, ) not a list. To be honest I am not sure whether there is any guarantee about the return type when the docstring says something like this:

```
Returns
-------
x : float
    the x world coordinate.
y : float
    the y world coordinate.
z : float
    the z world coordinate.
```
",nan,nan
6,issue_comment,452,nilearn,nilearn,bcipolli,2015-02-21 10:11:43,"That was the use-case :)  Anotehr is checking to see whether a set of coordinates exists in a list (of lists).  I spent a good chunk of time today debugging matplotlib because of exactly that case--having the numpy object, rather than the actual scalar, broke the `in` check.

So when I saw this just now, it raised red flags.  You can get weird errors.

Also note that `tolist()` is called there, so it should be returning a list (and unpack properly).
",nan,nan
7,issue_comment,452,nilearn,nilearn,lesteve,2015-02-21 10:19:59,"> having the numpy object, rather than the actual scalar, broke the in check.

Somehow it seems to work for me, not an expert of numpy scalar arrays though:

```
In [16]: l = [np.array(0), 1]

In [17]: 0 in l
Out[17]: True

In [18]: np.array(1) in l
Out[18]: True
```

> Also note that tolist() is called there, so it should be returning a list (and unpack properly).

I did miss that thanks for pointing it out.
",nan,nan
8,issue_comment,452,nilearn,nilearn,bcipolli,2015-02-21 10:48:37,"Cool.  I looked more closely, and apparently the issue wan't quite what I thought it was--only the final case causes a problem, which is not the case here.

``` python
>>> (1,2,3) in ((1,2,3),(4,5,6))
True
>>> (np.array(1),2,3) in ((1,2,3),(4,5,6))
True
>>> (np.array(2),2,np.array(3)) in ((1,2,3),(4,5,6))
False
>>> (np.array([1,2,3])) in ((1,2,3),(4,5,6))
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
```

So no--no specific use-case.  Feel free to close (or to cherry-pick the linting)!
",nan,nan
9,issue_comment,452,nilearn,nilearn,GaelVaroquaux,2015-02-21 15:37:58,"LGTM! :+1: for merge.
",nan,nan
10,issue_comment,452,nilearn,nilearn,AlexandreAbraham,2015-02-22 14:34:52,"Yeah, I would have been puzzled too if I received a list of scalar arrays. Thanks!
",nan,nan
11,issue_comment,452,nilearn,nilearn,AlexandreAbraham,2015-02-22 14:35:19,"Sorry, closed instead of merge :P
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,453,nilearn,nilearn,GaelVaroquaux,2015-02-21 16:00:40,"> I suggest to create a small wrapper function that is passed to parallel, which
> set the random state.

For scikit-learn below 0.13, it's not possible to set the random state of
FastICA. This was an oversight in the code of scikit-learn.

> note that n_jobs is hard-coded in one case here, the second time I've
> come across parameter inconsistencies when they're being copied).

Yes, because parallel computing without control of the random_state would
just duplicate the same random number generator, and thus do exactly the
same operations in each subprocess.

> Another reasonable option is to warn the user that the random state is being
> ignored.

It's not. It's actually n_jobs that is ignored.

How important is this? The impact for the user is that if scikit-learn
version is below 0.13, n_jobs is ignored, but the code works well. 0.13
came out quite a while ago, so the people that are impacted by this minor
problem are actually very few. They will be less and less as time goes.
So my gut feeling would be to ignore the problem :).
",nan,nan
4,issue_comment,453,nilearn,nilearn,bcipolli,2015-02-21 16:06:20,"OK.  For me, it's quite important, since support of sklearn `0.12.1` is listed (we can't know who, if anybody, will use it).  But I'm of course willing to defer.

How about simply adding a warning inside the `if` check, and a test case to test the warning?  I'm happy to take care of it.  I can also mention there about `n_jobs` being ignored... :)

Bug again, willing to defer.
",nan,nan
5,issue_comment,453,nilearn,nilearn,GaelVaroquaux,2015-02-21 16:08:08,"> OK. For me, it's quite important, since support of sklearn 0.12.1 is
> listed (we can't know who, if anybody, will use it).

Yes, but it's not a bug. It will not lead to errors or wrong results.
",nan,nan
6,issue_comment,453,nilearn,nilearn,bcipolli,2015-02-21 16:18:05,"> Yes, but it's not a bug. It will not lead to errors or wrong results.

I agree!  I didn't mean to write ""bug again"" lol :)  

It does, however, mislead the user--if there is a `random_state` parameter, I expect that by using it, I'll get the same results every time.  Same with `n_jobs`--if I pass it, I expect it'll be used.

Again, happy to submit a PR that warns the user, to avoid potential confusion.  If you're still not convinced that it's worth the effort / lines of code, I'll just be quiet :)
",nan,nan
7,issue_comment,453,nilearn,nilearn,GaelVaroquaux,2015-03-04 20:32:37,"I am closing this guy as a won't fix, to lighten a bit the number of open issues.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
10,pull_request_commit_comment,454,nilearn,nilearn,AlexandreAbraham,2015-02-22 20:49:54,":-1: 
",a1b651f0082510b19b8b301339a2308fce34cfde,"(None, '', u'nilearn/plotting/displays.py')"
11,pull_request_commit_comment,454,nilearn,nilearn,AlexandreAbraham,2015-02-22 20:54:50,"If it's just for computing the max, you don't need to unmask. If you really want to get the non-masked values, use `stat_map_data.compressed()`
",a1b651f0082510b19b8b301339a2308fce34cfde,"(None, '', u'nilearn/plotting/img_plotting.py')"
5,issue_comment,454,nilearn,nilearn,banilo,2015-02-23 10:22:40,"Cleanups done!
",nan,nan
6,issue_comment,454,nilearn,nilearn,lesteve,2015-02-24 12:45:07,"@banilo you have some tests failures that seem genuine.
",nan,nan
7,issue_comment,454,nilearn,nilearn,lesteve,2015-02-27 09:05:39,"Add a test for plot_glass_brain with colorbar=True and squash your commits and this will be good to go. 
",nan,nan
8,issue_comment,454,nilearn,nilearn,banilo,2015-02-27 12:13:23,"> Add a test for plot_glass_brain with colorbar=True and squash your commits and this will be good to go.

done.
",nan,nan
9,issue_comment,454,nilearn,nilearn,lesteve,2015-02-27 13:18:22,"Thanks!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,455,nilearn,nilearn,eickenberg,2015-02-22 21:59:21,"Thanks for the comment! Indeed, the default colormap should be useful for the most common use of the glass brain, and I am unsure which one that is.

I am also wondering whether the one can infer anything from e.g. all values being positive vs there existing negative and positive values together. We automatically adjust the range of the colormap in `plot_stat_map` for this and show only the appropriate half of a double colormap if necessary. Applying this to here would mean that the default colormap should become ColdHot and that only the upper half is used when all values are positive.
",nan,nan
4,issue_comment,455,nilearn,nilearn,lesteve,2015-02-22 22:05:02,"If I understand you correctly this is not a colorbar issue at all but more an issue about the transformation operated by the glass brain that doesn't differentiate between positive and negative values.

The glass brain projection uses the max of the **absolute value** along the axis, so you are left with only positive values. The only place this is documented is in plotting.displays.GlassBrainAxes.transform_to_2d.

It's probably easy to add the sign back if we decide this is the right way forward (looking at the argmax of the absolute value and returning the value of the original array for example). To be honest, not sure what the convention is for the SPM glass brain.
",nan,nan
5,issue_comment,455,nilearn,nilearn,AlexandreAbraham,2015-02-22 22:10:00,"And you should maybe take a look at `cyan_copper` colormap from nipy. It may be close to what you are looking for.
",nan,nan
6,issue_comment,455,nilearn,nilearn,vsoch,2015-02-22 22:19:56,"@lesteve - exactly. The absolute value is taken to only leave the positive values, but I don't think most users will know that. I think returning the original array might be worth exploring.  

In the long run, I think we are moving toward interactive graphics [eg, bokeh has little bits](http://bokeh.pydata.org/en/latest/index.html), but most graphics on their own without some added stuffs from a web browser are still static. Ideally, any image produced would be svg, possibly with multiple transparent layers that could be quickly wrapped in some d3/etc. to spit out something interactive for the user.  That also means that we need paths and not image data embedded in the svg.  An animation is another option, but I think we can do better. I'm just thinking out loud at this point - the goal (I think) is to bring modern, simple interactive visualizations to brain imaging tools. 

Thanks @AlexandreAbraham, I will check out cyan_copper!  
",nan,nan
7,issue_comment,455,nilearn,nilearn,eickenberg,2015-02-22 22:35:33,"Ah, I see, makes sense. I guess what needs to be done is really dependent on how this is mostly used. People do also look at single slices, right?

Adding the sign back according to the sign of the argmax of the absolute values is maybe a little ""unfair"" if most activation values along that axis are positive and there was one small negative blob. Same for vice versa. Shouldn't then taking the absolute value be re-examined?

For positive maps you wouldn't need it. For mixed maps it is weird. 

What about linear projections onto the mean value along each axis? (I am assuming it has been tried and didn't look good, because it is the obvious first choice.)
",nan,nan
8,issue_comment,455,nilearn,nilearn,AlexandreAbraham,2015-02-23 01:04:26,"> Is the traditional spm glass brain a maximum intensity projection?

Yes.

> Shouldn't then taking the absolute value be re-examined?

It is time to sell your 2D colormap ;)
",nan,nan
9,issue_comment,455,nilearn,nilearn,lesteve,2015-09-22 08:39:28,"Just to be clear, you need to use master to use this feature. This [example](https://github.com/nilearn/nilearn/blob/master/examples/manipulating_visualizing/plot_demo_glass_brain_extensive.py) does use plot_glass_brain with plot_abs=False.

The online docs are from the last stable release so they don't mention this feature.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,pull_request_commit_comment,456,nilearn,nilearn,AlexandreAbraham,2015-02-23 10:37:43,"I haven't done any bench but my gut feeling is that this:

```
if np.any(np.isnan(data)):
 data = np.nan_to_num(data)
```

is slower than:

```
data = np.nan_to_num(data)
```
",d28e215aac31a8aa97748472f25fcc0a8099d97f,"(None, '', u'nilearn/plotting/img_plotting.py')"
7,pull_request_commit_comment,456,nilearn,nilearn,banilo,2015-02-23 10:39:12,"Rationale: if there is an established numpy-version of the operation, why not use this one, rather than redo by hand?
",d28e215aac31a8aa97748472f25fcc0a8099d97f,"(None, '', u'nilearn/plotting/img_plotting.py')"
8,pull_request_commit_comment,456,nilearn,nilearn,GaelVaroquaux,2015-02-23 10:42:15,"To test if there are nans, this is actually quite slow. The fast way of
doing it is ""np.isnan(np.sum(array))"".
",d28e215aac31a8aa97748472f25fcc0a8099d97f,"(None, '', u'nilearn/plotting/img_plotting.py')"
9,pull_request_commit_comment,456,nilearn,nilearn,lesteve,2015-02-23 11:53:57,"An additional tiny remark there is a slight difference vs the previous version of the code because you are not using np.asarray any more.

This can make a difference for masked or memapped arrays. Whether this actually matters in practice I am not sure.
",d28e215aac31a8aa97748472f25fcc0a8099d97f,"(None, '', u'nilearn/plotting/img_plotting.py')"
10,pull_request_commit_comment,456,nilearn,nilearn,banilo,2015-02-23 11:58:24,"img.get_data() does already give a numpy array and np.isnan() can handle non-1D...
",d28e215aac31a8aa97748472f25fcc0a8099d97f,"(None, '', u'nilearn/plotting/img_plotting.py')"
5,issue_comment,456,nilearn,nilearn,banilo,2015-02-23 12:04:24,"Patched.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,457,nilearn,nilearn,AlexandreAbraham,2015-02-23 21:55:39,"> I expect a call to `cache` with default arguments to cache the result. It does not.

You don't expect but yet it is the expected behavior ;). We certainly don't want to cache things if the user does not explicitely specify it. The `cache` function is a helper function, it is here to avoid doing an `if` statement each time we have to call a function that can be cached. You can see it as a `joblib.Memory(cachedir=None)`.
",nan,nan
4,issue_comment,457,nilearn,nilearn,bcipolli,2015-02-23 22:00:47,"Using the `cache` function explicitly is the user specifying it.  Within the `nilearn` codebase, ``func_memory_level` is never `None`... or the call to `cache` should simply be removed, as no user input could ever cause anything to be cached.

It seems strange to have a case where you can have a case where you wrap something in `cache`, and it can never lead to cached results (when `func_memory_level` is `None`).  Why allow that?  Am I missing a use-case above?
",nan,nan
5,issue_comment,457,nilearn,nilearn,AlexandreAbraham,2015-02-23 22:14:06,"`cache` is hidden in the `_utils` package and thus should not be called directly by the user. But I get your point, you say that `func_memory_level` should not be optional since caching is triggered by `memory` and `memory_level`.
OK, let's do it then ;).
",nan,nan
6,issue_comment,457,nilearn,nilearn,bcipolli,2015-02-23 22:25:39,"I guess I'm suggesting to make `cache` available to users, not an internal API.  Easy, ubiquitous caching is a great feature in `nilearn`, and making `cache` as a user function.

I am finding `cache` to be extremely useful.  It's interface is more consistent with how caching is done throughout `nilearn`, and makes for more concise code.  If it's too much trouble for users to pass a `joblib.Memory` object to functions, why ask them to use joblib to do any caching on their own?

Looking at the code again, I think setting both to zero by default is simplest and meaningful--if you call `cache` with no args, it means you want to cache it, always.  Adding `None` in the loop simply forces an extra check (`is None`) with no semantic addition.
",nan,nan
7,issue_comment,457,nilearn,nilearn,AlexandreAbraham,2015-02-23 22:39:50,"To be honest, I have my own caching system. I don't know if we should expose that to the user since joblib should do the job.
",nan,nan
8,issue_comment,457,nilearn,nilearn,bcipolli,2015-02-23 22:50:26,"I think nilearn is doing something in-between.  On the one hand, it allows passing strings as a ""memory"", and there's some concern for allowing users to clear the cache (so cache management and abstracting away from joblib).  On the other hand, apparently `cache` is an internal function--so to cache any of their own stuff, users have to use joblib.

I'd like to see it become more consistent--either push users to joblib.Memory, or give them more succinct, abstracted alternatives.  My vote is to create a  `nilearn.caching` module and exposing `cache` to users, then make the `cache_mixin` class work on top of that.

(p.s. I just did it now, and it was 2 minutes of work).
",nan,nan
9,issue_comment,457,nilearn,nilearn,GaelVaroquaux,2015-02-24 12:27:56,"I agree. This is an internal stuff. And it is imported from a private sub package. I am not opposed to making it easier to understand / follow but that's more about changing names and api rather than changing behavior. The behavior is tailored to our internal needs. 

Sent from my phone. Please forgive brevity and mis spelling

On Feb 24, 2015, 11:26, at 11:26, Alexandre Abraham notifications@github.com wrote:

> To be honest, I have my own caching system. I don't know if we should
> expose that to the user since joblib should do the job.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/457#issuecomment-75653464
",nan,nan
10,issue_comment,457,nilearn,nilearn,AlexandreAbraham,2015-02-24 12:39:54,"@bcipolli yet raised a point that I agree with: `func_memory_level` should not be optional.
",nan,nan
11,issue_comment,457,nilearn,nilearn,AlexandreAbraham,2015-02-24 12:41:40,"@bcipolli let's fix that. For the rest, there is an open issue about the caching system: #420.

I don't think that we can take a decision about that without user feedback.
",nan,nan
12,issue_comment,457,nilearn,nilearn,AlexandreAbraham,2015-03-16 13:05:55,"Quickly checked this one during lunch. In functions `nilearn.masking.compute_*_mask`, cache is called without memory level so the call is basically never cached. We should make memory levels mandatory and propagate in the code.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,issue_comment,340,nilearn,nilearn,AlexandreAbraham,2015-01-15 09:55:49,"This is not as easy as it seems. In fact, it brings inconsistencies to the masker as the affine is defined in the transform rather than the fit. For example:

``` python
masker = NiftiLabelsMasker(labels_img, resample_target='data')
masker.fit()

# First dataset, target_affine is set to affine_data_1
data1 = masker.transform(dataset1)

# Second dataset, target_affine is set to affine_data_2
data2 = masker.transform(dataset2)

# Inverse transform, my data has been resampled into dataset2 space
masker.inverse_transform(data1)
```

We could say that the affine is defined on the first transform, but I find this misleading. We could also say that the `target_affine` is defined by the data given in the `fit` but it would conflict with mask computation and also be misleading compared to the behavior of the classical NiftiMasker.

I would be more in favor of accepting niimgs in the `resample_target` parameter.
",nan,nan
7,issue_comment,340,nilearn,nilearn,AlexandreAbraham,2015-01-15 10:25:35,"> If new data comes along (as in a new call to transform), the atlas would be resampled from the original atlas image if it is not on the right affine.

The problem is not the `transform` step, it is the `inverse_transform`. If resampling is done on heterogenous data, how do we chose the affine when `inverse_transforming`? For me, it is better to explicitely give an affine (or a niimg which has the desired affine).

> I realize that this makes parallel computing in the transform nasty.

I think we can consider resampling the atlas as costless. Given that masking is usually done once and cached, it doesn't bother me if there is a small overhead per process.
",nan,nan
3,issue_comment,340,nilearn,nilearn,GaelVaroquaux,2015-01-15 10:30:38,"> The problem is not the transform step, it is the inverse_transform. If
> resampling is done on heterogenous data, how do we chose the affine when
> inverse_transforming?

Good point indeed. We can specify that the inverse transform always
return the data in the space of the atlas unless an explicit affine is
passed. These are consitent semantics (in the sens that they offer little
surprises). They may lead to memory explosions, but note that
inverse_transform will be used by much less people than transform (it is
a less common case). Also, the memory explosion is more obvious because
it occurs via the size of the output created by the function. In the
current case, it is harder to guess, as it occurs in an intermediate
variable.
",nan,nan
8,issue_comment,340,nilearn,nilearn,AlexandreAbraham,2015-01-15 10:42:01,"OK, I see your point now. In my head, I thought that what you are describing was the default behavior of NiftiLabelsMasker. I think that it should actually be the default behavior and not requiring a `resample_data='data'` (which, semantically, has also no sense :P). I suggest that we talk about that during a coffee break otherwise it will take ages to reach a conclusion ;).
",nan,nan
4,issue_comment,340,nilearn,nilearn,GaelVaroquaux,2015-01-15 10:42:54,"> I suggest that we talk about that during a coffee break otherwise it
> will take ages to reach a conclusion ;).

OK. I am at neurospin tomorrow.
",nan,nan
9,issue_comment,340,nilearn,nilearn,AlexandreAbraham,2015-01-29 09:31:38,"While I'm on nilearn issues list, let's take a decision on this one: I agree with you that we should have a `resample_target='data'` and that this should be the default behavior.

PR welcome! It shouldn't be too long.
",nan,nan
5,issue_comment,340,nilearn,nilearn,GaelVaroquaux,2015-02-05 16:08:14,"Fixed!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,issue_comment,406,nilearn,nilearn,banilo,2015-02-05 16:54:52,"LGTM
",nan,nan
5,issue_comment,406,nilearn,nilearn,lesteve,2015-02-05 20:15:26,"Thanks a lot, merging.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,405,nilearn,nilearn,GaelVaroquaux,2015-02-05 17:07:52,"LGTM. Merging as soon as travis passes. Thanks!
",nan,nan
6,issue_comment,405,nilearn,nilearn,lesteve,2015-02-06 09:19:24,"OK merging this one, thanks a lot. There are still a few grey areas but that's not critical and we can look at it after the release.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,482,nilearn,nilearn,GaelVaroquaux,2015-03-04 08:54:00,"Related to #374 ?
",nan,nan
4,issue_comment,482,nilearn,nilearn,AlexandreAbraham,2015-03-04 08:59:03,"Can you be more specific?
",nan,nan
5,issue_comment,482,nilearn,nilearn,GaelVaroquaux,2015-03-04 20:39:33,"Sorry, I wrote this issue live during the course at Leipzig, in front of the audience. I dug a bit more, and the following seems really wrong:
</pre>
import numpy as np
from nilearn.signal import butterworth
from matplotlib import pyplot as plt

t = np.linspace(0, 10, 2000)
y = np.cos(t)

plt.clf()
plt.plot(y)
plt.plot(butterworth(y[:, np.newaxis], sampling_rate=1., low_pass=10000.,
         ).squeeze())

plt.show()
</pre>

Even  though I am putting a very high cut off frequency for the low_pass filter, I am getting the signal entirely cut. Even stranger, if I change the low_pass to a high_pass, I am getting the opposite: no cut at all. It seems to me that there is something deeply broken here.
",nan,nan
6,issue_comment,482,nilearn,nilearn,bthirion,2015-03-04 21:09:06,"On 04/03/2015 21:39, Gael Varoquaux wrote:

> plt.plot(butterworth(y[:, np.newaxis], sampling_rate=1., low_pass=10000.,
> ).squeeze())
> On numpy 1.9.1, this throws an error (""wn should be btw 0 and 1"").
",nan,nan
7,issue_comment,482,nilearn,nilearn,AlexandreAbraham,2015-03-04 21:15:52,"> On numpy 1.9.1, this throws an error (""wn should be btw 0 and 1"").

Not on my box.
",nan,nan
8,issue_comment,482,nilearn,nilearn,GaelVaroquaux,2015-03-04 21:30:19,"> On 04/03/2015 21:39, Gael Varoquaux wrote:
> 
> > plt.plot(butterworth(y[:, np.newaxis], sampling_rate=1., low_pass=10000.,
> > ).squeeze())
> > On numpy 1.9.1, this throws an error (""wn should be btw 0 and 1"").

Yes, we have had this in the workshop also. It clearly seems to me that
this code is broken.
",nan,nan
9,issue_comment,482,nilearn,nilearn,AlexandreAbraham,2015-03-04 23:03:24,"OK, I think that I got it. In fact, Wn (see scipy.signal.butter) must be in [0, 1] for a digital filter. The problem is that when the value is outside of the bounds, the filter seems to have an unexpected behavior.

You can see it easily: with `low_pass=0.5` you get the expected behavior (signal is the same, `Wn=1.`). But with `low_pass=0.501` you can see that the filter goes completely crazy. 

I still don't know why I don't get the warning associated with Wn value.
",nan,nan
10,issue_comment,482,nilearn,nilearn,AlexandreAbraham,2015-03-05 00:59:50,"> Related to #374 ?

No. This issue has been clearly identified and we only need to agree on the behavior to adopt if a high pass filter is applied on data with a linear trend.
",nan,nan
11,issue_comment,482,nilearn,nilearn,GaelVaroquaux,2015-03-05 06:27:13,"> OK, I think that I got it. In fact, Wn (see scipy.signal.butter) must
> be in [0, 1] for a digital filter. 

It seems that we should clip it (and maybe warn) for values too high or
too low.
",nan,nan
12,issue_comment,482,nilearn,nilearn,AlexandreAbraham,2015-03-05 09:19:33,":+1:
",nan,nan
13,issue_comment,482,nilearn,nilearn,banilo,2015-03-05 18:35:11,"> On numpy 1.9.1, this throws an error (""wn should be btw 0 and 1"").

I also get this error on Mac + numpy '1.9.2'
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,508,nilearn,nilearn,AlexandreAbraham,2015-03-20 12:28:36,"> 'zip(.)' should probably be changed to 'list(zip(.))' 

It was already the case almost everywhere...
",nan,nan
5,issue_comment,508,nilearn,nilearn,AlexandreAbraham,2015-03-20 12:34:36,"I have done the search & replace modifications.

For the others:
- cPickle is trivial (pickle in p3)
- StringIO is trivial
- urllib seems to be a nightmare. The module tree has been completely changed. It means that we need an if statement for each and every function call. We may be saved by the fact that we use only a small part of it, but we have to keep in mind that adding functionalities may require extra-work because of p3
",nan,nan
6,issue_comment,508,nilearn,nilearn,AlexandreAbraham,2015-03-20 13:34:35,"@GaelVaroquaux , could you take a look at #515?
",nan,nan
3,issue_comment,508,nilearn,nilearn,GaelVaroquaux,2015-03-20 14:24:48,"Fixed. Excellent work, @AlexandreAbraham ! Thanks.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,507,nilearn,nilearn,lesteve,2015-03-19 14:51:57,"Eventually if we agree on a six version it will need to be added to both README.rst and nilearn/version.py.
",nan,nan
6,issue_comment,507,nilearn,nilearn,AlexandreAbraham,2015-03-19 15:05:00,"After asking the culprits, I learned that version 1.4.1 was chosen because it is the first one with urllib.
",nan,nan
7,issue_comment,507,nilearn,nilearn,AlexandreAbraham,2015-03-19 15:06:27,"Great, thanks!
",nan,nan
8,issue_comment,507,nilearn,nilearn,lesteve,2015-03-19 15:07:07,"> After asking the culprits, I learned that version 1.4.1 was chosen because it is the first one with urllib.

Yeah basically this was the oldest six version that got the test passing on my machine without having to change code.

For completeness:

```
~/dev/scikit-learn $ piprot <(echo six==1.4.1)
six (1.4.1) is 487 days out of date. Latest is 1.9.0
```
",nan,nan
9,issue_comment,507,nilearn,nilearn,lesteve,2015-03-19 15:15:03,"Hmmm actually this comment was forgotten in the process:

> Eventually if we agree on a six version it will need to be added to both README.rst and nilearn/version.py.

@KamalakerDadi can you look at it?
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
13,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-18 15:33:36,":question: 
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
14,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-18 16:05:50,":swimmer: WIP
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
15,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-18 16:29:11,"i postponed this change.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
16,pull_request_commit_comment,505,nilearn,nilearn,GaelVaroquaux,2015-03-18 16:31:54,"> i postponed this change.

Then you should remove the corresponding 'stub' function.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
8,issue_comment,505,nilearn,nilearn,lesteve,2015-03-19 07:32:26,"Plenty of failing tests in case you missed it somehow.
",nan,nan
9,issue_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 08:24:31,"It's WIP at the moment. It's far from being usable.
",nan,nan
10,issue_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 12:10:28,"So, I fixed the failing tests during lunch.

About the changes:
- 5D images or 4D masks are NOT accepted anymore (they were valid in a few functions)
- loading of 3D or 4D niimg is now explicit. A generic `check_niimg` exists (for 3D or 4D) is however present for explicit polymorphic functions (eg smooth_img)
- A lot of tests were totally wrong in their logic. We have to be more careful about what we test

I suggest that we merge the PR as-is.

Future work:
- `concat_niimgs` is a weird thing that accepts mix of 3D and 4D images. It shouldn't do that.
- Functions to load / iterate on list of niimg would be nice. For example `check_niimgs_3d` and `check_niimgs_4d` with optional parameters to check affines and stuff.
- This PR is only about clarifying difference between 3D and 4D as it was at the beginning (with niimg and niimgs). It does not fix #463 but it should fix #501.

I wanted to throw out this code that was in a branch for a very long time but i have no time to work on the other issues.
",nan,nan
17,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 12:11:02,"Renamed it because the input is a niimg but the output is an img.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg.py')"
18,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 12:11:34,"This function is here to be explicitely used in polymorphic functions.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(39, '', u'nilearn/_utils/niimg_conversions.py')"
19,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 12:13:33,"If somebody asks for an iterator on 4d, this iterator will check for everything during the process. Before that, the code could return niimages with different fov. I like this logic and I think that this could be propagated in other parts of the code.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
20,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 12:15:23,"For example, this test was passing but it was bogus because it called `filter_and_mask` with regular numpy arrays instead of niimg. This shouldn't even work.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(9, '', u'nilearn/input_data/tests/test_base_masker.py')"
21,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 12:15:59,"5D data is not accepted. I think that if we want to accept it, we should do all the proper verifications that comes with it.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(4, '', u'nilearn/tests/test_masking.py')"
22,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-19 13:20:57,"What if niimgs is an iterator (which seems to be a possibility if you trust the docstring)?

IMHO the current code in master is badly broken with iterators and I would suggest that we only support lists until we have proper tests for iterators.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
23,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 13:32:22,"This may be a regression so I fixed (it was easy). As said in my comment, I don't make the code iterator friendly. This is a lot of work and I have no time to do it. Plus I prefer to segment things in smaller PRs.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
24,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-19 13:44:06,"but then I guess the argument should be called `niimg` too ...
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg.py')"
25,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-19 13:50:06,"This kind of thing will lose information about the provenance of the error which is very annoying if you are dropping into a debugger. Look at `git grep exc.args +=` for example in our code of how to decorate an existing exception.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
26,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-19 13:52:33,"I am so glad to see this slightly baroque code go away ;-)
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(294, '', u'nilearn/_utils/niimg_conversions.py')"
27,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-19 14:03:59,"Slightly weird sentence, maybe:

``` python
"""""" Return whether `img` has the same field of view as the one given by `shape` and `affine`
""""""
```

At the very least img1 -> img.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
28,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-19 14:07:20,"maybe ValueError rather than TypeError, since an empty list still has the right type ?
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(161, '', u'nilearn/_utils/niimg_conversions.py')"
29,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-19 14:30:41,"This is not really consistent with the docstring that says that niimgs can be an iterable ...
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(283, '', u'nilearn/_utils/niimg_conversions.py')"
30,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-19 14:58:05,"Should we use 4D Niimg-like object as previously?
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
31,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 15:00:27,"I kept the original behavior (this was checked higher in the stack before) but I agree with you. Maybe we can change that in another PR as I want this one to have the lowest impact possible on the logic of the code.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(161, '', u'nilearn/_utils/niimg_conversions.py')"
32,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 15:03:02,"I didn't put it here but iterator should work if you do `return_iterator=True` (not the other case as `concat_niimgs` is not iterator friendly). But, again, the goal of this PR is not to change the behavior of the code when using iterators. It is exactly as broken as before ;)
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(283, '', u'nilearn/_utils/niimg_conversions.py')"
5,issue_comment,505,nilearn,nilearn,GaelVaroquaux,2015-03-19 17:31:19,">   • 5D images or 4D masks are NOT accepted anymore (they were valid in a few
>     functions)

That may be a problem: these things do lie around.

>   • concat_niimgs is a weird thing that accepts mix of 3D and 4D images. It
>     shouldn't do that.

Why?
",nan,nan
33,pull_request_commit_comment,505,nilearn,nilearn,GaelVaroquaux,2015-03-19 17:32:04,"> Renamed it because the input is a niimg but the output is an img.

I am not sure that this is consistent with our naming conventions, and
'smooth_img'.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg.py')"
34,pull_request_commit_comment,505,nilearn,nilearn,GaelVaroquaux,2015-03-19 17:32:54,"> For example, this test was passing but it was bogus because it called
> filter_and_mask with regular numpy arrays instead of niimg. This
> shouldn't even work.

Agreed
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(9, '', u'nilearn/input_data/tests/test_base_masker.py')"
35,pull_request_commit_comment,505,nilearn,nilearn,GaelVaroquaux,2015-03-19 17:33:24,"> IMHO the current code in master is badly broken with iterators and I would
> suggest that we only support lists until we have proper tests for iterators.

Agreed.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
11,issue_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 17:35:15,"> That may be a problem: these things do lie around.

I see no reason to support them in only two functions (reorder_img and unmask). we should support them completely, or not at all.

> Why?

For me, trying to concatenate a 4D image with a 3D image is most likely an error than a wanted behavior.
",nan,nan
6,issue_comment,505,nilearn,nilearn,GaelVaroquaux,2015-03-19 17:36:24,"> ```
> That may be a problem: these things do lie around.
> ```
> 
> I see no reason to support them in only two functions (reorder_img and
> unmask). we should support them completely, or not at all.

Just saying. Users of AFNI will be in big trouble.

> ```
> Why?
> ```
> 
> For me, trying to concatenate a 4D image with a 3D image is most likely an
> error than a wanted behavior.

Agreed. So we should rather test for consistency in the number of
dimensions.
",nan,nan
12,issue_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 17:44:26,"> Just saying. Users of AFNI will be in big trouble.

They already are. As said before, I don't really fix bugs nor add any functionality. I just fixed the fact that check_niimg (now check_niimg_3d) only loads 3D images and check_niimgs (now check_niimg_4d) only loads 4D images. It is true that, in the meantime, I removed the ability of some functions to handle 5d data, but NiftiMasker never did for example.

If we want to support 5D images, it is easy to do that in a lot of functions (smooth_img, reorder_img...). It can be done by modifying check_niimg to accept 5d data. Oh, and it may be possible to handle in MultiNiftiMasker rather easily.

Actually, we should grab some AFNI data to test it.
",nan,nan
7,issue_comment,505,nilearn,nilearn,GaelVaroquaux,2015-03-19 17:45:15,"> ```
> Just saying. Users of AFNI will be in big trouble.
> ```
> 
> They already are.

OK, let's postpone saving them, then.
",nan,nan
36,pull_request_commit_comment,505,nilearn,nilearn,banilo,2015-03-19 19:49:59,"I am not sure that ""atleast_4d"" is intuitively understood by many users.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(39, '', u'nilearn/_utils/niimg_conversions.py')"
37,pull_request_commit_comment,505,nilearn,nilearn,GaelVaroquaux,2015-03-19 19:54:17,"> I am not sure that ""atleast_4d"" is intuitively understood by many users.

But that's internal. And it corresponds to a numpy convention.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(39, '', u'nilearn/_utils/niimg_conversions.py')"
38,pull_request_commit_comment,505,nilearn,nilearn,banilo,2015-03-19 19:55:55,"Shouldn't we say ""iterable"" instead? A list also exposes the **iter** attribute for example.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(65, '', u'nilearn/_utils/niimg_conversions.py')"
39,pull_request_commit_comment,505,nilearn,nilearn,banilo,2015-03-19 19:56:59,"Tautological definitions are by definition not a definition.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
40,pull_request_commit_comment,505,nilearn,nilearn,banilo,2015-03-19 19:58:30,"Given the internationality of user pool, perhaps exchange idempotentn by something simpler - ""identical""
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(128, '', u'nilearn/_utils/niimg_conversions.py')"
41,pull_request_commit_comment,505,nilearn,nilearn,banilo,2015-03-19 20:00:50,"You start out by explaining the default behavior - I would inverse that.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
42,pull_request_commit_comment,505,nilearn,nilearn,eickenberg,2015-03-19 20:01:36,"how is `idempotent` not international??

it doesn't mean ""identical"". It means that if you apply it n times, where n

> = 1, it is like applying it once.

On Thu, Mar 19, 2015 at 8:58 PM, Danilo Bzdok notifications@github.com
wrote:

> In nilearn/_utils/niimg_conversions.py
> https://github.com/nilearn/nilearn/pull/505#discussion_r26791583:
> 
> > -        and get_affine() methods are present, raise TypeError otherwise.
> >   +
> > -    Returns
> > -    -------
> > -    result: 3D Niimg-like object
> > -        Result can be nibabel.Nifti1Image or the input, as-is. It is guaranteed
> > -        that the returned object has get_data() and get_affine() methods.
> >   +
> > -    Notes
> > -    -----
> > -    In nilearn, special care has been taken to make image manipulation easy.
> > -    This method is a kind of pre-requisite for any data processing method in
> > -    nilearn because it checks if data have a correct format and loads them if
> > -    necessary.
> >   +
> > -    Its application is idempotent.
> 
> Given the internationality of user pool, perhaps exchange idempotentn by
> something simpler - ""identical""
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/505/files#r26791583.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(128, '', u'nilearn/_utils/niimg_conversions.py')"
43,pull_request_commit_comment,505,nilearn,nilearn,banilo,2015-03-19 20:02:18,"Why a tuple?
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
44,pull_request_commit_comment,505,nilearn,nilearn,banilo,2015-03-19 20:03:00,"also tautological -> therefore devoid of sense
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(341, '', u'nilearn/_utils/niimg_conversions.py')"
45,pull_request_commit_comment,505,nilearn,nilearn,banilo,2015-03-19 20:06:09,"You tought me a new thing in coding lingo, thanks.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(16, '', u'nilearn/image/resampling.py')"
46,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 21:01:29,"Fixed.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
47,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 21:02:35,"Not the slightest idea ;). I copy pasted another error message but tuples for single string replacement are all around the code.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
48,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 21:03:19,"why?
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(341, '', u'nilearn/_utils/niimg_conversions.py')"
49,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 21:03:44,"You're welcome.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(16, '', u'nilearn/image/resampling.py')"
50,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 22:05:35,"Fixed
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
51,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 22:05:49,"Fixed
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(65, '', u'nilearn/_utils/niimg_conversions.py')"
52,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 22:06:20,"A fix has been applied to fix what should be fixed.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
53,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 22:07:13,"We could write ""Project a niimg in the space of imgs"".
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(128, '', u'nilearn/_utils/niimg_conversions.py')"
54,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 22:11:35,"Fixed.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
55,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 22:14:08,":rage2: I will be back
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(294, '', u'nilearn/_utils/niimg_conversions.py')"
56,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-19 22:17:06,"Fixed.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
57,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-26 10:23:44,"Should you not check `!= 4` rather than `== 3` ?
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
58,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-26 10:24:54,"Is this check_niimg needed given that `niimgs` has already been loaded ?
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
59,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-26 10:29:59,"You probably forgot a raise after this line to reraise the original exception ...
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
60,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-26 10:31:14,"and you don't need exc.message because it is already part of the stack trace.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
61,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-26 11:49:35,"Fixed
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
62,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-26 11:49:57,"Fixed
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
63,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-26 11:52:04,"Fixed
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
64,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-26 12:07:25,"I guess this should be `niimg` and the type description should be Niimg-like object + URL
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(17, '', u'nilearn/_utils/niimg.py')"
65,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-26 12:12:06,"I am a bit wary that this wasn't caught by our tests. Could you add a test where the check_niimg_3d raises a TypeError ? Bonus point if you add one where the field of view is different.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(None, '', u'nilearn/_utils/niimg_conversions.py')"
66,pull_request_commit_comment,505,nilearn,nilearn,AlexandreAbraham,2015-03-26 12:38:56,"For me, Niimg-like object includes filename.
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(17, '', u'nilearn/_utils/niimg.py')"
67,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-26 12:43:42,"Sorry I misread the diff completely but then a few lines above ""or filepath"" is not needed, right ?
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(17, '', u'nilearn/_utils/niimg.py')"
82,pull_request_commit_comment,505,nilearn,nilearn,lesteve,2015-03-27 08:35:49,"Good to see that adding a test caught an actual mistake ;-) !

BTW prepending the user-friendly error is probably a good idea, maybe we should change that in other parts of the code ...
",7dcc860538d6ff20ca74c00e5b24eeebab032cd4,"(4, 260, u'nilearn/_utils/niimg_conversions.py')"
 , , , , , , , , , 
 , , , , , , , , , 
5,pull_request_commit_comment,502,nilearn,nilearn,lesteve,2015-03-18 13:53:28,"I had to shuffle things around a little bit here. Basically I both wanted
- the matplotlib minimum version should be always checked 
- Agg backend should only be used for posix platforms when the DISPLAY environment variable is not defined (e.g. on Travis)
",62c86d407f84117f5ae0965f204ed798bf013541,"(39, '', u'nilearn/plotting/__init__.py')"
6,pull_request_commit_comment,502,nilearn,nilearn,GaelVaroquaux,2015-03-18 15:02:03,"Why?
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
7,pull_request_commit_comment,502,nilearn,nilearn,GaelVaroquaux,2015-03-18 15:04:00,"Did you check that the version on Ubuntu 12.04 passes the test? It seems to be an 1.1.1rc1 from what I can see here:
http://packages.ubuntu.com/search?suite=precise&searchon=names&keywords=matplotlib
",62c86d407f84117f5ae0965f204ed798bf013541,"(39, '', u'nilearn/plotting/__init__.py')"
8,pull_request_commit_comment,502,nilearn,nilearn,lesteve,2015-03-18 15:17:01,"1.3.0 is quite old according to piprot:

```
~/dev/nilearn $ piprot <(echo nibabel==1.3.0)
nibabel (1.3.0) is 819 days out of date. Latest is 2.0.0
Your requirements are 819 days out of date
```

Also this is the version that neurodebian on Ubuntu 12.04 comes with.
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
9,pull_request_commit_comment,502,nilearn,nilearn,AlexandreAbraham,2015-03-18 15:18:13,"Note: we don't support 12.04 anymore (because of numpy / scipy). We only support 12.04 neurodebian. This way, we can upgrade most of packages.
From 1.1.0 to 1.3.0, a lot of significant bugs were fixed. Also, some code to handle affine transformations was added. We can rely on it and thus simplify nilearn's code.
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
10,pull_request_commit_comment,502,nilearn,nilearn,lesteve,2015-03-18 15:20:43,"Yeah LooseVersion doesn't seem to be very knowledgeable about rc, alpha, et al. versions ...

```
In [1]: from distutils.version import LooseVersion

In [2]: LooseVersion('1.1.1rc') > LooseVersion('1.1.1')
Out[2]: True

In [3]: LooseVersion('1.1.1a1') > LooseVersion('1.1.1')
Out[3]: True
```

Also we decided to drop support for bog-standard Ubuntu 12.04 versions long ago in #397 by requiring sklearn >= 0.12.1.
",62c86d407f84117f5ae0965f204ed798bf013541,"(39, '', u'nilearn/plotting/__init__.py')"
11,pull_request_commit_comment,502,nilearn,nilearn,GaelVaroquaux,2015-03-18 15:22:12,"> From 1.1.0 to 1.3.0, a lot of significant bugs were fixed. Also, some code to
> handle affine transformations was added. We can rely on it and thus simplify
> nilearn's code.

OK, these are good arguments.
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
12,pull_request_commit_comment,502,nilearn,nilearn,AlexandreAbraham,2015-03-18 17:39:55,"However, I think we should do that in a separate PR where we actually use these new features. In the meantime, if the code works with 1.1.0, I see no (good enough) reason to ask for a more recnt one.
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
13,pull_request_commit_comment,502,nilearn,nilearn,lesteve,2015-03-18 18:34:40,"> In the meantime, if the code works with 1.1.0, I see no (good enough) reason to ask for a more recnt one.

What about finding some middle ground and going for 1.2.2, which is the version the version of [python-nibabel](http://packages.ubuntu.com/trusty/python-nibabel) in Ubuntu 14.04?
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
14,pull_request_commit_comment,502,nilearn,nilearn,GaelVaroquaux,2015-03-18 18:45:11,"> What about finding some middle ground and going for 1.2.2, which is the
> version the version of python-nibabel in Ubuntu 14.04?

We certainly should not go above that.

But what is the argument in favor of bumping the version? What is the
logic? What does it gain us and the user?
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
15,pull_request_commit_comment,502,nilearn,nilearn,lesteve,2015-03-18 19:21:32,"Citing from the original PR #397.

> > In particular does scikit-learn 0.12.1 have a special meaning?
> 
> No. It's a configuration that's 2 years old, and we felt that 2 years old was a good time.

I guess I assumed that updating all dependencies in a reasonably uniform manner was the sensible thing to do.

Side comment, it seems that with our installation instructions (pip install nilearn -U --user) nibabel will always been updated to the latest version anyway (I tried both with nibabel is install via apt-get and in a conda environment).
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
16,pull_request_commit_comment,502,nilearn,nilearn,GaelVaroquaux,2015-03-18 21:33:57,"> Citing from the original PR #397.
> 
> ```
>     In particular does scikit-learn 0.12.1 have a special meaning?
>     No. It's a configuration that's 2 years old, and we felt that 2 years
>     old was a good time.
> ```
> 
> I guess I assumed that updating all dependencies in a reasonably
> uniform manner was the sensible thing to do.

That means that you are forcing all your users to upgrade their system
every two year, when you decide that it's time (like now). These people
want to use nilearn to solve their problem as fast as possible, and
probably don't fancy having an update to do. We need to bump dependencies
only if there is an argument for it. The old scikit-learn was a big
problem, with accumulating backports. I don't see a strong argument for
the nilearn dependency bump, but maybe there is one.

> Side comment, it seems that with our installation instructions (pip install
> nilearn -U --user) nibabel will always been updated to the latest version
> anyway (I tried both with nibabel is install via apt-get and in a conda
> environment).

Don't get me started on how the semantics of pip are broken. It's the
only thing that we have unfortunately.
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
17,pull_request_commit_comment,502,nilearn,nilearn,lesteve,2015-03-18 21:49:56,"OK I reverted nibabel required version to 1.1.0.
",62c86d407f84117f5ae0965f204ed798bf013541,"(None, '', u'README.rst')"
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,503,nilearn,nilearn,banilo,2015-03-18 14:28:59,":+1: 
",nan,nan
6,issue_comment,503,nilearn,nilearn,lesteve,2015-03-19 11:57:41,"Thanks a lot !
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,500,nilearn,nilearn,AlexandreAbraham,2015-03-17 15:53:55,"Not again :weary: 
",nan,nan
6,issue_comment,500,nilearn,nilearn,banilo,2015-03-18 18:36:33,"Ok, we should be complete now.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,516,nilearn,nilearn,banilo,2015-03-20 14:20:07,":octocat: yippie
",nan,nan
6,pull_request_commit_comment,516,nilearn,nilearn,lesteve,2015-03-26 08:02:10,"@AlexandreAbraham does this comment still make sense? It should be removed if $ is actually used for comments.
",9b2d5018d2ff95e9442e8c4836112621cdf45bc0,"(3, '', u'nilearn/datasets.py')"
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,469,nilearn,nilearn,bthirion,2015-03-01 22:01:27,"+1
",nan,nan
4,issue_comment,469,nilearn,nilearn,eickenberg,2015-03-01 22:13:44,"The same thing is done e.g. in `mayavi.mlab.triangular_mesh(x, y, z, triangles)`. From `nibabel.freesurfer` ones gets the coordinates in a `coords.shape=(n_coords, 3)` array, and all it takes to split is `x, y, z = coords.T`.

Although I haven't understood the design choice until now, it has never been a problem to use it that way. 

In this proposition here the idea is to be able to avoid needing to hstack `recarray['x'], recarray['y'], recarray['z']` and to be able to pass them directly to the `plot_connectome` function. Seems like a very good idea.
",nan,nan
5,issue_comment,469,nilearn,nilearn,lesteve,2015-03-02 08:34:18,"I am going to argue the other way. It feels to me that plot_connectome wants a list of 3d coordinates and related things should be passed in together rather than in 3 separate variables.

Can you show us an example where you need to concatenate the x, y and z coordinates? In the plot_adhd_covariance example you do get a list of 3d coordinates via find_xyz_cut_coords and no additional numpy manipulation is needed.

> In this proposition here the idea is to be able to avoid needing to hstack recarray['x'], recarray['y'], recarray['z'] and to be able to pass them directly to the plot_connectome function. Seems like a very good idea.

Why not use recarray[['x', 'y', 'z']] rather than hstack?
",nan,nan
6,issue_comment,469,nilearn,nilearn,AlexandreAbraham,2015-03-02 09:38:23,"I feel like this is an implementation vs. semantic representation debate. First, I'd like to underline the fact that this does not impact `plot_connectome` only. For the sake of consistency, if the signature changes here, I will change `NiftiSpheresMasker` accordingly.

> The logic behind this would be that it is easy to split than concatenate.

Let's compare! First version is the current implementation, second is the proposed one.

If I have a recarray with x, y and z fields:
`plot_connectome(adj, recarray[['x', 'y', 'z']])`
`plot_connectome(adj, recarray['x'], recarray['y'], recarray['z'])`

If I have 3 numpy arrays (or lists):
`plot_connectome(adj, zip(x, y, z))`
`plot_connectome(adj, x, y, z)`

If I have a list of triblets:
`plot_connectome(adj, coords)`
`plot_connectome(adj, *zip(*coords))`

Given that there is no performance issue either way, I would be in favor of the triblet representation.
",nan,nan
7,issue_comment,469,nilearn,nilearn,AlexandreAbraham,2015-03-02 09:51:53,"Also, as underline by @eickenberg during the coffee break, using 3 lists will force us to have additional checks as the 3 litsts must have the same length. Whereas, with the actual representation, the condition is inherent to the data structure.
",nan,nan
8,issue_comment,469,nilearn,nilearn,GaelVaroquaux,2015-03-02 12:52:31,"> plot_connectome(adj, recarray[['x', 'y', 'z']])

I don't think that this works. I have just tried it.

> plot_connectome(adj, recarray['x'], recarray['y'], recarray['z'])
> 
> If I have 3 numpy arrays (or lists):
> plot_connectome(adj, zip(x, y, z))

Well. I would write 'np.vstack(x, y, z).T' given that the good practice
is usually to teach people numpy

> plot_connectome(adj, x, y, z)
> 
> If I have a list of triblets:
> plot_connectome(adj, coords)
> plot_connectome(adj, _zip(_coords))

That one is horrible and should never be written in an example, but you
would write:

```
x, y, z = coords.T
plot_connectome(adj, *zip(*coords))
```

By the way, an example of where it's troubling me is:
https://github.com/GaelVaroquaux/nilearn/blob/doc_rework/examples/connectivity/plot_probabilistic_atlas_extraction.py

The atlas here helpfully provides a list of coordinates, that gets loaded
as a recarray.
",nan,nan
9,issue_comment,469,nilearn,nilearn,GaelVaroquaux,2015-03-02 12:53:05,"> Also, as underline by @eickenberg during the coffee break, using 3 lists will
> force us to have additional checks as the 3 litsts must have the same length.
> Whereas, with the actual representation, the condition is inherent to the data
> structure.

We are talking about usability for the end user here. I don't mind have
these 3 checks.
",nan,nan
10,issue_comment,469,nilearn,nilearn,AlexandreAbraham,2015-03-02 13:51:33,"> I don't think that this works. I have just tried it.

Oh, OK, you really use a recarray. I quit using them to use panda dataframes because of jokes like this. Note that a lot of stuff may break in nilearn if you use recarrays. I have started a branch where I fix some of these but it's a lot of work.

> Well. I would write 'np.vstack(x, y, z).T' given that the good practice is usually to teach people numpy

I think that good practices don't include recarrays. In particular, getting back to regular arrays is very very ugly (I would advise to pass by a list instead): `a.view(np.float).reshape(len(a), -1)`

> That one is horrible and should never be written in an example

Agreed, but I showed one-liners only. This would work too but it contains ""magic"": `plot_connectome(adj, *coords.T)`

> By the way, an example of where it's troubling me is [url]

```
import pandas
labels = pandas.read_csv(csv_filename)
# ...
plotting.plot_connectome(correlation_matrix, coords[['x', 'y', 'z']], edge_threshold=""80%"")
```

Problem solved ;)

Actually, I would be more in favor of accepting object that has fields 'x', 'y', and 'z' rather than 3 separate arrays. But again, personal opinion from a pandas user.

Why not accepting something like: `plotting.plot_connectome(correlation_matrix, (x, y, z))`
",nan,nan
11,issue_comment,469,nilearn,nilearn,GaelVaroquaux,2015-03-02 14:06:48,"> Oh, OK, you really use a recarray. I quit using them to use panda dataframes
> because of jokes like this.

OK. Then let's use panda dataframes in our examples. You were against it
a while ago. I think that this is a good option.

> Note that a lot of stuff may break in nilearn if you use recarrays. I
> have started a branch where I fix some of these but it's a lot of work.

I have no specific love for recarrays. It's just that so far, we didn't
use pandas in the examples. I am +1 for pandas.

> I think that good practices don't include

+1

> ```
> By the way, an example of where it's troubling me is [url]
> ```
> 
> import pandas
> labels = pandas.read_csv(csv_filename)
> 
> # ...
> 
> plotting.plot_connectome(correlation_matrix, coords[['x', 'y', 'z']], edge_threshold=""80%"")
> 
> Problem solved ;)

That's how I wrote it originally.

> Actually, I would be more in favor of accepting object that has fields 'x',
> 'y', and 'z' rather than 3 separate arrays. But again, personal opinion from a
> pandas user.

That would tie use very much to pandas. Too much IMHO.

> Why not accepting something like: plotting.plot_connectome(correlation_matrix,
> (x, y, z))

OK. Let's discuss this when I come back. There is no big hurry.
",nan,nan
12,issue_comment,469,nilearn,nilearn,AlexandreAbraham,2015-03-02 14:18:49,"> OK. Then let's use panda dataframes in our examples. You were against it a while ago. I think that this is a good option.

Yes, I thought that it was a bit ""overkill"". But the only alternative is np.recarray and the `shape` problem is not the only one with them... So let's use pandas.

> That would tie use very much to pandas. Too much IMHO.

It would also handle dicts, bunchs... But this was just a suggestion.

> OK. Let's discuss this when I come back. There is no big hurry.

I think that it would be very useful to consult our guinea pigs about that. Let's ask Baptiste!
",nan,nan
13,issue_comment,469,nilearn,nilearn,bthirion,2015-03-02 14:22:23,"There's at least one good reason not rely too heavily on pandas, namely the difficulty to install it in some environments (e.g. Neurospin).
",nan,nan
14,issue_comment,469,nilearn,nilearn,GaelVaroquaux,2015-03-02 14:23:55,"Yes, it's an extra dependency, and that's quite clearly a problem.
",nan,nan
15,issue_comment,469,nilearn,nilearn,lesteve,2015-03-02 14:34:04,"Not sure what the Neurospin environment includes but Ubuntu 14.04 comes with pandas 0.13.1 according to [this](http://packages.ubuntu.com/trusty/python-pandas). That's probably recent enough for what we want to do with it.
",nan,nan
16,issue_comment,469,nilearn,nilearn,AlexandreAbraham,2015-03-02 14:37:14,"> Not sure what the Neurospin environment includes

Pandas is not included by default. However, `pip install pandas --user` works.
",nan,nan
17,issue_comment,469,nilearn,nilearn,banilo,2015-03-02 14:37:42,"An alternative could be: pass on a dictionary object {'x': [1, 2,3]...} with three keys (x, y, z) and a list associated with each. Additionally, one could derive a nilearn-specific class for coordinate ensembles (I know, we do not like classes) that could then be uniformly used by `NiftiSpheresMasker` and `plot_connectome`
",nan,nan
18,issue_comment,469,nilearn,nilearn,GaelVaroquaux,2015-03-02 14:40:10,"> Pandas is not included by default. However, pip install pandas --user works.

At the scale of a large institute, advising beginners to manage software
installs themselves via pip creates a pretty crazy mess in a few years.

G
",nan,nan
19,issue_comment,469,nilearn,nilearn,eickenberg,2015-03-02 14:51:10,"i don't know if this is still the case, but a few months ago there was a
beautiful thread over at pandas where somebody who was trying to use it in
production was very annoyed because they keep changing major stuff at each release without a
deprecation cycle in the name of rapid development

On Monday, March 2, 2015, Gael Varoquaux notifications@github.com wrote:

> > Pandas is not included by default. However, pip install pandas --user
> > works.
> 
> At the scale of a large institute, advising beginners to manage software
> installs themselves via pip creates a pretty crazy mess in a few years.
> 
> G
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/469#issuecomment-76722313.
",nan,nan
20,issue_comment,469,nilearn,nilearn,AlexandreAbraham,2015-04-17 07:31:21,"So, what do we do about this one?
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,465,nilearn,nilearn,banilo,2015-03-05 19:21:33,"No comments on this one?
",nan,nan
5,issue_comment,465,nilearn,nilearn,bthirion,2015-03-09 22:52:26,"# I do get an error with unittests:

## ERROR: nilearn.decomposition.tests.test_multi_pca.test_multi_pca

Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest
    self.test(*self.arg)
  File ""/home/bertrand/mygit/nilearn/nilearn/decomposition/tests/test_multi_pca.py"", line 50, in test_multi_pca
    multi_pca.fit(data[:2])
  File ""/home/bertrand/mygit/nilearn/nilearn/decomposition/multi_pca.py"", line 224, in fit
    preset_mask_img = self.mask.mask_img_
AttributeError: 'MultiNiftiMasker' object has no attribute 'mask_img_'
",nan,nan
6,issue_comment,465,nilearn,nilearn,GaelVaroquaux,2015-03-09 23:31:23,"Indeed, tests fail on travis.
",nan,nan
7,issue_comment,465,nilearn,nilearn,bcipolli,2015-03-10 16:04:45,"Just a note, there's also no test case for when the mask is computed, so there's limited code coverage of this PR.  I tried making a simple one, but the mask computation was failing...
",nan,nan
8,issue_comment,465,nilearn,nilearn,AlexandreAbraham,2015-03-17 10:41:04,"Closing this one as we don't want to silent parameter overriding.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
8,pull_request_commit_comment,464,nilearn,nilearn,bthirion,2015-03-01 22:51:53,"Note: the _locator method seems very redundant across classes. maybe there will be something to refactor here in a future PR.
",e48569474292b89bf0f067bd9822132d06afede7,"(111, '', u'nilearn/plotting/displays.py')"
5,issue_comment,464,nilearn,nilearn,bthirion,2015-03-01 22:53:44,"LGTM overall.
",nan,nan
6,issue_comment,464,nilearn,nilearn,bcipolli,2015-03-06 13:16:37,"Rebased to master to test for Python 3.4 support.
",nan,nan
7,issue_comment,464,nilearn,nilearn,AlexandreAbraham,2015-03-17 10:30:03,"Thanks!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,466,nilearn,nilearn,banilo,2015-02-27 12:38:40,"Another related issue appears to be #273 

Is there any hard reason why we cannot merge the two functions into a single `check_niimgs` with the functionality of both, that is:
- return iterables
- autoresample
- (not) accepted 3D niimg-like objects
- caching
",nan,nan
4,issue_comment,466,nilearn,nilearn,AlexandreAbraham,2015-02-27 12:50:47,"I suggested that:

> Since both functions seem to converge, we may want to consider having only one function.

I think that having two functions is saner because:
- the 4D would make call to the 3D function (which is better than having recurrence and `if` statements)
- some functionalities are exclusive to the 4D function (`return_iterator` for example).
",nan,nan
5,issue_comment,466,nilearn,nilearn,AlexandreAbraham,2015-04-08 08:49:05,"Fixed
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,461,nilearn,nilearn,bcipolli,2015-02-25 00:06:25,"There are actually two issues here.  First, the colorbar width is not scaled according to the width of the axes.  Second, something about how the colorbar axis is placed is pushing the brain image far to the left.  The issue can lead to the above error.

I have a fix for the first, but a bit stuck on the second.  I welcome any advice there.
",nan,nan
4,issue_comment,461,nilearn,nilearn,bcipolli,2015-02-25 00:36:31,"Found the issue; it was in `OrthoSlicer._locator`.  There are other lingering issues with the colorbar.  I will create a PR for tomorrow.

With all the fixes, I get this:
![image](https://cloud.githubusercontent.com/assets/4072455/6362518/d22d5dea-bc42-11e4-9274-3766d1a0f119.png)
![image](https://cloud.githubusercontent.com/assets/4072455/6362528/ec6d22da-bc42-11e4-989b-13e5125cc288.png)
![image](https://cloud.githubusercontent.com/assets/4072455/6362513/ba5d937e-bc42-11e4-992c-fe6dad4b3ab1.png)

 For reference (old, when working):
![image](https://cloud.githubusercontent.com/assets/4072455/6362557/3195cb0a-bc43-11e4-82ab-a7985713416b.png)
",nan,nan
5,issue_comment,461,nilearn,nilearn,bcipolli,2015-03-27 00:21:16,"This was fixed in #464
",nan,nan
6,issue_comment,461,nilearn,nilearn,GaelVaroquaux,2015-03-27 07:07:02,"Thanks for fixing the problem and on top of this closing the issue.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,460,nilearn,nilearn,bcipolli,2015-02-24 10:48:58,"I debugged this for a while, and the introduction of the 4th dimenions occurs in `check_niimgs`, which converts a 3D image to 4D (even when `allow_3D=True`).  Once that's done, there's no way to return a 1D vector from `transform`, and so `inverse_transform` also must return 4D.

Not sure if there is any simple fix.
",nan,nan
4,issue_comment,460,nilearn,nilearn,AlexandreAbraham,2015-02-24 12:43:57,"We are aware of that and this point is still under discussion. We couldn't come with a satisfying answer yet.
",nan,nan
5,issue_comment,460,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:06:31,"Well, the problem is that there is intrinsically a loss of information:
the output of transform must be 2D to obey scikit-learn's convention.
Thus a 3D (n_x, n_y, n_z) image and a 4D (n_x, n_y, n_z, 1) image are
cast to the same 'X' matrix. For one of these two, 
inverse_transform(transform()) will fail to give the same shape as the
original.

We are open to changing the current convention, ie to always cast to 4D,
if you give us good arguments.
",nan,nan
6,issue_comment,460,nilearn,nilearn,AlexandreAbraham,2015-04-17 07:33:48,"@GaelVaroquaux it is the opposite, we always return a 4D image. I think that we can close this issue now. The question is: should we still return 4D images or should we squeeze it to 3D if there is only one volume?
",nan,nan
7,issue_comment,460,nilearn,nilearn,GaelVaroquaux,2015-05-11 05:12:06,"Closing this as won't fix: we have decided that consistency in the sense of always returning the same ouptut shape was more important.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,463,nilearn,nilearn,lesteve,2015-02-26 07:43:07,"Looks like a bug to me, a simple fix would be to use itertools.tee to consume the first item but still be able to return the unadulterated iterator. Adding a test would be great too.
",nan,nan
4,issue_comment,463,nilearn,nilearn,AlexandreAbraham,2015-02-26 11:54:54,"@bcipolli thanks for spotting this one. By digging in this code, we found out that there is some unconsistent behavior in both `check_niimg` and `check_niimgs`. We want to release soon so we'll fix this one first but we will open a discussion about image loading later.
",nan,nan
5,issue_comment,463,nilearn,nilearn,lesteve,2015-02-26 14:07:30,"Hmmm it looks like the check_niimg(s) function are not very iterator friendly in contrary to what the docstring is saying. 

Note this has been the case for a while, and is not specific to the relatively recent return_iterator=True in check_niimgs. To make matters worse, I wasn't able to find tests with check_niimg(s) and iterators.

A couple of examples I just found:

``` python
import numpy as np
from nibabel import Nifti1Image

from nilearn import _utils

affine = np.eye(4)
img_3d = Nifti1Image(np.ones((10, 10, 10)), affine)

input_iterator = iter([img_3d, img_3d])
img_4d = _utils.check_niimgs(input_iterator)  # Exception in concat_niimgs

input_iterator = iter([img_3d, img_3d])
img_4d = _utils.check_niimg(input_iterator)
img_4d.shape  # (10, 10, 10, 1) instead of (10, 10, 10, 2)
```

The safe way to use check_niimg(s) seems to use lists rather than iterators as arguments and I bet that's the way they are used in our source code.
",nan,nan
6,issue_comment,463,nilearn,nilearn,AlexandreAbraham,2015-02-26 14:14:28,"Since we plan to refactor `check_niimg*`, I suggest that we convert iterators into lists and move on until the code is refactored.
",nan,nan
7,issue_comment,463,nilearn,nilearn,banilo,2015-02-27 08:49:56,"> Since we plan to refactor check_niimg*

:+1:
",nan,nan
8,issue_comment,463,nilearn,nilearn,AlexandreAbraham,2015-04-08 08:57:53,"The first bug evoked by ben is now solved. Here is a new script to test the second one:

``` python
from nilearn import datasets
from nilearn.image import iter_img, index_img
from nilearn._utils.niimg_conversions import check_niimg_4d

haxby_dataset = datasets.fetch_haxby_simple()
func_img_1 = index_img(haxby_dataset.func, 0)

# This works
print(list(check_niimg_4d([func_img_1], return_iterator=True)))

# This throws an error
check_niimg_4d(iter_img([func_img_1]))
```
",nan,nan
9,issue_comment,463,nilearn,nilearn,GaelVaroquaux,2015-04-15 11:07:53,"What's the status of this guy? Do we have pending work that tries to fix the second bug?
",nan,nan
10,issue_comment,463,nilearn,nilearn,AlexandreAbraham,2015-04-15 11:10:50,"#542 fixes the second bug but still has some dirty code and needs review.
",nan,nan
11,issue_comment,463,nilearn,nilearn,GaelVaroquaux,2015-04-15 11:12:32,"OK, #542 is fixing 2 critical bugs. So I think that we should try to finish it and merge it before the release.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,462,nilearn,nilearn,AlexandreAbraham,2015-02-25 16:10:05,"Works for me on nilearn/master: 

```
In [7]: print list(iter_img([func_img_1]))
[<nibabel.nifti1.Nifti1Image object at 0x7fe511a81890>]
```
",nan,nan
4,issue_comment,462,nilearn,nilearn,bcipolli,2015-02-25 16:10:34,"Lemme try that again :)
",nan,nan
5,issue_comment,462,nilearn,nilearn,AlexandreAbraham,2015-02-25 16:14:00,"I would have waited for somebody else to try before closing (since we all have different software environments) but if you think you can check by yourself, it's fine!
",nan,nan
6,issue_comment,462,nilearn,nilearn,bcipolli,2015-02-25 16:26:40,"@AlexandreAbraham User error :)  I thought I had moved off of my local branch to test this on upstream/master, but I had not.  The real issue is in #463... and that's on upstream/master :)
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
9,issue_comment,528,nilearn,nilearn,banilo,2015-03-30 16:57:47,"Good catch, Olivier!

2015-03-30 18:56 GMT+02:00 Olivier Grisel notifications@github.com:

> Here is a plot with some negative and positive random data:
> 
> import numpy as npfrom nilearn.plotting import plot_stat_mapfrom nibabel import Nifti1Image
> 
> data = np.random.RandomState(0).randn(53, 63, 46)
> plot_stat_map(Nifti1Image(data, np.eye(4)))
> 
> [image: pos_neg_plot_stat_map]
> https://cloud.githubusercontent.com/assets/89061/6901532/2caaf7c4-d70e-11e4-8ac4-56fcde308e30.png
> 
> The colormap has values centered around zeros, so it could be correct.
> Let's now do the same plot on the absolute value of the previous data to
> get only positive values:
> 
> plot_stat_map(Nifti1Image(np.abs(data), np.eye(4)))
> 
> [image: pos_only_plot_stat_map]
> https://cloud.githubusercontent.com/assets/89061/6901547/502ace68-d70e-11e4-8fc5-e383643920c1.png
> 
> One can observe that the data region has a lot of red-ish pixels that
> should be negative values based on the legend of the colorbar. This is not
> correct as we only have positive values in this image.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/528.

## 

Viele Grüße,
Danilo
",nan,nan
10,issue_comment,528,nilearn,nilearn,AlexandreAbraham,2015-03-30 17:00:43,"This is a problem of colorbar, not plotting itself.
",nan,nan
11,issue_comment,528,nilearn,nilearn,lesteve,2015-03-30 17:33:16,"Fortunately it looks like this bug is only in master and not in the latest released version, i.e. 0.1.2.
",nan,nan
4,issue_comment,528,nilearn,nilearn,GaelVaroquaux,2015-03-30 17:35:03,"> Fortunately it looks like this bug is only in master and not in the latest
> released version, i.e. 0.1.2.

Good, it means that we can bisect!
",nan,nan
12,issue_comment,528,nilearn,nilearn,AlexandreAbraham,2015-04-15 09:21:02,"> Good, it means that we can bisect!

No need to bisect. I remembered taking a look a it a while ago and Loïc did too. By talking about what we found, we realized that the colorbar is defined at some point, and re-hacked afterward, which is very messy. Plus the original behavior of matplotlib is completely overridden. The origin of this problem may be that the plotting code is very (overly?) complicated and hard to understand. I think that we should take a step back and reorganize the whole thing.
",nan,nan
5,issue_comment,528,nilearn,nilearn,GaelVaroquaux,2015-04-15 09:29:29,"> No need to bisect. I remembered taking a look a it a while ago and Loïc
> did too. By talking about what we found, we realized that the colorbar
> is defined at some point, and re-hacked afterward, which is very messy.
> The origin of this problem may be that the plotting code is very
> (overly?) complicated and hard to understand. I think that we should
> take a step back and reorganize the whole thing.

:$. We have had feature creep.

But concretely we need to release soon, because our users have bugs and
that's a problem.
",nan,nan
13,issue_comment,528,nilearn,nilearn,lesteve,2015-04-15 09:30:33,"> No need to bisect.

I actually did bisect mostly just for the fun of it. The first ""bad"" commit is 2bc3593e632876ee7bf1573aabc7d81e55540b89 but as Alex was saying the underlying issue is more linked to the general level of hackiness than to a particuliar commit.
",nan,nan
14,issue_comment,528,nilearn,nilearn,lesteve,2015-04-15 09:31:27,"> But concretely we need to release soon, because our users have bugs and that's a problem.

I started looking at this bug with the release in mind indeed.
",nan,nan
6,issue_comment,528,nilearn,nilearn,GaelVaroquaux,2015-04-15 09:32:41,"> I started looking at this bug with the release in mind indeed.

Let's talk about this at lunch.
",nan,nan
3,issue_comment,528,nilearn,nilearn,ogrisel,2015-04-16 04:44:59,"Thanks!
",nan,nan
7,issue_comment,528,nilearn,nilearn,GaelVaroquaux,2015-04-16 06:28:26,"> Closed #528 via 96902a5.

Cool. Would you mind creating an issue to clean up the colorbar code that
we assign to later?
",nan,nan
15,issue_comment,528,nilearn,nilearn,lesteve,2015-04-16 06:43:59,"> Cool. Would you mind creating an issue to clean up the colorbar code that we assign to later?

see #545.
",nan,nan
8,issue_comment,528,nilearn,nilearn,GaelVaroquaux,2015-04-16 06:45:07,"Thx!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
9,issue_comment,501,nilearn,nilearn,AlexandreAbraham,2015-03-17 16:54:02,"Hi Satra, thanks for your interest in nilearn. Actually, this bug is known and I already prepared a fix. We are in the process of integraring it as it implies some changes in nilearn's core that are not trivial. I'll let you know when it's ready to use!
",nan,nan
4,issue_comment,501,nilearn,nilearn,GaelVaroquaux,2015-03-17 16:58:15,"> but i think this is also a case where niftimasker can simply check if
> the 4th dimension is one for it's image check to know that this is a 3d
> file.

Agreed.
",nan,nan
10,issue_comment,501,nilearn,nilearn,AlexandreAbraham,2015-03-27 08:50:40,"Hi @satra,

Sorry for the long wait. We have just merged a PR that should fix your problem. Could you try again and report us any error?

Thanks!
",nan,nan
5,issue_comment,501,nilearn,nilearn,GaelVaroquaux,2015-04-15 10:46:26,"Is this fixed? I think it is, so I am closing the issue. If it's not fixed, @satra, please ping us, and we will reopen the issue.
",nan,nan
11,issue_comment,501,nilearn,nilearn,AlexandreAbraham,2015-04-15 10:49:17,"It is fixed but I am not sure that we added a test for that case. I'll take 5 minutes to do it.
",nan,nan
6,issue_comment,501,nilearn,nilearn,GaelVaroquaux,2015-04-15 10:53:16,"> It is fixed but I am not sure that we added a test for that case. I'll take 5
> minutes to do it.

Cool, thx
",nan,nan
12,issue_comment,501,nilearn,nilearn,AlexandreAbraham,2015-04-15 11:04:27,"OK, I thought that fixing it at check_niimg level would fix it at nifti_masker level but that was not the case. Same as for the colorbar bug: I added a hotfix and the problem itself will be tackled properly in #542.
",nan,nan
3,issue_comment,501,nilearn,nilearn,satra,2015-04-15 14:22:28,"@AlexandreAbraham - sorry for the delay - yes this fixed the issue. i also fixed the source of the issue which was in ANTS-ITK
",nan,nan
7,issue_comment,501,nilearn,nilearn,GaelVaroquaux,2015-04-15 14:24:19,"Thanks @satra . Good to have 2 fixes for one issue.
",nan,nan
13,issue_comment,501,nilearn,nilearn,Nufas204,2016-08-29 03:02:39,"May I know if this is fixed? I get that similar error in viewing the results to plot the SVM weights for haxby dataset. 
",nan,nan
8,issue_comment,501,nilearn,nilearn,GaelVaroquaux,2016-08-29 04:51:44,"Yes, this is fixed. I suspect that you are getting a genuine error, due to a mistake that you are doing. For instance, maybe you are not performing 2-class classification with the SVM, but multiclass, and hence getting multiple return weight maps where you expect to be getting only one.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,112,nilearn,nilearn,GaelVaroquaux,2013-10-07 19:47:40,"Well, I don't believe that such regressors can take in account effects like respiratory, cardio-vascular or scanner noise, so we shouldn't limit ourselves to these regressors. However, your experience seems to be that it is good to include them, so in the long run, we should make that easy.
",nan,nan
5,issue_comment,112,nilearn,nilearn,AlexandreAbraham,2015-02-10 13:28:17,"I think we can close this one as this is an open problem. @GaelVaroquaux ?
",nan,nan
4,issue_comment,112,nilearn,nilearn,GaelVaroquaux,2015-02-10 13:28:39,"> I think we can close this one as this is an open problem. @GaelVaroquaux ?

Agreed.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,361,nilearn,nilearn,salma1601,2015-01-23 23:56:23,"**What do you use in nilearn?**
I used NiftiMapsMasker and datasets.
**What problems did you encounter? Did you find a workaround by yourself?**
From my naive point of view as a beginner in programming, I am frustrated with joblib. I rerun the Masker with different parameters without specifying different memory locations and I end up with a huge memory size of a series of files I never exploited because I don't know to which subject/set of parameters they correspond. Plus I had to move the root folder containing joblib and I had the impression that the cached files were no longer recognized.
A different minor point is that I wanted to explore non standardized signals within my ROIs but the function signal.clean forces normalization of the input signals. I'm rather used to scaling the signal to its average across timepoints (PSC units). 
**What do you want to see in nilearn in the future**
I would like to have a hrf so that to deal with connectivity during task.
**Comments on nilearn in general (what you like / don't like...)**
I like in nilearn the excellent code quality: one can go into it and understand quickly what it does. But I feel like in the user guide and the given examples the stress is put on the model but not on the neuro point of view. For instance I expect regions or at least networks to be explicit on a connectivity matrix plot for real data.
",nan,nan
4,issue_comment,361,nilearn,nilearn,bthirion,2015-01-26 21:47:56,"_What do you use in nilearn?_
 NiftiMasker (mostly), visualization; get back to the examples when running clustering, ICA etc.

_What problems did you encounter? Did you find a workaround by yourself?_
Most of them have been fixed in the course of time. 

_What do you want to see in nilearn in the future_
I'd like to see it become a complete suite for volume-based (as opposed to surface-based) data analysis: design matrix, GLM, group statistics.
Up-to-date dictionary learning.

_Comments on nilearn in general (what you like / don't like...)_
NA
",nan,nan
5,issue_comment,361,nilearn,nilearn,eickenberg,2015-01-27 13:13:27,"## What do you use in nilearn?
- `_utils.check_niimg`
- resampling / cropping functionality
- `NiftiMasker`
- `plotting._plot_img_with_bg` ;) (but other ones, too, of course)
- `datasets` fetchers!

## What problems?
- This is probably overfitting the Haxby2001 dataset usecase, but neither `NiftiMasker` nor `MultiNiftiMasker` are appropriate here, since `NiftiMasker` cannot set breakpoints for detrending and standardizing and `MultiNiftiMasker` needs different `niimgs` to do it. Potential solution: When slicing `niimgs` becomes possible, one could use the `MultiNiftiMasker` with slices
- `plotting.plot_img`, the ""general"" plotting function is not a functional superset of `plotting.plot_stat_map` (no background possible IIRC)
- `NiftiMasker.mask_strategy` is somehow always the wrong one for the data I want to treat ;)
- not a problem if handled correctly: nilearn should not overfit usecases or become an eclectic collection of not universally accepted tools. Right now everything is OK.

## Future?
- GLM, please! In a way that can read onset descriptor files but doesn't oblige me to use them. Minimum amount of classes involved (e.g. ideally 0 or 1, implementing a transformer type interface).
- Interactive plotting would to me be worth its number of lines in gold units. Every time I plot a stat map, I want to scroll around, but can't. This could be done with `pynax` in the slimmest possible way.

## Comments on nilearn in general

`sum` all comments of predecessors together. All in all I think nilearn can be said to be perceived as very reliable, with sane defaults, which is a lot of work and thought to create. So great work everybody!
",nan,nan
10,issue_comment,361,nilearn,nilearn,mrahim,2015-01-27 23:07:25,"## What do you use in nilearn?

Mainly image manipulation, masking, and plotting.

## What problems?

A cosmetic issue when plotting positive values only, by using `plot_stat_map` on which are displayed symmetric values. I use `plot_img` as an alternative at this time.

## Future?

GLM, of course !

## Comments on nilearn in general

A great added value to nilearn is the easy way to accomodate with the functionalities through the well written examples, even for non-advanced Python programmers. Focus should be kept on it.
",nan,nan
6,issue_comment,361,nilearn,nilearn,AlexandreAbraham,2015-02-10 10:19:51,"Thanks everybody for your participation! So, apparently, most of people are using nilearn for masking, which is a good thing considering the effort that we put in the maskers ;).

It's not the first time that I hear people complaining about the caching system. I will open an issue about that.

AFAIK, the GLM will not be added in a near future but it's on the roadmap.
",nan,nan
7,issue_comment,361,nilearn,nilearn,fabianp,2015-02-26 13:26:25,"I would be glad to participate with feedback and ideas on the GLM when time comes. From my experience the GLM in nipy would be a good starting point, but IMHO the API could be made simpler by  removing some of the classes in there.
",nan,nan
8,issue_comment,361,nilearn,nilearn,AlexandreAbraham,2015-02-26 13:49:10,"Cool. @GaelVaroquaux is interested by that too. Do you think that we should open a brainstorming wiki page?
",nan,nan
9,issue_comment,361,nilearn,nilearn,eickenberg,2015-02-26 14:04:19,"+1 -- the GLM in nipy is good, except that it has too many classes and
afaik it depends on statsmodels, which is unnecessary. Constructing a
better, intuitive architecture around it will be the main issue, and it may
not be so easy, so +1 for brainstorming

On Thu, Feb 26, 2015 at 2:49 PM, Alexandre Abraham <notifications@github.com

> wrote:
> 
> Cool. @GaelVaroquaux https://github.com/GaelVaroquaux is interested by
> that too. Do you think that we should open a brainstorming wiki page?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/361#issuecomment-76180361.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,472,nilearn,nilearn,GaelVaroquaux,2015-03-01 08:14:26,"> Trying a .coveragerc config file, to specify source files to ignore in code
> coverage.

But I don't think that we want to ignore any files in the code coverage.
I am quite happy to see that it's reported that they are not covered.
",nan,nan
5,issue_comment,472,nilearn,nilearn,bcipolli,2015-03-01 15:32:31,"My thinking was, by ignoring files that are not intended to be covered (like `examples` and `glass_brain_files`) would both improve the code coverage and show relevant files with poor coverage on the `coveralls` homepage (and maybe inspire some of us, including me, to look at the missing coverage!) :).  I tentatively included all `__init__` files, but that's probably to aggressive.

With that said, I'll have no objections if this is closed; I just assumed others would feel the same!
",nan,nan
6,issue_comment,472,nilearn,nilearn,lesteve,2015-03-02 09:34:52,"I agree with @GaelVaroquaux on this one, closing.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,473,nilearn,nilearn,banilo,2015-03-01 13:38:09,"Should we add a regression test?
",nan,nan
6,issue_comment,473,nilearn,nilearn,lesteve,2015-03-01 13:47:20,"> Should we add a regression test?

Yes please
",nan,nan
12,pull_request_commit_comment,473,nilearn,nilearn,bthirion,2015-03-01 20:41:33,"Could you add a comment ? I'm not sure I understand what you do here. 
+ a test...
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/find_cuts.py')"
13,pull_request_commit_comment,473,nilearn,nilearn,AlexandreAbraham,2015-03-09 13:41:57,":+1: This is not clear for me either.
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/find_cuts.py')"
14,pull_request_commit_comment,473,nilearn,nilearn,banilo,2015-03-09 22:30:40,"For some obscure reason the 'mask' happened to contain only zeros for a certain nifti image, which is why largest_connected_component crashed. Unfortunately, I have not succeeded in creating the same situation in a test :(
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/find_cuts.py')"
15,pull_request_commit_comment,473,nilearn,nilearn,GaelVaroquaux,2015-03-10 09:01:06,"What you are doing here is absolutely to me :). However, it seems that a comment would be welcome.

I addition, I would write the line above: 'if not np.any(mask)'.

Once this is in, and a test, I am :+1: for merge. And thanks, this is very useful!
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/find_cuts.py')"
16,pull_request_commit_comment,473,nilearn,nilearn,AlexandreAbraham,2015-03-10 11:31:31,"Isn't `if not np.any(mask)` slower? In that case, we should also change line 73.
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/find_cuts.py')"
17,pull_request_commit_comment,473,nilearn,nilearn,GaelVaroquaux,2015-03-10 11:34:40,"Did you time this with %timeit?

Sent from my phone. Please forgive brevity and mis spelling

On Mar 10, 2015, 12:31, at 12:31, Alexandre Abraham notifications@github.com wrote:

> > @@ -76,6 +76,8 @@ def find_xyz_cut_coords(img, mask=None,
> > activation_threshold=None):
> >          activation_threshold = fast_abs_percentile(my_map[my_map !=
> > 0].ravel(),
> >                                                     80)
> >      mask = np.abs(my_map) > activation_threshold - 1.e-15
> > -    if mask.sum() == 0:
> 
> Isn't `if not np.any(mask)` slower? In that case, we should also change
> line 73.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/473/files#r26113990
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/find_cuts.py')"
18,pull_request_commit_comment,473,nilearn,nilearn,AlexandreAbraham,2015-03-10 11:37:41,"I've done it: the max/min version is twice as fast for a 50x50x50 image.
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/find_cuts.py')"
19,pull_request_commit_comment,473,nilearn,nilearn,GaelVaroquaux,2015-03-10 11:55:11,"> I've done it: the max/min version is twice as fast for a 50x50x50 image.

Thanks for checking!
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/find_cuts.py')"
7,issue_comment,473,nilearn,nilearn,banilo,2015-03-10 12:47:24,"How about now?
",nan,nan
20,pull_request_commit_comment,473,nilearn,nilearn,lesteve,2015-03-10 12:57:01,"minor comment: `* 1e-7`

More importantly isn't this test supposed to fail without your fix in find_cuts.py? Spoiler: it doesn't seem to, at least for me ...
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
8,issue_comment,473,nilearn,nilearn,GaelVaroquaux,2015-03-10 14:05:19,"Failing test
",nan,nan
9,issue_comment,473,nilearn,nilearn,banilo,2015-03-10 14:11:07,"The test with the sparse matrix is failing due to np.nan_to_num()

``` python
    sparse_adjacency_matrix = sparse.coo_matrix(adjacency_matrix)
    plot_connectome(sparse_adjacency_matrix, node_coords,
                    **kwargs)
```

So?
",nan,nan
10,issue_comment,473,nilearn,nilearn,GaelVaroquaux,2015-03-10 14:16:28,"Apply it only on the ""data"" attribute of the sparse matrix. You can test for sparse matrix with scipy.sparse.isspmatrix

Sent from my phone. Please forgive brevity and mis spelling

On Mar 10, 2015, 15:11, at 15:11, Danilo Bzdok notifications@github.com wrote:

> The test with the sparse matrix is failing due to np.nan_to_num()
> 
> ``` python
>    sparse_adjacency_matrix = sparse.coo_matrix(adjacency_matrix)
>    plot_connectome(sparse_adjacency_matrix, node_coords,
>                    **kwargs)
> ```
> 
> So?
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/473#issuecomment-78060355
",nan,nan
11,issue_comment,473,nilearn,nilearn,lesteve,2015-03-10 15:37:30,"Could you rebase on master so that we can get the coverage and python 3 support?
",nan,nan
21,pull_request_commit_comment,473,nilearn,nilearn,lesteve,2015-03-11 07:32:37,"I guess because that's a boolean array you only need the mask.max() == 0
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(5, '', u'nilearn/plotting/find_cuts.py')"
22,pull_request_commit_comment,473,nilearn,nilearn,lesteve,2015-03-11 07:43:01,"I believe the lines above (l.73) are now redundant and should be removed:

``` python
# Testing min and max is faster than np.all(my_map == 0)
if (my_map.max() == 0) and (my_map.min() == 0):
    return .5 * np.array(data.shape)
```
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(5, '', u'nilearn/plotting/find_cuts.py')"
23,pull_request_commit_comment,473,nilearn,nilearn,lesteve,2015-03-11 08:09:55,"I actually double-check the claim that checking .max() and .min() was faster than using .any(), it seems to be true for float arrays but not boolean ones.

I'd be in favour of `if not mask.any()`

``` python
import numpy as np
arr = np.random.random((64, 64, 64))
%timeit arr.max()
%timeit arr.any()
bool_arr = arr > 0.5
%timeit bool_arr.max()
%timeit bool_arr.any()
%timeit np.any(bool_arr)
```

``` python
In [75]: import numpy as np

In [76]: arr = np.random.random((64, 64, 64))

In [77]: %timeit arr.max()
10000 loops, best of 3: 126 µs per loop

In [78]: %timeit arr.any()
1000 loops, best of 3: 868 µs per loop

In [79]: bool_arr = arr > 0.5

In [80]: %timeit bool_arr.max()
The slowest run took 6.30 times longer than the fastest. This could mean that an intermediate result is being cached 
100000 loops, best of 3: 9.85 µs per loop

In [81]: %timeit bool_arr.any()
The slowest run took 6.49 times longer than the fastest. This could mean that an intermediate result is being cached 
100000 loops, best of 3: 9.63 µs per loop

In [82]: %timeit np.any(bool_arr)
The slowest run took 5.46 times longer than the fastest. This could mean that an intermediate result is being cached 
100000 loops, best of 3: 14.1 µs per loop
```

Interestingly enough `np.any` has a 50% overhead compared to `.any`. While we are playing with micro-optimisations, `any(arr.flat)` could be a candidate but I guess it depends how many False you have to iterate through before finding the first True or the end of the array.
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(5, '', u'nilearn/plotting/find_cuts.py')"
24,pull_request_commit_comment,473,nilearn,nilearn,lesteve,2015-03-11 08:21:52,"Better comment? Something like: test with no data above the activation threshold
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
25,pull_request_commit_comment,473,nilearn,nilearn,AlexandreAbraham,2015-03-11 08:24:57,"> I believe the lines above (l.73) are now redundant and should be removed 

Are you sur that `fast_abs_percentile` won't crash if the array is empty?
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(5, '', u'nilearn/plotting/find_cuts.py')"
26,pull_request_commit_comment,473,nilearn,nilearn,lesteve,2015-03-11 08:36:12,"> Are you sur that fast_abs_percentile won't crash if the array is empty?

Good point, let's leave it like that for now then.
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(5, '', u'nilearn/plotting/find_cuts.py')"
27,pull_request_commit_comment,473,nilearn,nilearn,banilo,2015-03-13 15:10:05,"> Better comment?

Done!
",1b82fc6801488be0b72b2380f419fe38a2c0bd12,"(None, '', u'nilearn/plotting/tests/test_find_cuts.py')"
 , , , , , , , , , 
 , , , , , , , , , 
30,issue_comment,441,nilearn,nilearn,coveralls,2015-02-18 15:14:52,"[![Coverage Status](https://coveralls.io/builds/1949190/badge)](https://coveralls.io/builds/1949190)

Coverage decreased (-0.08%) to 91.74% when pulling **d1d2d0d9549610e80ecdea9a64ca5685180586c8 on lesteve:connectome-plotting** into **5e1621db5baecee634883b45ffa7f53a96df6332 on nilearn:master**.
",nan,nan
36,issue_comment,441,nilearn,nilearn,banilo,2015-02-18 15:27:57,"That looks pretty good! I would not have thought that it can be visualized that well with glass brain.
kudos!
",nan,nan
39,pull_request_commit_comment,441,nilearn,nilearn,banilo,2015-02-19 11:22:07,"From my naive point view: should it not be the other way round?

``` python
ispd = eigvalsh_min >= 0 if semi_definite else eigvalsh_min > 0
```
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/_utils/extmath.py')"
40,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-19 11:59:23,"Yeah I actually fixed this one locally this morning...
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/_utils/extmath.py')"
31,issue_comment,441,nilearn,nilearn,coveralls,2015-02-19 13:05:28,"[![Coverage Status](https://coveralls.io/builds/1955858/badge)](https://coveralls.io/builds/1955858)

Coverage remained the same at 91.81% when pulling **ec1ec74ece96ab684e6b8fdd16055694e6c5d48d on lesteve:connectome-plotting** into **4ecf57695e3166f1157aa62220b25a0d00128200 on nilearn:master**.
",nan,nan
32,issue_comment,441,nilearn,nilearn,coveralls,2015-02-19 13:32:41,"[![Coverage Status](https://coveralls.io/builds/1956027/badge)](https://coveralls.io/builds/1956027)

Coverage remained the same at 91.81% when pulling **c9c602f3d69d4594fa10da553ba1c049b2185c1e on lesteve:connectome-plotting** into **4ecf57695e3166f1157aa62220b25a0d00128200 on nilearn:master**.
",nan,nan
33,issue_comment,441,nilearn,nilearn,coveralls,2015-02-19 13:43:02,"[![Coverage Status](https://coveralls.io/builds/1956096/badge)](https://coveralls.io/builds/1956096)

Coverage remained the same at 91.81% when pulling **c9c602f3d69d4594fa10da553ba1c049b2185c1e on lesteve:connectome-plotting** into **4ecf57695e3166f1157aa62220b25a0d00128200 on nilearn:master**.
",nan,nan
34,issue_comment,441,nilearn,nilearn,coveralls,2015-02-19 15:18:09,"[![Coverage Status](https://coveralls.io/builds/1956773/badge)](https://coveralls.io/builds/1956773)

Coverage remained the same at 91.95% when pulling **587bc603657c679751837d9a5a056d87a05f6d2d on lesteve:connectome-plotting** into **4ecf57695e3166f1157aa62220b25a0d00128200 on nilearn:master**.
",nan,nan
35,issue_comment,441,nilearn,nilearn,coveralls,2015-02-19 15:50:49,"[![Coverage Status](https://coveralls.io/builds/1957001/badge)](https://coveralls.io/builds/1957001)

Coverage remained the same at 91.95% when pulling **dcdf7c9cbcfafcc08229936b1c4e0b03d9133a4e on lesteve:connectome-plotting** into **4ecf57695e3166f1157aa62220b25a0d00128200 on nilearn:master**.
",nan,nan
38,issue_comment,441,nilearn,nilearn,mrahim,2015-02-19 18:05:01,"me too ...

2015-02-19 19:04 GMT+01:00 Alexandre Abraham notifications@github.com:

> Am I the only one to find coveralls terribly annoying?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/441#issuecomment-75103369.
",nan,nan
41,pull_request_commit_comment,441,nilearn,nilearn,bcipolli,2015-02-19 19:34:15,"I believe this should be `atlas_maps` instead of `msdl_atlas_dataset.maps`.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
42,pull_request_commit_comment,441,nilearn,nilearn,bcipolli,2015-02-19 20:41:00,"Instead of `39`, better to use `len(regions_coords)` (I'm using this function, but with a modified version of the maps image :) )
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
43,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-19 21:56:14,"In the examples, the priority is often to make the code simpler (ie shorter), at the cost of genericity.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
44,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-19 21:57:19,"I am wondering if it would not be interesting to use as node colors, simply the ordering of the node in the atlas. It would make the code simpler, and I believe that it has been chosen in a way that makes sense.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
45,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-19 21:59:44,"Could we do a for loop rather than a map: this is going to confuse beginners.

Also, a comment saying why this code is useful would help.

Finally, I think that I would prefer not having a function defined for this, but simply code in the example, also in the interest of simplicity.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
46,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-19 22:00:35,"I actually tackled both @bcipolli comments which were more than reasonable.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
47,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-19 22:02:11,"The function should not be limited to accepting SPD matrices (or correlation matrices), we want to be able to plot any graph defined by its adjacency.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/img_plotting.py')"
28,issue_comment,441,nilearn,nilearn,lesteve,2015-02-19 22:13:25,"FYI I disabled coveralls automatic comments on PRs.
",nan,nan
48,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-19 22:42:29,"I think that the line below is more likely to confuse beginners.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
49,pull_request_commit_comment,441,nilearn,nilearn,banilo,2015-02-19 22:45:00,"In favor of a for loop, here too.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
50,pull_request_commit_comment,441,nilearn,nilearn,banilo,2015-02-19 22:47:56,"Maybe add another half-sentence on the used atlas because not knowing MSDL might complexify the example quite a bit.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
51,pull_request_commit_comment,441,nilearn,nilearn,banilo,2015-02-19 22:49:44,"in-line comments on s and c?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
52,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-19 22:55:33,"Is there a reason to use slice here? Using integer values for axis seem more natural to me.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
53,pull_request_commit_comment,441,nilearn,nilearn,bcipolli,2015-02-20 04:09:35,"Isn't `atlas_maps` a string or a `Nifti1Image`?  This line isn't working for me.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
54,pull_request_commit_comment,441,nilearn,nilearn,bcipolli,2015-02-20 04:48:47,"I would prefer these get changed to `size` and `color`, or to follow @GaelVaroquaux suggestion of eliminating the `nodes_kwargs` and making them meaningful parameters in the function interface.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
55,pull_request_commit_comment,441,nilearn,nilearn,bcipolli,2015-02-20 06:37:30,":+1: This check is preventing me from plotting interhemispheric connections only, for example.  I've commented it out locally, and the code still works like a champ:

![image](https://cloud.githubusercontent.com/assets/4072455/6282307/ad3e31d0-b887-11e4-88b6-9328155e9292.png)
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/img_plotting.py')"
37,issue_comment,441,nilearn,nilearn,bcipolli,2015-02-20 06:41:01,"@lesteve : is there an option / easy way to get a colorbar added to the plot?
",nan,nan
56,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-20 07:31:43,"Fair enough, I don't remember when in the process I got convinced that it had to be correlation/covariance matrices.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/img_plotting.py')"
29,issue_comment,441,nilearn,nilearn,lesteve,2015-02-20 07:44:31,"> @lesteve : is there an option / easy way to get a colorbar added to the plot?

Not at the moment I am afraid. It may be doable but I am not sure it should be part of this PR.
",nan,nan
5,issue_comment,441,nilearn,nilearn,lesteve,2015-02-20 08:01:33,"> node_kwargs / edge_kwargs is not a great API: it forces the user to 1) know the accepted kwargs for each of these, 2) build a dictionary. I would prefer if we could have specific arguments of the plot_connectome for the common cases, such as indeed, node color (argument could be ""node_color""), node size (argument could be ""node_size"").

OK I just wanted to make sure that all the plt.scatter/plt.plot functionalities were available. We can have the main useful arguments as parameters of the function like node_color and node_size and still keep node_kwargs and edge_kwargs for the additional ones.
",nan,nan
57,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-20 08:06:50,"good point I'll fix that.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
58,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-20 08:07:45,"> Is there a reason to use slice here?

None comes to mind so I can change it.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
6,issue_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-20 08:54:13,"> is there an option / easy way to get a colorbar added to the plot?

#379.
",nan,nan
59,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-20 08:56:33,"`s` and `c` are matplotlib standards. This is the first thing I would try.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
60,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-20 11:29:04,"We don't want to force our users to learn matplotlib for simple things. We need to start from the idea that our base users do not know anything about matplotlib.

Sent from my phone. Please forgive brevity and mis spelling

On Feb 20, 2015, 09:56, at 09:56, Alexandre Abraham notifications@github.com wrote:

> >  from nilearn.plotting import cm
> > 
> > +def plot_connectome(cov, atlas_maps, **kwargs):
> > -    """"""Plot connectome given a covariance matrix and atlas maps""""""
> > -    imgs = image.iter_img(atlas_maps)
> > -    regions_coords = np.array([
> > -        map(np.asscalar, plotting.find_xyz_cut_coords(img)) for img
> >   in imgs])
> > -    np.random.seed(42)
> > -    node_colors = np.random.rand(len(atlas_maps), 3)
> > -    plotting.plot_connectome(cov, regions_coords,
> > -                             nodes_kwargs={'s': 50, 'c':
> >   node_colors},
> 
> `s` and `c` are matplotlib standards. This is the first thing I would
> try.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/441/files#r25056268
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
7,issue_comment,441,nilearn,nilearn,lesteve,2015-02-20 13:27:44,"> > is there an option / easy way to get a colorbar added to the plot?
> 
> #379.

although related that's not exactly the same thing. Having said that the patch in #379 may just work for this use case because the threshod is 0. In any case I propose to tackle the colorbar once this first iteration on the connectome plotting is merged.
",nan,nan
8,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-20 16:17:53,"+1 for merging this before tackling color bar 

Sent from my phone. Please forgive brevity and mis spelling

On Feb 20, 2015, 14:27, at 14:27, ""Loïc Estève"" notifications@github.com wrote:

> > > is there an option / easy way to get a colorbar added to the plot?
> > 
> > #379.
> 
> although related that's not exactly the same thing. Having said that
> the patch in #379 may just work for this use case because the threshod
> is 0. In any case I propose to tackle the colorbar once this first
> iteration on the connectome plotting is merged.
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/441#issuecomment-75237427
",nan,nan
9,issue_comment,441,nilearn,nilearn,lesteve,2015-02-20 17:21:54,"OK I tackled most of the comments I think. Something I still want to do is
- [x] Have a nicer default so that the random colors code currently in plot_adhd_covariance.py is not necessary.
",nan,nan
10,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-20 17:29:51,"> OK I tackled most of the comments I think. Something I still want to do is
> 
>   • [ ] Have a nicer default so that the random colors code currently in
>     plot_adhd_covariance.py is not necessary.

What's wrong with just grey? Other option is that by default you put the
z coordinate as a node color. But I think that this will just confuse
users, and I suggest that by default there is a grey color.

For the example, you can make it prettier by plotting the index of the
node in the default ordering of the atlas.
",nan,nan
11,issue_comment,441,nilearn,nilearn,lesteve,2015-02-20 17:46:42,"> What's wrong with just grey?

Admittedly I have very little idea how people look at these plots but I assumed that at the very least you want to be able to identify a given node across the three views in which case having a slightly separate color for each node seems like a good idea.

If I understand your index suggestion correctly I think that is close to what I have in mind.
",nan,nan
12,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-20 19:19:12,"> Admittedly I have very little idea how people look at these plots but I
> assumed that at the very least you want to be able to identify a given
> node across the three views in which case having a slightly separate
> color for each node seems like a good idea.

That's not the way I usually work with these: the location in the brain
tells me enough. But I see your point.

> If I understand your index suggestion correctly I think that is close
> to what I have in mind.

Combined with some form of colorbar for nodes that links a color to a
name, it would be great. However, let's leave that for a second PR.
",nan,nan
13,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-21 16:03:58,"Is there a reason that this is still a WIP? Could this become an MRG?
",nan,nan
61,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-21 16:05:35,"I think that a for loop here would be better than a list comprehension.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
62,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-21 16:06:48,"I would rather avoid having a function, and directly use plot_connectome inlined.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
63,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-21 16:11:32,"I think that I would call this method ""_add_points"" (or ""_add_markers""), because those points may have some meaning or some use outside the case of plotting graphs.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
64,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-21 16:19:35,"Maybe these translation from node_color and node_size to arguments for scatter should be done in the plot_connectome function, and not here. The reason is that the notion of 'node' seems to me somewhat external to the function. It makes sense only when there are nodes and edges. I think that I would push for removing the term ""node"" from the code of this function.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
65,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-21 16:21:38,"I would call this function 'add_lines', and I would have it take as input arguments a list of (start_point, end_point). I would do the resolution of the adjacency matrix + coords to lines in the ""add_graph"" function.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
66,pull_request_commit_comment,441,nilearn,nilearn,banilo,2015-02-22 03:51:30,"Somewhat general comment: How about adding an option for a depth filter. E.g. when looking at the sagittal / medial glass brain, why not make it possible to not show the other / not directly looked at half of the brain? This should be easy to implement (re-filter the coordinate pools before scatter) and might be especially useful if many nodes are to be visualized.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
67,pull_request_commit_comment,441,nilearn,nilearn,banilo,2015-02-22 04:17:56,"""For a maskED array""?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
68,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-22 13:01:47,"The name of the function is also misleading. We should have a function named `find_poi` or so. And it could handle 3D and 4D imgs so that a loop is not necessary.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
69,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-22 13:03:05,":+1: for `_add_markers`
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
70,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-22 13:04:46,"My feeling is YAGNI.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
71,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-22 13:05:42,":+1: 
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
72,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-22 13:08:31,"`adjacency_matrix = adjacency_matrix.filled(0.)`
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
73,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-22 13:12:05,"This should be an explicit kwarg I think.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
74,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-23 07:59:21,"The thing is that this function is used twice, one for the GroupSparseCovariance and one for the GraphLasso. Also there is already a function to plot the matrices in this example.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
75,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-23 08:04:40,"> The thing is that this function is used twice, one for the
> GroupSparseCovariance and one for the GraphLasso.

Yes, but the only thing that needs to be called twice is the call to
plot_connectome. The rest is common.

> Also there is already a function to plot the matrices in this example.

I don't like that either :).
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
76,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-23 08:20:43,"> I think that a for loop here would be better than a list comprehension.

How so? Are you saying you want something like this:

``` python
region_coords = []

for img in imgs:
    region_coords.append(plotting.find_xyz_cut_coords(img))

region_coords = np.array(region_coords)
```

> The name of the function is also misleading. We should have a function named find_poi

maybe in a different issue?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
77,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-23 08:23:06,"> My feeling is YAGNI.

Agreed maybe in a further iteration.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
78,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-23 08:49:49,"> > Also there is already a function to plot the matrices in this example.
> 
> I don't like that either :).

Given that we advise people to install anaconda, they shoulds have statsmodel installed. We could use statsmodel function for that.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
14,issue_comment,441,nilearn,nilearn,lesteve,2015-02-24 09:50:48,"I think I tackled all the comments. Here is how the connectome plots look in plot_adhd_covariance.py:

![group_sparse_covariance_connectome](https://cloud.githubusercontent.com/assets/1680079/6346731/b9a535a2-bc12-11e4-8b25-87bd13904aa2.png)

![graph_lasso_connectome](https://cloud.githubusercontent.com/assets/1680079/6346737/bd559494-bc12-11e4-9838-8935261cdbee.png)

I still have to:
- [x] fix the documentation rst now that the plot_adhd_covariance plots have changed
- [x] possibly add plot_connectome example to the plotting documentation
- [x] some inconsistency between nodes_ and node_ and the same with edges_ and edge_ to fix
",nan,nan
79,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 12:35:38,"I would put that below plot_stat_map: it's less likely to be what the user is looking for.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(18, '', u'doc/building_blocks/plotting.rst')"
80,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 12:39:53,"I would replace the ""zip(*...)"" by ""marker_coods_2d.T"" which will do the same thing given that marker_coords_2d is an array.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
81,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 12:41:04,"Same remark: I would use transposition rather than zip
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
82,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 12:42:30,"Tell us which half you are using: the upper half, or the lower half?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(167, '', u'nilearn/plotting/displays.py')"
83,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 12:44:33,"Any reason that you are not using ""50"" as a default in the function signature? I think that it would make it easier for the user to understand this parameter.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
84,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-24 12:51:18,"Shouldn't we allow list of tuples and call `np.asarray`?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
85,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-24 12:54:16,"Use `filled`
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
86,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-24 12:57:10,"I am actually checking that the matrix is symmetric (and then using the lower half) at the moment.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(167, '', u'nilearn/plotting/displays.py')"
87,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-24 12:57:14,"I usually use masked mask if it is really needed. There, you can just set those values to 0.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/img_plotting.py')"
88,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 12:59:12,"> I am actually checking that the matrix is symmetric (and then using the lower
> half) at the moment.

OK. Don't put a tolerance on the check that is smaller than 1e-3 \* vmax,
because the eye won't tell a difference anyhow.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(167, '', u'nilearn/plotting/displays.py')"
89,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-24 13:00:00,"The main reason is something I have been mildly annoyed by: defaults duplicated at different levels. In this particular case I would need to define node_size default both in img_plotting.plot_connectome and displays.OrthoProjector.add_graph.

I have to admit I don't think the None solution is fully satisfying.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
90,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 13:15:11,"Right, it makes your life easier as a developper, but it makes the user's
life harder. Here, I think our focus should be to make the user's life
easier.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
91,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 13:17:06,"> Somewhat general comment: How about adding an option for a depth filter. E.g.
> when looking at the sagittal / medial glass brain, why not make it possible to
> not show the other / not directly looked at half of the brain? This should be
> easy to implement (re-filter the coordinate pools before scatter) and might be
> especially useful if many nodes are to be visualized.

I think that you are unto something very interesting. I usually find that
plotting only half an hemisphere can be very useful. I'd rather go for
that than something more general, which will be harder to use for the end
user, and harder for us to code.

Let's postpone that in a second step.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
92,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 13:18:27,"> The name of the function is also misleading. We should have a function named
> find_poi or so.

I agree. I am +1 for renaming if there are good suggestion.

> And it could handle 3D and 4D imgs so that a loop is not necessary.

I am -0. I am afraid of errors in user code going unnoticed until too
late to give a good error message.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
93,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 13:20:28,"> Given that we advise people to install anaconda, they shoulds have statsmodel
> installed. We could use statsmodel function for that.

No. I've just had last week someone who was using Python in 3D slicer.
Installing any package was quite a lot of work for that person. I am
still trying to limit as much as possible the dependencies, including in
the examples.

However, in a later work, I think that we could integrate such function
in nilearn.plotting. But later.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
15,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 13:21:12,"> I think I tackled all the comments. Here is how the connectome plots look in plot_adhd_covariance.py:

It looks just beautiful. I think that I want it added on the first page.
",nan,nan
94,pull_request_commit_comment,441,nilearn,nilearn,banilo,2015-02-24 13:25:11,"wasn't this supposed to become a for-loop for the sake of simplicity?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
95,pull_request_commit_comment,441,nilearn,nilearn,banilo,2015-02-24 13:27:00,"My subjective feeling: we mostly use the older formatted printing with %. Should this be (roughly) consistent across examples?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
16,issue_comment,441,nilearn,nilearn,lesteve,2015-02-24 13:53:28,"> It looks just beautiful. I think that I want it added on the first page.

Any preference between GroupSparseCovariance and GraphLasso? Also other parameters could be tweaked if needed.
",nan,nan
96,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-24 13:57:14,"I am now wondering what was the percentage relative to when specifying edge_threshold as a percentage. At the moment it is a percentage of the number of possible node edges i.e. n \* (n - 1) / 2 if the adjacency matrix is of shape (n, n). I am leaning towards changing that to be a percentage of non zero edges. To spell it out even more, ""25%"" would mean I want to keep 75% of the non-zero edges with the highest absolute value.

Any further thoughts or objections?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(180, '', u'nilearn/plotting/displays.py')"
97,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-24 13:57:26,"Hmmm. It would be cool to have a sagittal view for the left hemisphere, another one for the right hemisphere, and then an axial view for the connexions between both of them.

Regarding depth, it would be nice to be able to change the size of the nodes depending on the depth so that further nodes are smaller. We can't do that yet because the depth depends on the view (or we should do manually the 3 slices).

But let's merge that first.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
98,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-24 14:15:57,"Done.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(18, '', u'doc/building_blocks/plotting.rst')"
99,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-24 14:18:03,"Feel free to create an issue about that. If we had to chose one I'd be personally in favour of using `.format` rather than `%`.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
100,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-24 14:19:52,"I am afraid I don't see how a for loop is simpler.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
101,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 14:39:04,"> Hmmm. It would be cool to have a sagittal view for the left hemisphere,
> another one for the right hemisphere, and then an axial view for the
> connexions between both of them.

Yes. I can see a design where there would be an Axes that projects to the
left hemisphere and one to the right. As in 'R', 'L'. We'll brain storm
about this later.

> Regarding depth, it would be nice to be able to change the size of the
> nodes depending on the depth so that further nodes are smaller. We
> can't do that yet because the depth depends on the view (or we should
> do manually the 3 slices).

+1 for having an option 'node_color=""depth""'. In a later PR.

Do you want to add 2 enhancements tickets for these features? I think
that they are good ideas.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
102,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 14:40:15,"> Shouldn't we allow list of tuples and call np.asarray?

+1. People will get it wrong elsewhere.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
103,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 14:44:49,"> My subjective feeling: we mostly use the older formatted printing with %.
> Should this be (roughly) consistent across examples?

I think that we should use 'format'. It's the new recommended way of
doing things. I am myself not doing it out of habit, because I started
doing Python before it existed, but that's a bad thing.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
17,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 14:46:05,"> Any preference between GroupSparseCovariance and GraphLasso? Also other
> parameters could be tweaked if needed.

GraphLasso, and a threshold much higher (in terms of percentile)
",nan,nan
104,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 14:47:51,"> Any further thoughts or objections?

I think that I would like the percentage to be the filling factor of the
graph. If I say threshold=""80%"", I want to see "".2 \* n (n - 1) / 2""
edges.

That way, we don't have an unstable behavior depending on wether people
threshold the matrices or not.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(180, '', u'nilearn/plotting/displays.py')"
105,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 14:48:50,"> I am afraid I don't see how a for loop is simpler.

It's a construct that more people know. For someone who doesn't know
Python, the list comprehension is a weird thing.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
106,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:17:00,"I usually try to refrain from making such cosmetic changes, if I am not touching the corresponding lines of code, because they make merging and rebasing hard.

Don't change it back, though.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(31, '', u'nilearn/plotting/displays.py')"
107,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:19:49,"Same remark on the default value of the argument: I would prefer if it appears in the function signature.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
108,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:24:09,"Rather than ""n"" in the error message, could you here be explicit about its value (and mentioned where the value comes from), something like 'Invalid shape for node_coords: you passed in an adjacency matrix of shape (%i, %i), therefore the shape of node_coords should be (%i, 3) while it is %r'
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
109,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:25:43,"Please decrease the tolerance here. We don't want a user with code with slight numerical stability to have this code bailing on him: his numerical instabilities are his problem, not ours. I would use an rtol of 1e-3.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
110,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:28:00,"Nice!
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(256, '', u'nilearn/plotting/displays.py')"
111,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:29:52,"Doesn't the fast_abs_percentile already do the abs? In other words, can't you just pass it simply lower_diagonal_values?
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/displays.py')"
112,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:35:22,"I would avoid having ""**kwargs"" and use a ""glass_brain_kwargs"" rather, as it is not possible to guess from reading the function signature and docstring what these do.

Also, do you really need these kwargs? I have the feeling that the usecases for them will be minor, and that advanced users that want to tweak everything should rather instanciate a glass brain and use the methods of the corresponding object.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/img_plotting.py')"
113,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:36:36,"I would put 'output_file' and 'display_mode', 'title' and 'annotate' before 'edge_kwargs' and 'node_kwargs': I think that these are more important for end-users.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/img_plotting.py')"
114,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:38:51,"For a minor speedup, you can remove the title here: you have already tested it earlier.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'nilearn/plotting/tests/test_img_plotting.py')"
18,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 15:39:57,"I have no other comments than the one I have just made on the code. This is almost ready to merge! Bravo
",nan,nan
115,pull_request_commit_comment,441,nilearn,nilearn,AlexandreAbraham,2015-02-24 16:01:29,"Now that we have `iter_img`, I would do:
`atlas_regions_coords = map(plotting.find_xyz_cut_coords, iter_img(atlas_imgs))`
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
116,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-24 16:02:20,"> Now that we have iter_img, I would do:
> atlas_regions_coords = map(plotting.find_xyz_cut_coords, iter_img(atlas_imgs))

Avoid map: on non advanced programmers it is incomprehensible.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(None, '', u'examples/connectivity/plot_adhd_covariance.py')"
117,pull_request_commit_comment,441,nilearn,nilearn,lesteve,2015-02-24 17:23:40,"OK this is the current behaviour then.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(180, '', u'nilearn/plotting/displays.py')"
19,issue_comment,441,nilearn,nilearn,lesteve,2015-02-25 08:18:50,"> GraphLasso, and a threshold much higher (in terms of percentile)

How does this one look (edge_threshold=95%)
![graph_lasso_connectome_95percent](https://cloud.githubusercontent.com/assets/1680079/6367093/f33e1650-bcce-11e4-948c-bf1169f83376.png)

For comparison this one is with edge_threshold=90%
![graph_lasso_connectome_90percent](https://cloud.githubusercontent.com/assets/1680079/6367100/fb89bc74-bcce-11e4-859a-46f2ac827718.png)

> I think that I want it added on the first page.
> Should it replace the glass brain as the first carousel item on the website front page?
",nan,nan
20,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-25 08:29:27,"The percentile 90 looks great! 

Sent from my phone. Please forgive brevity and mis spelling

On Feb 25, 2015, 09:18, at 09:18, ""Loïc Estève"" notifications@github.com wrote:

> > GraphLasso, and a threshold much higher (in terms of percentile)
> 
> How does this one look (edge_threshold=95%)
> ![graph_lasso_connectome_95percent](https://cloud.githubusercontent.com/assets/1680079/6367093/f33e1650-bcce-11e4-948c-bf1169f83376.png)
> 
> For comparison this one is with edge_threshold=90%
> ![graph_lasso_connectome_90percent](https://cloud.githubusercontent.com/assets/1680079/6367100/fb89bc74-bcce-11e4-859a-46f2ac827718.png)
> 
> > I think that I want it added on the first page.
> > Should it replace the glass brain as the first carousel item on the
> > website front page?
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/441#issuecomment-75921817
",nan,nan
21,issue_comment,441,nilearn,nilearn,lesteve,2015-02-25 13:43:23,"OK, tackled all the comments I think
",nan,nan
118,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-25 13:48:49,"I think that you have an indentation problem here.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(163, '', u'nilearn/plotting/displays.py')"
119,pull_request_commit_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-25 13:49:41,"Maybe I am wrong. Could you just check that the docstrings render well.
",7c6bc0f85143a5947f99d29699b86a76c3f8e00a,"(163, '', u'nilearn/plotting/displays.py')"
22,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-25 13:50:28,"If the docstrings render well, +1 for merge.
",nan,nan
23,issue_comment,441,nilearn,nilearn,banilo,2015-02-26 08:07:38,":beers: 
",nan,nan
24,issue_comment,441,nilearn,nilearn,GaelVaroquaux,2015-02-26 08:16:34,"Yey! ! ! 

Sent from my phone. Please forgive brevity and mis spelling

On Feb 26, 2015, 09:07, at 09:07, Danilo Bzdok notifications@github.com wrote:

> :beers: 
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/441#issuecomment-76137473
",nan,nan
25,issue_comment,441,nilearn,nilearn,amadeuskanaan,2015-03-03 14:15:37,"FYI.. connectome plotter fails if the matrix has nan's ... 
returns ''ValueError: 'adjacency_matrix' should be symmetric''
",nan,nan
26,issue_comment,441,nilearn,nilearn,lesteve,2015-03-03 14:26:37,"Good point, thanks for reporting, would you mind opening a new issue about this problem?

FWIW you can work around the problem by either using np.nan_to_num or using a masked array to mask out the NaNs.
",nan,nan
27,issue_comment,441,nilearn,nilearn,amadeuskanaan,2015-03-03 14:33:27,"done.. and yes. works with 0's.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,488,nilearn,nilearn,AlexandreAbraham,2015-03-09 13:28:38,"Yeah, that seems great! Do you want to work on it for other datasets or should we merge it?
",nan,nan
6,issue_comment,488,nilearn,nilearn,banilo,2015-03-09 13:29:52,"> Do you want to work on it for other datasets or should we merge it?

Ok, good to know, thx. Please mrg this one already. I will do the rest en bloque.
",nan,nan
7,issue_comment,488,nilearn,nilearn,GaelVaroquaux,2015-03-09 13:39:43,"Thanks. This is super useful!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,511,nilearn,nilearn,GaelVaroquaux,2015-03-20 08:44:50,"Maybe I diagnosed the problem wrong (I was in a rush). Maybe the problem is that the colorbar breaks when the map is only made of zeros. 

Sent from my phone. Please forgive brevity and mis spelling

On Mar 20, 2015, 09:26, at 09:26, Danilo Bzdok notifications@github.com wrote:

> Related to #510
> 
> Has the works-on-my-machine certificate, but perhaps makes Travis
> break?
> You can view, comment on, or merge this pull request online at:
> 
>  https://github.com/nilearn/nilearn/pull/511
> 
> -- Commit Summary --
> - regressiontest for cb
> 
> -- File Changes --
> 
>    M nilearn/plotting/tests/test_img_plotting.py (8)
> 
> -- Patch Links --
> 
> https://github.com/nilearn/nilearn/pull/511.patch
> https://github.com/nilearn/nilearn/pull/511.diff
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/511
",nan,nan
6,issue_comment,511,nilearn,nilearn,GaelVaroquaux,2015-03-20 08:55:09,"> Maybe I diagnosed the problem wrong (I was in a rush). Maybe the problem is
> that the colorbar breaks when the map is only made of zeros.

Confirmed: I had a better look at the image on which I am getting this
problem, and its complete span (min and max) is zero.
",nan,nan
8,issue_comment,511,nilearn,nilearn,banilo,2015-03-20 09:45:16,"This avoids the crash, but the underlying question is: Doe sit make sense to show a colorbar in the first place, if the image data contains only a single value, such as zero?
",nan,nan
7,issue_comment,511,nilearn,nilearn,GaelVaroquaux,2015-03-20 10:44:20,"I think it's fine. We absolutely want to avoid the crash, for the user's comfort. 

Sent from my phone. Please forgive brevity and mis spelling

On Mar 20, 2015, 10:45, at 10:45, Danilo Bzdok notifications@github.com wrote:

> This avoids the crash, but the underlying question is: Doe sit make
> sense to show a colorbar in the first place, if the image data contains
> only a single value, such as zero?
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/511#issuecomment-83970018
",nan,nan
9,issue_comment,511,nilearn,nilearn,banilo,2015-03-20 11:53:20,"> I think it's fine.

Ok, cleaned up.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,510,nilearn,nilearn,banilo,2015-03-20 07:33:50,"Ok guilty, I will try to fix that today.
",nan,nan
3,issue_comment,510,nilearn,nilearn,GaelVaroquaux,2015-03-20 07:35:32,"Thanks! Can you also add a smoke test please.
",nan,nan
5,issue_comment,510,nilearn,nilearn,AlexandreAbraham,2015-03-20 08:24:48,"Works for me and for @banilo, cannot reproduce... @banilo, can you add a test and see if it passes travis?
",nan,nan
6,issue_comment,510,nilearn,nilearn,lesteve,2015-03-26 08:16:18,"Closed via #511.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,486,nilearn,nilearn,banilo,2015-03-05 18:37:30,"Should I take care of this?
",nan,nan
4,issue_comment,486,nilearn,nilearn,lesteve,2015-04-14 10:53:58,"> does not use the standard nilearn_data location to fetch the data but the current working directory instead (not reproducible on my side)

I can reproduce the problem even when NILEARN_DATA is set. Here is the output:
- NILEARN_DATA no set:

``` python

In [1]: from nilearn import datasets

In [2]: datasets.fetch_harvard_oxford('cort-maxprob-thr25-2mm', verbose=10)
Dataset search paths: ['', '', '/home/le243287/nilearn_data']

Dataset created in harvard_oxford

Downloading data from https://www.nitrc.org/frs/download.php/7363/HarvardOxford.tgz ...
Downloaded 7879863 of 7879863 bytes (100.00%,    0.0s remaining)  
...done. (13 seconds, 0 min)
Extracting data from harvard_oxford/dc9b313e598e25514deb51b257475841/HarvardOxford.tgz...
   ...done.

```
- NILEARN_DATA set to /tmp:

``` python
In [1]: from nilearn import datasets

In [2]: datasets.fetch_harvard_oxford('cort-maxprob-thr25-2mm', verbose=10)
Dataset search paths: ['', '', '/tmp', '/home/le243287/nilearn_data']

Dataset created in harvard_oxford

Downloading data from https://www.nitrc.org/frs/download.php/7363/HarvardOxford.tgz ...
Downloaded 7879863 of 7879863 bytes (100.00%,    0.0s remaining)  
...done. (9 seconds, 0 min)
Extracting data from harvard_oxford/dc9b313e598e25514deb51b257475841/HarvardOxford.tgz...
   ...done.
```

In both cases for some reason `''` is inserted in the dataset search paths twice before the usual paths.
",nan,nan
5,issue_comment,486,nilearn,nilearn,AlexandreAbraham,2015-04-14 11:08:53,"OK, this is related to FSLDIR resolution. This is an easyfix
",nan,nan
6,issue_comment,486,nilearn,nilearn,lesteve,2015-04-15 07:47:19,"> Should I take care of this?

@banilo would make sense since you have worked on this fetcher in the past IIRC.
",nan,nan
7,issue_comment,486,nilearn,nilearn,AlexandreAbraham,2015-04-17 07:26:37,"If somebody could take care of that for 0.1.3 release, that would be great!
",nan,nan
8,issue_comment,486,nilearn,nilearn,salma1601,2015-06-01 07:40:46,"fetch_harvard_oxford reloads or not my existant atlas, depending on what my current working directory is! 
",nan,nan
9,issue_comment,486,nilearn,nilearn,AlexandreAbraham,2015-06-01 07:44:21,"Yes, this is a side effect of the different quirks. I'll try to set up a quickfix today.
",nan,nan
10,issue_comment,486,nilearn,nilearn,salma1601,2015-06-01 07:47:13,"Ok thanks !
",nan,nan
11,issue_comment,486,nilearn,nilearn,AlexandreAbraham,2015-06-22 15:40:30,"Fixed by #597.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,pull_request_commit_comment,485,nilearn,nilearn,bcipolli,2015-03-04 22:42:11,"If you set `env_vars` to `[]` by default, and this could be shortened to:

``` python
        for env_var in env_vars:
            env_data = os.getenv(env_var, '')
            paths.extend(env_data.split(':'))
```
",42a30ee7575a0cf7484d2abbf452094fe16961b7,"(None, '', u'nilearn/datasets.py')"
7,pull_request_commit_comment,485,nilearn,nilearn,AlexandreAbraham,2015-03-04 22:48:49,"Nice code factorization ;)
",42a30ee7575a0cf7484d2abbf452094fe16961b7,"(None, '', u'nilearn/datasets.py')"
5,issue_comment,485,nilearn,nilearn,GaelVaroquaux,2015-03-05 05:59:37,"Good job. Thanks!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,484,nilearn,nilearn,AlexandreAbraham,2015-03-04 22:06:13,"Bug spotted and fixed. Adding a non-regression test will be a bit more difficult.
",nan,nan
4,issue_comment,484,nilearn,nilearn,GaelVaroquaux,2015-03-05 05:44:42,"Thanks! That was fast
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,483,nilearn,nilearn,bcipolli,2015-03-05 16:29:21,"If you're looking for someone to proofread / verify layout / images, I'd be happy to take a look.  I would just need info on how to convert these to HTML (is it as simple as running `make doc`?).
",nan,nan
6,issue_comment,483,nilearn,nilearn,GaelVaroquaux,2015-03-05 16:32:18,"> If you're looking for someone to proofread / verify layout / images, I'd be
> happy to take a look.

Awesome. That would be super helpful!

> I would just need info on how to convert these to HTML (is it as simple
> as running make doc?).

Actually 'make html' is better, as it will render the images (but it will
also take a while).
",nan,nan
7,issue_comment,483,nilearn,nilearn,bcipolli,2015-03-05 16:37:02,"Hmmm, `make html` isn't recognized (`make: *** No rule to make target`html'.  Stop.`)

Perhaps `doc` includes `html`? Here's what I see in the makefile:

```
.PHONY : doc
doc:
    make -C doc html
```
",nan,nan
8,issue_comment,483,nilearn,nilearn,GaelVaroquaux,2015-03-05 16:38:21,"Ah, yes, we have a shorthand in the main Makefile. I keep forgetting
this, and cd to the docs directory and run ""make html"" there.
",nan,nan
15,pull_request_commit_comment,483,nilearn,nilearn,bcipolli,2015-03-05 20:14:22,"There are a number of files deleted without replacement.  Just wanted to check that this is intended (rather than leaving those files there until the documentation is improved).
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(27, '', u'doc/building_blocks/index.rst')"
9,issue_comment,483,nilearn,nilearn,bcipolli,2015-03-05 20:24:27,"@GaelVaroquaux I really the idea of what you're doing, but I'm finding it quite challenging to review the PR because I'm not sure where content has been added vs. moved vs. deleted.    As far as I can tell, the connectivity documentation is much greater, but info about the rest (MVPA, decoding, etc.) is now hidden / deleted.

I don't have the cycles to parse it all myself; would you mind to give a brief summary of where things are at:  specifically, I just want to know (very briefly) what's been deleted vs. moved vs. added.

For others, here's the big structural change (as far as I understood) 

## Now:

![image](https://cloud.githubusercontent.com/assets/4072455/6513797/77a37700-c332-11e4-8e91-a88a66185110.png)

## Before:

![image](https://cloud.githubusercontent.com/assets/4072455/6513710/dc1e398c-c331-11e4-811e-5478f35ad1cf.png)
",nan,nan
16,pull_request_commit_comment,483,nilearn,nilearn,lesteve,2015-03-11 14:37:06,"we probably don't want these changes in the doc Makefile
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(None, '', u'doc/Makefile')"
17,pull_request_commit_comment,483,nilearn,nilearn,GaelVaroquaux,2015-03-11 14:38:07,"> we probably don't want these changes in the doc Makefile

Oops
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(None, '', u'doc/Makefile')"
18,pull_request_commit_comment,483,nilearn,nilearn,AlexandreAbraham,2015-03-12 12:24:54,"Are 2 AUTHORS files needed?
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(5, '', u'AUTHORS.rst')"
19,pull_request_commit_comment,483,nilearn,nilearn,AlexandreAbraham,2015-03-12 12:26:52,"I am not convinced by this change as ""Download"" is a kind of universal convention now.
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(5, '', u'doc/themes/nilearn/layout.html')"
10,issue_comment,483,nilearn,nilearn,AlexandreAbraham,2015-03-12 12:28:44,"Apart from Loic's remark, I see no technical caveat in this PR. As it is too big to be reviewed entirely, I suggest that we merge it and propose small rectifications by opening issues / PR afterward.
",nan,nan
20,pull_request_commit_comment,483,nilearn,nilearn,GaelVaroquaux,2015-03-12 12:31:55,"> I am not convinced by this change as ""Download"" is a kind of universal
> convention now.

But we are not providing download links (although we should be).
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(5, '', u'doc/themes/nilearn/layout.html')"
21,pull_request_commit_comment,483,nilearn,nilearn,lesteve,2015-03-12 15:11:46,"I guess you want both an author page on nilearn github home page and one in the doc website.

Small technicality: one is actually copied into the other during the sphinx generation, never remember which one.
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(5, '', u'AUTHORS.rst')"
11,issue_comment,483,nilearn,nilearn,lesteve,2015-03-12 15:12:41,"> Apart from Loic's remark, I see no technical caveat in this PR. As it is too big to be reviewed entirely, I suggest that we merge it and propose small rectifications by opening issues / PR afterward.

:+1: 

Also there is a merge conflict to fix (probably one of the example I changed slightly recently after looking at landscape.io reports)
",nan,nan
12,issue_comment,483,nilearn,nilearn,AlexandreAbraham,2015-03-13 12:58:26,"> Also there is a merge conflict to fix (probably one of the example I changed slightly recently after looking at landscape.io reports)

You'll do 100 push-ups for that blasphemy!
",nan,nan
22,pull_request_commit_comment,483,nilearn,nilearn,lesteve,2015-03-13 15:16:16,"you probably should leave doc/Makefile unmodified
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(None, '', u'doc/Makefile')"
23,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:27:02,"""other sections.""?
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(16, '', u'doc/building_blocks/index.rst')"
24,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:30:27,"General: eg versus e.g. is not consistent throughout the doc
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(9, '', u'doc/connectivity/connectome_extraction.rst')"
25,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:32:52,"""brain interactions"" appears to be an unusual phrasing to me.
Alternative:
- functional coupling
- mutual influence
- reciprocal communication/interaction
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(10, '', u'doc/connectivity/connectome_extraction.rst')"
26,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:35:57,"Generell: I learned that it always should be ""et al."", that is, with the point at the end (=et alii)

http://fr.wikipedia.org/wiki/Et_al.
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(21, '', u'doc/connectivity/connectome_extraction.rst')"
27,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:38:56,"perhaps ""BOLD signals""
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(32, '', u'doc/connectivity/connectome_extraction.rst')"
34,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:40:35,"- mention that non-directional
- in direct connections (i.e., influence by third-party sources)
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(35, '', u'doc/connectivity/connectome_extraction.rst')"
28,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:43:16,"grammar: word order
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(37, '', u'doc/connectivity/connectome_extraction.rst')"
29,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:43:29,"""Raw covariance matrices""?
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(36, '', u'doc/connectivity/connectome_extraction.rst')"
30,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:44:02,"dense (i.e., many/all connections strengths are non-zero)
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(37, '', u'doc/connectivity/connectome_extraction.rst')"
31,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:47:46,"align ie/i.e. with eg/e.g. throughout doc
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(44, '', u'doc/connectivity/connectome_extraction.rst')"
32,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:49:20,"""It gives"" is a Frenchism
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(45, '', u'doc/connectivity/connectome_extraction.rst')"
33,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:50:35,"sentence too long -> cut into 2
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(46, '', u'doc/connectivity/connectome_extraction.rst')"
35,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 16:55:21,"lose this comma or add the final one for this inclusion
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(51, '', u'doc/connectivity/connectome_extraction.rst')"
36,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:01:40,"inconsistency: inverse?covariance matrix
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(63, '', u'doc/connectivity/connectome_extraction.rst')"
37,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:03:07,"There does not seem to be mentioned why sparse is better (regarding interpretation) and what it looks like (regarding numbers)
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(50, '', u'doc/connectivity/connectome_extraction.rst')"
38,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:04:34,"either without ""scheme"" or add article
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(96, '', u'doc/connectivity/connectome_extraction.rst')"
39,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:23:00,"""complete analysis script""?
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(101, '', u'doc/connectivity/connectome_extraction.rst')"
40,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:29:31,"""each subject""
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(123, '', u'doc/connectivity/connectome_extraction.rst')"
41,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:30:06,"""For this"" might be a frenchism

""To this end""?
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(126, '', u'doc/connectivity/connectome_extraction.rst')"
42,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:33:22,"""group analysis across multiple subjects"" -> tautological
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(144, '', u'doc/connectivity/connectome_extraction.rst')"
43,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:33:49,"pretty long and complicated sentence
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(148, '', u'doc/connectivity/connectome_extraction.rst')"
44,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:36:47,"repetition of ""such""
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(152, '', u'doc/connectivity/connectome_extraction.rst')"
45,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:37:28,"replace ""sparsity"" by something more plastic, e.g.. ""less intertwined/parsimonious connectivity structure/pattern""
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(153, '', u'doc/connectivity/connectome_extraction.rst')"
46,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:38:25,"corresponding to one subject
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(194, '', u'doc/connectivity/connectome_extraction.rst')"
47,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:39:37,"grammar: ""from all subjects taken together""?
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(201, '', u'doc/connectivity/connectome_extraction.rst')"
48,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:40:44,"signalS
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(67, '', u'doc/connectivity/functional_connectomes.rst')"
49,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:41:14,"""all the important parameters"" -> not explicit enough
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(70, '', u'doc/connectivity/functional_connectomes.rst')"
50,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 17:44:56,"""Time-series (extraction)""
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(123, '', u'doc/connectivity/functional_connectomes.rst')"
51,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:24:05,"""topographical definition""
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(129, '', u'doc/connectivity/functional_connectomes.rst')"
52,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:26:52,"notably -> particularly due to ...
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(130, '', u'doc/connectivity/functional_connectomes.rst')"
53,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:28:12,"and interindividual variability
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(131, '', u'doc/connectivity/functional_connectomes.rst')"
54,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:29:57,"signals based on...
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(150, '', u'doc/connectivity/functional_connectomes.rst')"
55,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:33:11,"perhaps it's me, but ""full example"" appear wierd to me, ""comprehensive/hands-on example?""
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(174, '', u'doc/connectivity/functional_connectomes.rst')"
56,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:47:35,"sudden switch to correlation matrix might be confusing
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(181, '', u'doc/connectivity/functional_connectomes.rst')"
57,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:49:56,"when (temporal) -> if (conditional)
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(194, '', u'doc/connectivity/functional_connectomes.rst')"
58,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:54:51,"neuroimaging data (structural/functional MRI and PET)
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(44, '', u'doc/introduction.rst')"
59,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:55:47,"cf. above
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(99, '', u'doc/introduction.rst')"
60,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:56:49,"is concerned with
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(119, '', u'doc/introduction.rst')"
61,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:57:40,"label -> for example different experimental conditions or healthy versus diseased participant data
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(121, '', u'doc/introduction.rst')"
62,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 18:58:29,"age or symptom severity
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(127, '', u'doc/introduction.rst')"
63,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 19:01:24,":-)

I know you like that, but isn't this use of ""stack"" somewhat colloquial?
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(166, '', u'doc/introduction.rst')"
64,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 19:02:09,". instead of ,
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(266, '', u'doc/introduction.rst')"
65,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 19:02:55,"grammar: word order
grammar: ""as input"" without an
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(268, '', u'doc/introduction.rst')"
66,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 19:05:28,"To loop over...
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(312, '', u'doc/introduction.rst')"
67,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 19:06:04,"cf. above
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(365, '', u'doc/introduction.rst')"
68,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 19:07:38,"not true in neurophilosophy
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(42, '', u'doc/manipulating_visualizing/data_preparation.rst')"
69,pull_request_commit_comment,483,nilearn,nilearn,banilo,2015-03-15 19:11:47,"...atlas derived from the resting-state
",eac2e1e2524dfd2535986a1b2e04ed4aefbe95d5,"(2, '', u'examples/connectivity/plot_probabilistic_atlas_extraction.py')"
13,issue_comment,483,nilearn,nilearn,lesteve,2015-03-16 12:32:29,"I have fixed the remaining merge conflicts in https://github.com/lesteve/nilearn/tree/GaelVaroquaux-doc_rework. I propose we merge this, either by @GaelVaroquaux force pushing into his PR branch or me doing it manually and pushing into master, and tackle the comments in subsequent PRs.
",nan,nan
14,issue_comment,483,nilearn,nilearn,lesteve,2015-03-17 10:27:46,"For completeness I merged this one by hand using the branch listed above. Further improvements are more than welcome as new PRs.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-03-04 01:14:03,"> we should have a zip file for fetch_adhd(n_subjects=1) to download only one subject.

What is doable:
- split every subject in a single file
- create another fetcher for ADHD versions preprocessed by the neurobureau. They have 200 subjects and provide directly timeseries for given atlases

> fetch_habxy(n_subjects=1) should download as little as posible: no stimuli and only 1 subject.

This is what `fetch_haxby` does by default. Some masks are also downloaded by default but they are very small.
",nan,nan
4,issue_comment,481,nilearn,nilearn,bcipolli,2015-03-04 01:36:48,"Two of the examples use only one subject from the haxby dataset, but don't pass the `n_subjects=1` argument.  Seems this would be an issue as well.
",nan,nan
5,issue_comment,481,nilearn,nilearn,GaelVaroquaux,2015-03-04 06:58:50,"> Two of the examples use only one subject from the haxby dataset, but
> don't pass the n_subjects=1 argument. Seems this would be an issue as
> well.

I think that n_subjects=1 should be the default, based on my experience
teaching yesterday.
",nan,nan
6,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-04-15 12:32:46,"Shouldn't we postpone this one? We'll have no time to solve it before the release.
",nan,nan
7,issue_comment,481,nilearn,nilearn,GaelVaroquaux,2015-04-15 14:51:21,"> Shouldn't we postpone this one?

Yes, :-$
",nan,nan
8,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-04-15 15:16:31,"FYI, dividing ADHD in smaller chunks should not be difficult, I can at least do this one if you want.
",nan,nan
9,issue_comment,481,nilearn,nilearn,GaelVaroquaux,2015-06-09 18:12:28,"This issue is important. It is screwing up our workshop again. 
",nan,nan
10,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-06-09 19:33:40,"can you be more specific ? which dataset is problematic ?
",nan,nan
11,issue_comment,481,nilearn,nilearn,GaelVaroquaux,2015-06-09 19:39:49,"Haxby. We need to break it up in subjects and download only 1 subjects by default. 

Sent from my phone. Please forgive brevity and mis spelling

On Jun 9, 2015, 12:33, at 12:33, Alexandre Abraham notifications@github.com wrote:

> can you be more specific ? which dataset is problematic ?
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/481#issuecomment-110478512
",nan,nan
12,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-06-09 19:41:36,"This is already the case.
",nan,nan
13,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-06-09 19:45:21,"If you need one dataset to be broken into pieces or moved to nitrc, I can hack it right now. But I have to be sure to target the right ones ;).
",nan,nan
14,issue_comment,481,nilearn,nilearn,GaelVaroquaux,2015-06-09 20:51:47,"Don't hack anything. It not that urgent. For it to be beneficial we need to release. It won't happen today. 

Sent from my phone. Please forgive brevity and mis spelling

On Jun 9, 2015, 12:45, at 12:45, Alexandre Abraham notifications@github.com wrote:

> If you need one dataset to be broken into pieces or moved to nitrc, I
> can hack it right now. But I have to be sure to target the right ones
> ;).
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/481#issuecomment-110482987
",nan,nan
15,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-06-12 07:53:05,"See #605. If the mirroring system proposed in this PR is validated, I will be able to move on this issue.
",nan,nan
16,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-06-12 08:55:07,"See also #608. Used with the NiftiSpheresMasker, you get an atlas at no cost.
",nan,nan
17,issue_comment,481,nilearn,nilearn,banilo,2015-06-12 09:02:10,"+1 for increasing scalability of dataset fetchers
",nan,nan
18,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2015-07-06 17:07:44,"#637 make ADHD downloadable subject by subject.
",nan,nan
19,issue_comment,481,nilearn,nilearn,AlexandreAbraham,2016-06-07 22:01:30,"We broke down the datasets to the smallest chunks possible. I close this issue. Please re-open one for a specific dataset when you encounter a similar problem.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,480,nilearn,nilearn,AlexandreAbraham,2015-03-04 01:15:53,"Do you have a log of the crash? Something related to memory I guess. If the error cannot be catched (this is the case I guess) we should put a refernce to that issue somewhere so that people can google it.
",nan,nan
4,issue_comment,480,nilearn,nilearn,lesteve,2015-03-04 07:50:37,"MemoryError is the likely culprit. Off the top of my head, on Windows there is something like a 2GB limit on 32 bit processes, which is very likely to be exceeded by nilearn.
",nan,nan
5,issue_comment,480,nilearn,nilearn,GaelVaroquaux,2015-05-11 13:00:47,"Fixed by #581
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,435,nilearn,nilearn,eickenberg,2015-02-17 07:07:37,"@schwarty didn't you have a general openfmri downloader, which, if suitably
modularized, would be a good basis for this?

On Tuesday, February 17, 2015, Ben Cipollini notifications@github.com
wrote:

> I am looking at this dataset to run some of my own analyses on, and
> wondering if y'all would be interested to have a fetcher for this dataset.
> 
> Hanke, M., Baumgartner, F. J., Ibe, P., Kaule, F. R., Pollmann, S., Speck,
> O., ... & Stadler, J. (2014). A high-resolution 7-Tesla fMRI dataset from
> complex natural stimulation with an audio movie. Scientific Data, 1.
> http://www.nature.com/articles/sdata20143
> http://studyforrest.org/pages/access.html
> 
> This seems like a great dataset for using machine learning to discover
> structure. In fact, they ran a contest for best results so far, and the
> winner implements some algorithms that may be of interest.
> TUT’s researchers win real-life cognition contest
> 
> http://www.tut.fi/en/about-tut/news-and-events/tut-s-researchers-win-real-life-cognition-contest-p082305c2jKauppi
> J-P, Pajula J and Tohka J (2014) A versatile software package for
> inter-subject correlation based analyses of fMRI. Front. Neuroinform. 8:2.
> doi: 10.3389/fninf.2014.00002
> http://journal.frontiersin.org/article/10.3389/fninf.2014.00002/full
> 
> The data is available through a number of sources, so the fetcher for the
> dataset could also open access to others (through, for example,
> openfrmi.org)
> https://openfmri.org/dataset/ds000113
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/435.
",nan,nan
4,issue_comment,435,nilearn,nilearn,eickenberg,2015-02-17 09:58:08,"It is, there are images with several levels of preprocessing ranging from
raw bold via intra-subject aligned runs to warpings to a mean subject
template.

On Tue, Feb 17, 2015 at 10:56 AM, Alexandre Abraham <
notifications@github.com> wrote:

> Take also into account that data is not preprocessed.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/435#issuecomment-74642812.
",nan,nan
5,issue_comment,435,nilearn,nilearn,bcipolli,2015-02-17 14:34:14,"@GaelVaroquaux I did not have a simple example in mind.  My plan (for myself) is to explore the prize-winning ""inter-subject correlation"" analysis, to start.
",nan,nan
6,issue_comment,435,nilearn,nilearn,bcipolli,2015-02-17 15:37:14,"Perhaps one possibility, to keep a nice separation of essential vs optional things, is to have links to (external) nilearn extensions.  

That way, you don't have to maintain the code, but people like me can browse other examples (for example: if someone preprocessed datasets using nipype, then did machine learning in nilearn) and other code (like a generic openfrmi fetcher, if @schwarty has one or if I create one).

That would still take some maintenance, but I believe much less on your team, and potentially add a lot of value to users.
",nan,nan
7,issue_comment,435,nilearn,nilearn,bcipolli,2015-02-17 16:42:08,"OK.  One last question: is there a better place to ask questions like this, such as a mailing list?  Or should ideas/questions/suggestions be posted as github issues?
",nan,nan
8,issue_comment,435,nilearn,nilearn,bcipolli,2015-02-17 16:51:10,"Thanks @GaelVaroquaux !

@schwarty I plan to look at this later in the week; if you have any code for getting started on an OpenFMRI fetcher (or design considerations you think I should keep in mind), please let me know!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
26,pull_request_commit_comment,291,nilearn,nilearn,bthirion,2014-11-23 22:00:39,"I don't understand this part ?

Also, this functionality probably deserves a bit of narrative documentation: what is the use case ? 
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
27,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2014-11-24 11:39:01,"> I don't understand this part ?

I think that the name is bad.

> Also, this functionality probably deserves a bit of narrative documentation:
> what is the use case ?

Avoiding the bug we had in the anova haxby example :).
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
28,pull_request_commit_comment,291,nilearn,nilearn,AlexandreAbraham,2014-11-24 16:33:28,"> I think that the name is bad.
> +1
> 
> Avoiding the bug we had in the anova haxby example :).
> The bug was mainly due to the fact that the shape of the session mask was not checked. I think that the main advantage is to be able to apply a condition mask to the data without having to load them manually (and still delegate that to the NiftiMasker).

However, given that this is only used for transform, shouldn't it be a parameter for the transform function rather than for the Masker in general?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
29,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2014-11-24 16:35:44,"> However, given that this is only used for transform, shouldn't it be a
> parameter for the transform function rather than for the Masker in general?

Possible. The real argument is that it's data dependent (ie has a shape
in n_samples) thus giving it at build-time break cross validation.

Which tells us that sessions shouldn't be given at build time :$
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
30,pull_request_commit_comment,291,nilearn,nilearn,AlexandreAbraham,2014-11-24 17:20:06,"Exactly. We can even go further by saying that this is a form of sample extraction and that it could exist as its own object. Because, for exemple, when working on Haxby, maybe I would like to work first on face vs house and then cat vs chair.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
5,issue_comment,291,nilearn,nilearn,banilo,2014-11-27 10:05:41,"Thanks for your help!
a) I changed the mask name to ""mask_time"" in analogy to the ""mask_img"" argument -> better?
b) Am I right in understanding that we stick with passing the 4D mask to NiftiMasker directly instead of its transform function?
",nan,nan
31,pull_request_commit_comment,291,nilearn,nilearn,bthirion,2014-12-05 10:59:12,"You probably mean: Data processing ignores the mask-time arguments and takes into account the whole sequence of image.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
22,issue_comment,291,nilearn,nilearn,banilo,2015-01-14 09:37:37,"I promise to do it still some time today...

2015-01-14 10:36 GMT+01:00 Loïc Estève notifications@github.com:

> @banilo https://github.com/banilo could you look at the merge conflicts
> on this one?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/291#issuecomment-69890735.

## 

Viele Grüße,
Danilo
",nan,nan
23,issue_comment,291,nilearn,nilearn,banilo,2015-01-14 17:29:41,"fixed merge conflicts + restored empty lines at file end + squashed
",nan,nan
32,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-01-16 08:50:33,"It feels quite restrictive that mask_time has to be a list of bool, shouldn't it be something that can be passed into a numpy array indexing operation:

``` python
imgs = Nifti1Image(
    imgs.get_data()[..., np.asarray(mask_time)],
    imgs.get_affine())
```

For example, a slice object, a list of indices, etc...

Not sure what's the best way to make sure that mask_time can be used inside a indexing operation.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
33,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-01-16 08:53:33,"Why not, it's a design choice. Boolean arrays is however what naturally comes out of target/non-target label comparison operations.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
34,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2015-01-16 08:55:09,"Agreed with Loic. I wouldn't even call 'asarray' on it, so that it is
possible to pass Slice objects.

And do we want to call it 'mask_time' or 'time_mask' :)
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
35,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-01-20 20:01:02,"> And do we want to call it 'mask_time' or 'time_mask' :)

I went for 'mask_time' in analogy to 'mask_img', to allude to the 4D-3D complementary. Should we change that?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
36,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-01-20 20:02:07,"> Agreed with Loic. I wouldn't even call 'asarray' on it, so that it is
> possible to pass Slice objects.

Can't we combine this with Loics ongoing indexing/slicing PR?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
37,pull_request_commit_comment,291,nilearn,nilearn,bthirion,2015-01-20 21:56:37,"Indeed, it is unclear for me what are the use cases addressed here that are not also addressed in the indexing/slicing PR ?
@banilo, do you have any example to motivate it ?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
38,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2015-01-20 22:01:36,"> Indeed, it is unclear for me what are the use cases addressed here that
> are not also addressed in the indexing/slicing PR ?

The indexing/slicing PR does make things much easier. However, suppose
that you want, eg to remove the 3 first volumes. With Danilo's PR, it is
trivial to do this in a pipeline, in distributed computing. Manually
using slicing would require more work.

However, the slicing PR should be merged, and then this PR updated to use
it.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
39,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-01-20 22:06:25,"A practical use case would be sub-selection as part of some sklearn-pipeline. Using this PR, memory is safed by avoiding creation of a tempory (sliced) nifti to pass on to the masker (index is provided at the time of masker instance creation). Just having idexing/slicing from Loic's PR cannot avoid this in a pipeline setting. ...I think.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
40,pull_request_commit_comment,291,nilearn,nilearn,bthirion,2015-01-20 22:08:39,"All right, thanks.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
41,pull_request_commit_comment,291,nilearn,nilearn,AlexandreAbraham,2015-01-20 22:15:05,">  Just having idexing/slicing from Loic's PR cannot avoid this in a pipeline setting. ...I think.

You have the exact same behavior if you use Loïc's PR and a NiftiMasker (and do the loop yourself).
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
42,pull_request_commit_comment,291,nilearn,nilearn,eickenberg,2015-01-20 22:16:29,"> Using this PR, memory is safed

line 74 makes a copy... 

If Loic's slicing PR permits slices into memmapped .nii files, then that is the best possible way of saving memory.

So the sole advantage of having time slicing (once Loic's is merged) in the NiftiMasker is the fact that it can go in a pipeline.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
6,issue_comment,291,nilearn,nilearn,AlexandreAbraham,2015-01-21 09:07:06,"I have seen that time masking is done before the other pre-treatments. It makes sens the remove noisy scans at the beginning of a session, but for a condition mask (like Haxby), it would make more sense to me to apply it after the pretreatments (detrending, filtering...). So I'm wondering if it's a good idea to keep this name.
",nan,nan
7,issue_comment,291,nilearn,nilearn,banilo,2015-01-25 09:51:03,"@AlexandreAbraham: Do you think it makes sense to include an option for either pre- or post-pretreatment application of the 4D filter?
",nan,nan
8,issue_comment,291,nilearn,nilearn,GaelVaroquaux,2015-01-25 09:54:00,"> @AlexandreAbraham: Do you think it makes sense to include an option for either
> pre- or post-pretreatment application of the 4D filter?

We need to make a choice. Too many options are detrimental. It should
probably be 'pre application', because these are the only semantics that
make sens in general. However, this will blend a bit the masked data with
the non masked data in the case of time filtering, so we will have to
warn the user.
",nan,nan
24,issue_comment,291,nilearn,nilearn,banilo,2015-01-30 08:40:03,"Ok, time masking now uses Loics index_img :)
",nan,nan
43,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:37:24,"import is already a few lines below.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
44,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:44:28,"> Data preprocessing will ignore the time mask whereas NiftiMasker.transform will only consider time-masked images.

I thought this wasn't true anymore, i.e. the indexing was done before the other treatments like filtering.

> Use case: Avoid creation of a temporary 4D data nifti, potentially expensive in memory, before application of NiftiMasker.

Not sure what you mean by that, it seems to be that indexing does create a temporary 4D image but maybe I am missing something.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
45,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:46:20,"Also maybe the ""pipelinability"" should be mentioned in this docstring.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
46,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:53:11,"This is quite convoluted. I am sure there must be something better than this. mask.sum() should work but maybe there is something more generic.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
47,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 14:53:56,"Could we not check that applying index_img and then the mask without time_mask is the same as applying the mask with time_mask to the original image?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
15,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 15:06:35,"+1

mask_time is weird

timecourse_mask would be another option.

however, the axis we are referring to can be more general than time. we
could also select conditions with it for decoding, see e.g. the haxby
example. in this perspective the name time_mask is a little restrictive.
samples_mask would be more generic, and still understandable/correct

On Monday, February 2, 2015, Gael Varoquaux notifications@github.com
wrote:

> > 1. I am still in favor of time_mask vs mask_time, be it only because it
> >    is
> >    closer to how you would call it in plain English.
> 
> +1
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/291#issuecomment-72468504.
",nan,nan
48,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 15:10:35,"minor comment, I would use `time/fourth dimension` rather than `time/4D dimension`
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
49,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-02 15:12:02,"Ok
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
50,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-02 15:14:19,"In real-world (float typed) binary mask niftis this did sometimes not give the same result, but here I will shift to sum() as suggested.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
51,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-02 15:17:36,"I will make sure the 4D mask is 'pre application', as suggested by Gael
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
52,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-02 15:18:34,"Depending on your use case, you could use something like `mask.astype(bool).sum()` or `np.isclose(mask, 0).sum()`. Note that the latter has some default absolute and relative tolerance that you may want to tweak.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
21,issue_comment,291,nilearn,nilearn,AlexandreAbraham,2015-02-02 15:27:48,"> however, the axis we are referring to can be more general than time. we could also select conditions with it for decoding, see e.g. the haxby example. in this perspective the name time_mask is a little restrictive. samples_mask would be more generic, and still understandable/correct

In the case of Haxby example, don't you select conditions after the pre-treatment (ie detrending, etc)?
",nan,nan
16,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 17:05:18,"detrending and standardization cannot be done on the haxby example before
the chunks are cut up. One can also get by without doing it. In general I
was thinking more along the lines of series of beta maps from a rapid
event-related paradigm. You don't detrend or standardize those.

On Mon, Feb 2, 2015 at 4:27 PM, Alexandre Abraham notifications@github.com
wrote:

> however, the axis we are referring to can be more general than time. we
> could also select conditions with it for decoding, see e.g. the haxby
> example. in this perspective the name time_mask is a little restrictive.
> samples_mask would be more generic, and still understandable/correct
> 
> In the case of Haxby example, don't you select conditions after the
> pre-treatment (ie detrending, etc)?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/291#issuecomment-72475594.
",nan,nan
17,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 17:09:45,"because they come from different runs. It doesn't make sense to detrend or
standardize over the borders of runs. scipy.signal.detrend takes
breakpoints, but they are not exposed in the niftimasker. I also don't
think that this is a general case. As already discussed with Bertrand,
datasets from nowadays are usually kept in one file per run because they
are already large on their own. It is only with datasets that at present
one can consider ""old"" that such concatenations become feasible.

On Mon, Feb 2, 2015 at 6:06 PM, Gael Varoquaux notifications@github.com
wrote:

> > detrending and standardization cannot be done on the haxby example before
> > the chunks are cut up.
> 
> Why?
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/pull/291#issuecomment-72494655.
",nan,nan
18,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 17:41:45,"They are 12 acquisition runs, the scanning is stopped after each one of them (that is my point) - but yes, one scanner session. Total acquisition time 3630 seconds.
",nan,nan
19,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-02 17:42:29,"(All in one file, runs labeled from 0 to 11 in the column ""chunk"")
",nan,nan
20,issue_comment,291,nilearn,nilearn,eickenberg,2015-02-03 10:20:56,":) I had to reproduce the original study once, so I was forced to read all the small print at one point.

> centering would be taken care off by defining the session vector as a confound.

Indeed, in a GLM, but we have typically done decoding directly on the data.

My point is that one could use the ""Time Masker"" to mask conditions here. However, since these data are still temporally structured, the example is bad. If you consider a dataset consisting of many beta maps (such as an event-related paradigm), the is nothing time-related at all involved, but one may still be tempted to use the ""Time Masking"" to select images according to certain conditions.

Hence my proposition to use a name that is more general than the word ""time"", e.g. ""sample"". That said, I have no problem using something that has the name ""time"" in it on my non-temporal 4th axis.
",nan,nan
25,issue_comment,291,nilearn,nilearn,banilo,2015-02-03 10:24:41,"> ""sample_mask"" seems like a reasonnable name

+1 on this
",nan,nan
9,issue_comment,291,nilearn,nilearn,banilo,2015-02-10 15:41:18,"Comments hopefully addressed. Mask is currently applied pre-treatment.
",nan,nan
53,pull_request_commit_comment,291,nilearn,nilearn,GaelVaroquaux,2015-02-10 16:36:52,"Rather than 'usecase: ...' I would say: 'this is useful to perform...'
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/nifti_masker.py')"
10,issue_comment,291,nilearn,nilearn,GaelVaroquaux,2015-02-10 16:38:09,"LGTM: minor rephrasing to do, and a rebase necessary to address merge conflicts.
",nan,nan
11,issue_comment,291,nilearn,nilearn,banilo,2015-02-10 18:42:07,"rephrased + rebased.
",nan,nan
12,issue_comment,291,nilearn,nilearn,banilo,2015-02-11 09:38:43,"Docstring updated!
",nan,nan
54,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:26:21,"You may as well use index_img now that it exists.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
55,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-11 10:27:31,"Should the tests not be as basic and transparent as possible?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
56,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:31:54,"Isn't it simpler to do (please use better names than mine):

``` python

masker2 = NiftiMasker(mask_img=mask_img)
masker2.fit()
data_imgs_subset = index_img(data_imgs, sample_mask)
data_trans_direct = masker2.transform(data_imgs_subset)
```

Basically you want to make sure that using sample_mask in the masker is the same as using index_img on the data and then a masker without sample_mask.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
57,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:48:38,"it looks like you moved away from PEP8 here
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
58,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:51:51,"Yes. By the way, just curious, any particular reason you are not using data_img_4d in the transform call?
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
59,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-11 10:53:53,"Maybe it's just me but I would do:

``` python
imgs = _utils.check_niimgs(imgs, accept_3d=True)

if sample_mask is not None:
    imgs = image.index_img(imgs, sample_mask)
```
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
60,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-11 10:54:59,"That is used in line 143.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/tests/test_nifti_masker.py')"
61,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-11 10:55:33,"It has been like that before, Alex wanted me to change it this way.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
13,issue_comment,291,nilearn,nilearn,banilo,2015-02-11 14:31:15,"Ok, done.
",nan,nan
62,pull_request_commit_comment,291,nilearn,nilearn,AlexandreAbraham,2015-02-11 14:45:38,"I suggested that because I thought that `index_img` could be faster if `imgs` was a list of 3D imgs. Given that it's not the case, I would be in favor of what @lesteve proposes.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
63,pull_request_commit_comment,291,nilearn,nilearn,lesteve,2015-02-12 08:35:07,"OK just this one to do and it should be good to go.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
64,pull_request_commit_comment,291,nilearn,nilearn,banilo,2015-02-12 08:42:31,"changed back to how it was before, as suggested.
",ca858367317cf691a62672b29623cbd9e27af87a,"(None, '', u'nilearn/input_data/base_masker.py')"
14,issue_comment,291,nilearn,nilearn,lesteve,2015-02-12 10:07:25,"Looks good, merging, thanks a lot.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,357,nilearn,nilearn,GaelVaroquaux,2015-01-20 06:30:34,"Hey,

I hadn't realized that we didn't work under Python 2.6.

I agree that, as we are start to want more users, we should worry about
compatibility with, first 2.6, and then 3.3 and 3.4.

Here is the way that I suggest tackling this issue (thanks Ben for
stepping up): first (for Python 2.6), port the ideas in scikit-learn's
.travis.yml to have the tests running under 2.6, then get it running;
submit a PR. Once the PR is in, do the same for Python 3.0.
",nan,nan
5,issue_comment,357,nilearn,nilearn,bcipolli,2015-01-20 06:37:58,":+1: Sounds great, and am very close to having exactly that done :)

@GaelVaroquaux One question: `scikit-learn`'s `.travis.yml` file doesn't deal with `NEURODEBIAN`.  Can you let me know how you'd like to include testing `NEURODEBIAN`?  Perhaps just on Python 2.7?  Not too familiar with it, so no idea what might make sense.
",nan,nan
6,issue_comment,357,nilearn,nilearn,lesteve,2015-01-20 08:23:15,"I reckon testing with NEURODEBIAN=1 only for Python 2.7 would be fine. 

I am not sure you can use NEURODEBIAN=1 to work with python2.6. According to [this](http://docs.travis-ci.com/user/ci-environment/#CI-environment-OS), Travis boxes Linux distribution is based on Ubuntu 12.04 and Python 2.6 has been dropped from 12.04 according to this [link](https://wiki.ubuntu.com/Python). Just saying I am not sure how Travis python version interacts with apt-get install python-numpy for example.

Maybe you have done that already but there is a way to set-up Travis so that it builds every time you are pushing into one of your branch, which is quite useful. Pandas developers page mentions this Travis [page](http://docs.travis-ci.com/user/getting-started/).
",nan,nan
7,issue_comment,357,nilearn,nilearn,lesteve,2015-01-20 08:35:43,"Before I forget while you are touching .travis.yml, it'd be great to have the neurodebian specific stuff only executed when NEURODEBIAN=1. Right now getting the Neurodebian GPG key fails from time to time (sudo apt-key adv --recv-keys --keyserver pgp.mit.edu 2649A5A9) and we are doing it whether we are using the Neurodebian repo or not.
",nan,nan
8,issue_comment,357,nilearn,nilearn,lesteve,2015-01-20 08:38:55,"Also Python3 compatibility would definitely be great. @ogrisel mentioned [futurize](http://python-future.org/futurize.html) last time we chatted about it.
",nan,nan
9,issue_comment,357,nilearn,nilearn,lesteve,2015-03-06 10:05:46,"closed via #476 
",nan,nan
3,issue_comment,357,nilearn,nilearn,ogrisel,2015-03-06 13:11:23,"\o/
",nan,nan
10,issue_comment,357,nilearn,nilearn,eickenberg,2015-03-06 13:12:20,"Now Olivier can do neuroimaging!

On Fri, Mar 6, 2015 at 2:11 PM, Olivier Grisel notifications@github.com
wrote:

> \o/
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/357#issuecomment-77556194.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
16,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 10:37:06,"This is a bit surprising, the iterator only throws when next is called.

We could do something similar to the coroutine decorator to make sure that the error is raised at construction time:

``` python

def wrapped(raise_error):
    if raise_error:
        raise ValueError('Nope')
    yield

    for i in range(10):
        yield i

def gen(raise_error):
    it = wrapped(raise_error)
    next(it)
    return it

g = gen(raise_error=True)
```
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
17,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-19 11:55:08,"I think we should not make this option available to people. You can create an `_index_img` method that does not do the `check_niimg` and call it from both functions.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
18,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 11:58:56,"Yep I could do that, this was mostly done this way by laziness I must admit.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
19,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-19 12:00:15,"As dimensionality of the data has been checked, you can use `...`:

```
return nibabel.Nifti1Image(imgs.get_data()[..., index],
    imgs.get_affine(),
    header=imgs.get_header())
```
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
20,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-19 12:12:24,"Forget that, I remember reading somewhere that `...` was faster than `:,:,:` but a quick benchmark shows that it's the same.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
21,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 12:21:03,"I have to admit I just copied and pasted @GaelVaroquaux's code. From a quick grep, we do tend to use `...` more often than `:, :, :`. `...` also looks slightly easier on the eyes in my biased opinion.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
22,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-19 12:39:09,"For the record, I tried several strategies to iterate on Nifti Images and they seem to have the same performance:

```
python -m timeit -s '
import numpy as np
import nibabel
d = nibabel.load(""bold.nii"")
for i in range(d.get_data().shape[3]):
    a = d.get_data()[:, :, :, i]'

python -m timeit -s '
import numpy as np
import nibabel
d = nibabel.load(""bold.nii"")
for i in range(d.get_data().shape[3]):
    a = d.get_data()[..., i]'

python -m timeit -s '
import numpy as np
import nibabel
d = nibabel.load(""bold.nii"")
for id in np.rollaxis(d.get_data(), 3, 0):
    a = id'

python -m timeit -s '
import numpy as np
import nibabel
d = nibabel.load(""bold.nii"")
for id in d.get_data().T:
    a = id.T'
```
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
23,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 14:00:21,"perhaps, add an informative error message when index is out of bounds and/or image is not 4D?
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
24,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 14:02:20,"The later could be done easily by `accept_3d=False`.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
25,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 14:04:48,"accept_3d=False?
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
26,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 14:08:00,"yield does not exist for python <2.5, but that's ok, I guess.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
27,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-19 14:09:01,"> yield does not exist for python <2.5, but that's ok, I guess.

Yes, quite clearly
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
28,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 14:10:08,"accept_3d is False by default.

I haven't looked at the out of bounds error, I have to say. Also I should probably add some tests for it.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
29,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 14:27:19,"re out of bounds error. This is how it looks at the moment. Is that not good enough?

```
---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
<ipython-input-6-32c3bef60180> in <module>()
----> 1 image.index_img(img, 9)

/home/lesteve/dev/nilearn/nilearn/image/image.pyc in index_img(imgs, index)
    534     """"""
    535     imgs = check_niimgs(imgs)
--> 536     return _index_img(imgs, index)
    537 
    538 

/home/lesteve/dev/nilearn/nilearn/image/image.pyc in _index_img(imgs, index)
    511     """"""Helper function for index_img and iter_img
    512     """"""
--> 513     return nibabel.Nifti1Image(imgs.get_data()[..., index],
    514                                imgs.get_affine(),
    515                                header=imgs.get_header())

IndexError: index 9 is out of bounds for axis 3 with size 6
```
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
30,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-19 14:38:24,"Edit: I didn't get Loïc's remark at first time. OK for the coroutine but document it because it is quite a mindfuck to read ;)
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
31,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 14:38:58,":+1:
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
32,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 14:49:20,"`this_img_3d`is actually 4d in the last 2 iterations.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
33,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 14:53:45,"As _index_img() also passes on the header, one might add a test for this.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
34,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 14:54:59,"Just for the sake of clarity, here is what I meant originally: it would make more sense and be more user-friendly if `gen = iter_img(img_3d)` was raising an error saying that `iter_img` only takes 4d images. At the moment, it doesn't and the error is raised only when doing `next(iter)` as the test shows.

My snippet above was meant to be a demonstration how to get `gen = iter_img(img_3d)` to raise an error.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
35,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 14:56:19,"Fair point, I'll change that.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
36,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 14:59:56,"Is there a good way to do that? I originally tried to test the header, but actually the following statement doesn't hold:

`index_img(img, index).get_header() == img.get_header()`

One of the reason is the header contains the shape of the data and that the indexed image generally doesn't have the same dimensions as the original image.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
37,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 15:09:11,"That's unfair. I wasn't allow to do this :-P
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(12, '', u'nilearn/image/__init__.py')"
38,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-19 15:11:59,"Yes, I agree with @AlexandreAbraham that it's code that's really hard to read. My gut feeling is: isn't there a simpler way to do this? Such code gets me nervous.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
39,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 15:17:20,"here and for `ìndex``argument: perhaps add/exchange by ""slicing"" to explicitly communicate that more than one target image can be drawn from imgs. At first sight, the user might think index_img is constrained to retrieving single niftis.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
40,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 15:28:58,"Doing it in **init**() of classical generator object could be more readable?
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
41,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-19 15:33:14,"That might have been a bit harsh on you indeed ;-). In my defense I added a line in the immediate vicinity so I was allowed to fix this PEP8 infraction.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(12, '', u'nilearn/image/__init__.py')"
42,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-19 15:36:50,"Since we are at it, is `ìndex=[]`` tested somewhere?
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(46, '', u'nilearn/image/tests/test_image.py')"
43,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-19 16:00:12,"> IndexError: index 9 is out of bounds for axis 3 with size 6

I think that it is good enough for now.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
44,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-19 16:00:36,"> Doing it in init() of classical generator object could be more readable?

That's possible.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/tests/test_image.py')"
45,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-20 08:28:29,"Sorry I didn't see @GaelVaroquaux's comment about being nervous with this kind of code before pushing (now it is hidden somewhere in one of the outdated diffs, annoying). I can replace it by a object instead if people feel better about that:

``` python
class Iterator(object):
    def __init__(self, imgs):
        self.imgs = check_niimgs(imgs)
    def __iter__(self):
        for i in range(_get_shape(self.imgs)[3]):
            yield _index_img(self.imgs, i)
```
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
46,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-20 08:32:13,"> class Iterator(object):
>     def **init**(self, imgs):
>         self.imgs = check_niimgs(imgs)
>     def **iter**(self):
>         for i in range(_get_shape(imgs)[3]):
>             yield _index_img(imgs, i)

I actually feel better about this. You will seldom hear me argue for a
class instead of functions, but I feel that the class is more explicite
here.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
7,issue_comment,356,nilearn,nilearn,lesteve,2015-01-20 08:44:42,"> You will seldom hear me argue for a class instead of functions

My thoughts exactly ;-) to be fair it does make the code simpler. I have pushed the change now.
",nan,nan
47,pull_request_commit_comment,356,nilearn,nilearn,eickenberg,2015-01-20 22:28:21,"`index=slice(0, imgs.shape[0], 2)` will not make a copy, whereas `index=range(0, imgs.shape[0], 2)` will. Do we trust that any user who knows the difference between these expressions also knows about memory-related issues of their use? (I would say yes)
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
48,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-20 22:35:07,"> Do we trust that any user who knows the difference between these
> expressions also knows about memory-related issues of their use?

Clueless users don't, but we cannot solve their problems with low-level
code. Advanced users do, and we should enable them by no trying to
second-guess their goals.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
49,pull_request_commit_comment,356,nilearn,nilearn,eickenberg,2015-01-20 22:40:45,":+1: 

(clueless users don't know the difference between slicing and fancy indexing, and probably won't even think about assigning values to a nifti slice. Experienced users would probably be annoyed if the behaviour of slicing was changed.)
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
8,issue_comment,356,nilearn,nilearn,lesteve,2015-01-22 10:35:29,"Tried to improve the index_img docstring and I think I have addressed all comments. If I don't hear anything I'll merge this afternoon.
",nan,nan
50,pull_request_commit_comment,356,nilearn,nilearn,bthirion,2015-01-22 10:53:44,"Sorry if I'm mistaken, but to me it looks like the output is always 4D (with the forth dimension being 0 if index == [] or 1 if index == [0]) ? 
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
51,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-22 11:57:38,"Point-at-the-end-of-line here but not e.g. for `index`. Inconsistent?
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
52,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-22 12:00:36,"If `index == 0`, then the output is 3D.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
53,pull_request_commit_comment,356,nilearn,nilearn,bthirion,2015-01-22 12:04:28,"Oops, it is indeed the case whenever index is a scalar.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
9,issue_comment,356,nilearn,nilearn,bthirion,2015-01-22 12:05:06,"LGTM
",nan,nan
54,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-22 12:07:45,"Sidenote: you can also end up with more dimensions: `index == None` (or `np.newaxis` for the purists) will give you 5D data (which totally fine for Nifti1Image).
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
55,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-22 12:08:09,"typo `nibabel.Nifti1IMage` -> `nibabel.Nifti1Image`
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
56,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-22 12:10:07,"I prefer to have classes declaration outside of the function unless it is mandatory. But that's personal taste I think.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
57,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-22 13:13:31,"Yeah I agree in general but this function is such a tight wrapper around the class that it doesn't really make sense to expose the class.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
58,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-22 13:17:26,"Done a few lines above. `index=[]` is actually a valid index, looks like you were expecting an out of bounds error from the positioning of your comment.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(46, '', u'nilearn/image/tests/test_image.py')"
59,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-22 13:17:39,"Done.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
60,pull_request_commit_comment,356,nilearn,nilearn,banilo,2015-01-22 13:20:15,"Ok, thanks. I did not know it is a valid argument.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(46, '', u'nilearn/image/tests/test_image.py')"
61,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-22 13:26:54,"> I prefer to have classes declaration outside of the function unless it is
> mandatory. But that's personal taste I think.

No, it's definitely good policy. With this code it becomes much harder to
introspect or to pickle (pickle is pretty much based on reflexivity, and
this breaks reflexity)
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
62,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-22 13:57:23,"FWIW, I seem to be able to pickle iter_img fine, even with the nested class. Nested classes within a class on the other hand are not picklable.

The main reason I put it inside the class it that otherwise iter_img and Checked4DImageIterator are an alias of each other, which doesn't seem ideal.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
63,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-22 14:54:16,"> FWIW, I seem to be able to pickle iter_img fine, even with the nested class

From my understanding of Python scopes, you shouldn't be able to pickle the result of iter_img (the iterator itself) but I can be wrong.

> The main reason I put it inside the class it that otherwise iter_img and Checked4DImageIterator are an alias of each other, which doesn't seem ideal.

I have no strong feeling. I just prefer classes outside of functions for the sake of readability. I honestly didn't think of people trying to pickle iterators.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
64,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-22 15:06:26,"> From my understanding of Python scopes, you shouldn't be able to pickle the result of iter_img (the iterator itself) but I can be wrong.

Yep you are right, I just checked pickling the `iter_img` function originally.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
10,issue_comment,356,nilearn,nilearn,lesteve,2015-01-22 15:14:45,"> >    From my understanding of Python scopes, you shouldn't be able to pickle the result of iter_img (the iterator itself) but I can be wrong.
> 
> Yep you are right, I just checked pickling the iter_img function originally.

OK I caved in and moved the class outside the iter_img function.
",nan,nan
11,issue_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-22 15:17:45,"... but we just concluded that inside was better! Or am I wrong?
",nan,nan
12,issue_comment,356,nilearn,nilearn,lesteve,2015-01-22 15:28:58,"> ... but we just concluded that inside was better! Or am I wrong?

I think the outcome was that nested classes wasn't good practice, and we found a case where pickability was broken. Good enough for me to drop it. Also adding an underscore in front of the class name, namely using _Checked4DImageIterator makes me happy enough about the whole thing.
",nan,nan
65,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-22 17:36:14,"What I find is somewhat a pity here is that if I am giving a list of strings (3D nifti files), the full data gets loaded. I know it makes for custom code, but we should maybe try to find a way that in this situation only the files that will be used get loaded.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(39, '', u'nilearn/image/image.py')"
66,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-22 17:40:57,"Same remark here: the data gets loaded when the iterator is created. Not only does it get loaded, but it gets concatenated to a 4D image. That means that it is using way more memory than it should be.

We should try to find a way around this.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(None, '', u'nilearn/image/image.py')"
5,issue_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-22 17:42:29,"General design seems absolutely right to me.

I have this quirk about the conversion to 4D in-memory NiftiImage object that I think should be addressed. With data like the HCP data, people are really running into memory problems.
",nan,nan
67,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-22 18:34:51,"There could be 2 modes: browsing (in that case a list of 3D files will not be loaded, or just memmapped) and computing (in that case the whole thing is loaded). However, is this a real usecase? I have the impression that this is more for plotting maps rather than indexing scans in a whole sequence.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(39, '', u'nilearn/image/image.py')"
68,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-22 18:38:34,"> There could be 2 modes: browsing (in that case a list of 3D files will not be
> loaded, or just memmapped) and computing (in that case the whole thing is
> loaded).

Modal functions are not good for API. Users tend to get them wrong.

Aside from making the code simpler, I don't see a benefit of the greedy
loading.

> However, is this a real usecase? I have the impression that this is
> more for plotting maps rather than indexing scans in a whole sequence.

It's for everywhere. One example: if I need to load a resting-state data,
but discard the first 3 images.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(39, '', u'nilearn/image/image.py')"
69,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-22 18:57:57,"> Aside from making the code simpler, I don't see a benefit of the greedy loading.

I don't get this remark. You mean that we should be able to give an `index` parameter to `check_niimg`?
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(39, '', u'nilearn/image/image.py')"
70,pull_request_commit_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-22 19:02:00,"> ```
> Aside from making the code simpler, I don't see a benefit of the greedy
> loading.
> ```
> 
> I don't get this remark. You mean that we should be able to give an index
> parameter to check_niimg?

Ah! Your remark applied to check_niimg and not to index_niimg? Then I
mostly agree with it that two modes could be useful. My remark does apply
here, as it is a developer-oriented function.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(39, '', u'nilearn/image/image.py')"
13,issue_comment,356,nilearn,nilearn,lesteve,2015-01-27 10:44:52,"> What I find is somewhat a pity here is that if I am giving a list of strings (3D nifti files), the full data gets loaded.

OK I added a `return_iterator` optional argument to `check_niimgs` which I am now using in `iter_img` in order to address this problem.

Also just a heads up, I had to rebase to solve merge conflicts with upstream master.
",nan,nan
71,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-27 15:04:25,"Isn't that suboptimal if niimgs is a 4d nifti?
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(40, '', u'nilearn/_utils/niimg_conversions.py')"
72,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-29 07:36:23,"> Isn't that suboptimal if niimgs is a 4d nifti?

Remind me what did you mean by suboptimal? I seem to remember that you were concerned that `check_niimg` will be called on individual 3d images but that's not the case because `_index_niimgs` doesn't include checks and only does the data slicing + 3d image creation.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(40, '', u'nilearn/_utils/niimg_conversions.py')"
73,pull_request_commit_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-29 08:30:58,"That was just a question ;). Forget it I was wrong.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(40, '', u'nilearn/_utils/niimg_conversions.py')"
74,pull_request_commit_comment,356,nilearn,nilearn,lesteve,2015-01-29 09:09:21,"OK merging then. Further optimisation can be added later if needed.
",3071c38abaab4dd0013500a085d83f0d9a305dfb,"(40, '', u'nilearn/_utils/niimg_conversions.py')"
14,issue_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-29 09:22:53,"Great!
",nan,nan
6,issue_comment,356,nilearn,nilearn,GaelVaroquaux,2015-01-29 09:29:39,"This is really awesome.

Now we should adapt all the examples to use these functions. The goal
would be to call get_data on the Nifti1Images as little as possible.

In general, I always like to design such function via the modification of
example files: it tells me if I am making the life of users easier or
not.
",nan,nan
15,issue_comment,356,nilearn,nilearn,AlexandreAbraham,2015-01-29 09:35:22,"> In general, I always like to design such function via the modification of example files: it tells me if I am making the life of users easier or not.

No doubts on this one. It will definitely get rid of some nasty code in the examples.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,470,nilearn,nilearn,bcipolli,2015-03-06 13:14:55,"Rebased to master, to test for Python 3.4 support
",nan,nan
7,pull_request_commit_comment,470,nilearn,nilearn,AlexandreAbraham,2015-03-06 13:29:16,"Why nibabel ?
",22c8ba086c08667c760d586826d7fcdd56d76924,"(9, '', u'nilearn/decomposition/tests/test_canica.py')"
8,pull_request_commit_comment,470,nilearn,nilearn,bcipolli,2015-03-06 20:15:10,"I tend to try and reorganize imports when I add them (3 blocks, alphabetized, `import`s before `from`.

I need to stop doing that, it's not helping anybody.  I'll revert this now.
",22c8ba086c08667c760d586826d7fcdd56d76924,"(9, '', u'nilearn/decomposition/tests/test_canica.py')"
9,pull_request_commit_comment,470,nilearn,nilearn,AlexandreAbraham,2015-03-06 20:50:15,"No, this is what I do too: one block for standard / system imports, one for scientific package and one for inner modules. I was just wondering why you added nibabel but I can see that you removed it from the top of the file.
",22c8ba086c08667c760d586826d7fcdd56d76924,"(9, '', u'nilearn/decomposition/tests/test_canica.py')"
6,issue_comment,470,nilearn,nilearn,AlexandreAbraham,2015-03-09 13:42:42,"Thanks for the fix!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,476,nilearn,nilearn,lesteve,2015-03-02 09:10:25,"First thanks a lot for removing the warnings related commits from the python 3 ones!

Here are a few general comments, before I look at the changes in more details:
- [x] we want to either use six or future but not both. Personally I'd be in favor of the latter.
- [x] we should leave the documentation generation for a separate PR. Please revert any changes to doc/sphintext.

Also this is quite a long PR to review. That would be really great if you could keep unrelated commits, like ""shorten numpy version idiom"" for separate PRs.

> All nilearn imports should be relative (except, perhaps, in tests)

not perhaps, tests should use absolute imports. For example it allows you to run a test from your git checkout with any nilearn that happens to be in your PYTHONPATH. For example this is quite useful to make sure that a test you just added was actually failing with a previous released nilearn version.
",nan,nan
25,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:06:37,"please remove the newline before and add a newline after (the latter is to make the README.rst render properly on PyPI)
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'README.rst')"
26,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:08:12,"Not too sure where this === comes from but I think it should be removed unless there is a missing title in the rst. 
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'README.rst')"
27,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:08:40,"you probably didn't mean to include this file
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'doc/issues.txt')"
28,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:10:02,"I think dtype doesn't need to be mentioned here similarly to what is done in the other haxby examples.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'examples/decoding/plot_haxby_full_analysis.py')"
29,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:20:55,"slight niggle: assert_raises_regex does not exist for python 2.7 because it is called assert_raises_regexp (with a 'p' at the end) we should do something like this:

``` python
try:
    from nose.tools import assert_raises_regex
except ImportError
    try:
        from nose.tools import assert_raises_regexp as assert_raises_regex
    except ImportError:
        # for Python 2.6
```

Side-comment: very annoyingly PEP8 is not stable with respect to search and replace which means that most of the assert_raises_regexp -> assert_raises_regex replacements in this PR have introduced PEP8 violations...
",9b1a0272021c5c847e36569722aebc312fd67de3,"(26, '', u'nilearn/_utils/testing.py')"
30,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:22:07,"I may have missed it but it looks like you are not using this function in this PR (kind of makes sense that it belongs in the warnings-related PR)
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/_utils/testing.py')"
31,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:25:00,"My understanding is that the round -> np.round replacement is only needed when the thing you are rounding is a numpy scalar. It doesn't seem necessary here. 
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/decoding/searchlight.py')"
32,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:26:26,"not used it looks like
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/input_data/nifti_maps_masker.py')"
33,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:27:24,"not really related to the PR ...
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/input_data/nifti_labels_masker.py')"
34,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:28:18,"not used
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/mass_univariate/permuted_least_squares.py')"
35,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:29:36,"just wondering whether you need the list here, since you are just iterating over the keys
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/plotting/cm.py')"
36,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:30:50,"not used
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/region.py')"
37,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:31:50,"is this magical 'xyzpdq' really needed?
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/datasets.py')"
38,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:35:26,"assert_warns_regex isn not used
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/tests/test_masking.py')"
39,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:36:01,"Interestingly enough this line is actually overriden by the next one which redefines np_version ...
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/tests/test_masking.py')"
40,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:37:24,"not used
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/group_sparse_covariance.py')"
41,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:38:29,"I seem to remember this was related to removing one warning so this change and the one above can be removed
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/tests/test_signal.py')"
42,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:38:52,"does not seem to be used
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/version.py')"
43,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-02 18:41:07,"xrange being imported but not used seems to happen quite a few times, can you check all of them?
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/region.py')"
6,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-03 00:28:49,"Thanks @lesteve for the comments!  Looks like things got a little messy after all from the merge / demerge / remerge I did; I will also review the code manually in addition to addressing your comments.

Re: the dependency on `six`, did you have any ideas o removing the dependency on `six.string_types`?  I guess I could just copy their code into a `_utils` function, but that might be confusing for developers? (e.g.  `from nilearn._utils.compat import string_types`)?
",nan,nan
7,issue_comment,476,nilearn,nilearn,lesteve,2015-03-03 07:34:16,"> Re: the dependency on six, did you have any ideas o removing the dependency on six.string_types

My guess was that future has something similar but I have to say I haven't checked.
",nan,nan
8,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-03 07:39:30,"@lesteve I didn't find anything, and I searched for a bit.  The code in `six` isn't complicated to copy, I just wanted to check that it would be an acceptable solution.
",nan,nan
9,issue_comment,476,nilearn,nilearn,lesteve,2015-03-03 07:45:53,"What about http://python-future.org/compatible_idioms.html#basestring?
",nan,nan
10,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-03 15:56:01,"> What about http://python-future.org/compatible_idioms.html#basestring?

The first option adds a dependency to `past`, the second doesn't consider byte strings as strings.
",nan,nan
11,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:00:02,"As it turns our, `sklearn.externals` includes `six`.  How about I migrate to using `sklearn.externals.six`?

Edit: looks like it's only introduced in `v0.14`.  Still, migrating off of `six` will be much more challenging then migrating off of `__future__` (which is used in one place).

How about adding an installation dependency on `six` (or adding it to a nilearn `externals`) until the minimum version of `sklearn` is 0.14?
",nan,nan
44,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:25:08,"Missed this commit.  I've rebased to remove it, thanks!
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/tests/test_signal.py')"
45,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:26:48,"I see what happened; this was caused by rebase / merge / rebase confusion.  I eliminated the use of past completely now; none were actually meaningful.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/group_sparse_covariance.py')"
46,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:31:34,"I'll revert this back to untouched; I thought it was causing an error from a merge conflict, but turns out it was in an import above.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/tests/test_masking.py')"
47,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:33:04,"Thanks for the catch!  This made me realize, just now: one downside of using parentheses in imports is that sublime text no longer indicates which imports are being used.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/tests/test_masking.py')"
48,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:34:22,"Fixed.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/plotting/cm.py')"
49,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:37:29,"My understanding is the same.  I replaced it here while replacing in other places, as it seemed more robust to future changes and a good habit to simply use `np.round` in any code already importing numpy.

Happy to change it back.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/decoding/searchlight.py')"
50,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:41:10,"Nice catch.  There were two more commits from the `fix_warnings` branch that I missed here (from their commit comment, I couldn't tell).  Rebased to remove them.  
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/_utils/testing.py')"
51,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:48:36,"Fixed. Also dealt with those PEP8 violations... you are correct: that IS very annoying :)
",9b1a0272021c5c847e36569722aebc312fd67de3,"(26, '', u'nilearn/_utils/testing.py')"
52,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:50:04,"Thanks for catching this.  I think this was my attempted solution for examples, before simply prefixing all strings as byte-strings.  I've removed now.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'examples/decoding/plot_haxby_full_analysis.py')"
12,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-03 16:59:36,"@lesteve I made all of the requested changes, I believe.  I chose to remove the dependency on `future` and keep that of `six`, since `six` is much more deeply embedded and is used in `scikit-learn`.  It is now listed as a dependency (which can be removed when minversion of `sklearn` >= 0.14).  Please let me know if that's acceptable.

I will do a line-by-line code review myself later today and update here.
",nan,nan
53,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-03 17:04:14,"... fixed all, except this one.  I am investigating this, I found this to be necessary (but will double-check).
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/datasets.py')"
13,issue_comment,476,nilearn,nilearn,lesteve,2015-03-03 17:07:06,"> >   What about http://python-future.org/compatible_idioms.html#basestring?
> 
> The first option adds a dependency to past, the second doesn't consider byte strings as strings.

:confused: past is provided by python-future, isn't it?

I may be dead wrong but I think your tests are going to fail because 'from past.builtins import bla' are going to raise, since future is not installed any more by setup.py ...
",nan,nan
14,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-03 17:19:41,"> :confused: past is provided by python-future, isn't it?

Right, good point!  I decided to stick with `six` because it is heavily used in this PR; moving off of it would be challenging.  In addition, `sklearn` seems to be using `six`.  So that kind of made up things for me to respond to you.  But as always, willing to take a different direction if requested.

> I may be dead wrong but I think your tests are going to fail because 'from past.builtins import bla' are going to raise, since future is not installed any more by setup.py ...

The only dependency on `past` was the imports of `xrange`, and none of those should have been there anyway.  Those are all removed now, so I believe things should run well.  Let's see! :)
",nan,nan
15,issue_comment,476,nilearn,nilearn,lesteve,2015-03-03 17:23:55,"> Those are all removed now, so I believe things should run well. Let's see! :)

Right should be fine then, I was probably still looking at an old diff.
",nan,nan
16,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-03 19:36:51,"Just finished a code review, no obvious issues remaining to me.  I just updated the ""magic_string"" info and migrated to use `xrange` from `six.moves`.  Once the tests pass, I think this is ready for further review.
",nan,nan
54,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 07:53:39,"Looks like there are still have changes in doc/sphintext that you haven't reverted
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'doc/sphinxext/gen_rst.py')"
55,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 07:59:16,"would

``` python
diagonal_indices = np.diag_indices(prec.shape[0])
prec[diagonal_indices] = 0
```

work?
",9b1a0272021c5c847e36569722aebc312fd67de3,"(5, '', u'examples/connectivity/plot_adhd_covariance.py')"
56,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 08:24:10,"I don't think this is needed since np.pi is a float
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'examples/manipulating_visualizing/plot_affine_transformation.py')"
57,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 08:33:11,"could we use np.arange here?
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/_utils/testing.py')"
58,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 08:38:11,"> not used it looks like

still seems to be the case
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/input_data/nifti_maps_masker.py')"
59,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-04 14:50:24,"Just looked, turns out there's a `np.fill_diagonal` function.  Both it, and `diag_indices` are new in numpy 1.4, and nilearn targets >= 1.3.  
",9b1a0272021c5c847e36569722aebc312fd67de3,"(5, '', u'examples/connectivity/plot_adhd_covariance.py')"
60,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-04 14:55:35,"Very strange, thanks for catching.  In fact none of the changes were present, I wonder if I pulled the commit when rebasing.  Did the same copy from master again!
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'doc/sphinxext/gen_rst.py')"
17,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-04 14:56:44,"@lesteve Addressed all of the requested issues except the `np.diag_indices` change, due to the numpy version issue.
",nan,nan
61,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 15:00:11,"Arrgh, probably one for soonish when we raise the minimum versions similarly to #397.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(5, '', u'examples/connectivity/plot_adhd_covariance.py')"
62,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-04 15:06:02,"How about opening an issue to track line changes for when the version gets bumped?  I'd be happy to do that, if that sounds useful.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(5, '', u'examples/connectivity/plot_adhd_covariance.py')"
63,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:21:45,"slight niggle, the parentheses are not needed
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/_utils/testing.py')"
64,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:22:08,"i.e. you can use `_, filename = ...`
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/_utils/testing.py')"
65,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-04 19:24:47,"good point.  since only one argument is being used, how do you feel about removing the output argument list and just subscripting the function call: 
`filename = tempfile.mkstemp(prefix=""nilearn_"", suffix="".nii"", dir=None)[1]`
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/_utils/testing.py')"
66,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:25:26,"Another one to keep in mind when we move the numpy requirement to 1.6. If you have some spare cycles, feel free to open an issue as you mentioned so that we don't forget about these things and reference #397 inside.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(154, '', u'nilearn/_utils/testing.py')"
67,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:32:29,"Probably very subjective, but I find it reads better with `_, filename = ...`.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/_utils/testing.py')"
68,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:35:18,"I don't think this is needed since the dtype is int and frames is a multiple of 2 anyway.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/decoding/tests/test_searchlight.py')"
69,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:37:26,"You can use // if that makes you feel a lot better ...
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/decoding/tests/test_searchlight.py')"
70,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:40:39,"I am guessing this change (verbose > 0 rather than verbose > 10) wasn't meant to be there
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/input_data/nifti_masker.py')"
71,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:41:47,"Unneeded changes
",9b1a0272021c5c847e36569722aebc312fd67de3,"(7, '', u'nilearn/mass_univariate/permuted_least_squares.py')"
72,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 19:44:46,"Unneeded change
",9b1a0272021c5c847e36569722aebc312fd67de3,"(4, '', u'nilearn/region.py')"
73,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-04 19:54:54,"`xrange` is a builtin in Python 2.x, but unavailable in Python 3.x.  Converting to `range` seemed suboptimal, since some of the ranges being iterated over are quite large.  So I added the imports so that the `xrange` function would be available in both.

Do you prefer simply converting all `xrange` to `range` then?
",9b1a0272021c5c847e36569722aebc312fd67de3,"(4, '', u'nilearn/region.py')"
74,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 20:01:33,"Ah sorry for that, I was in automatic diff processing mode and missed that completely, sorry for the noise ! I think it's fine to keep with xrange.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(4, '', u'nilearn/region.py')"
75,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 20:02:07,"Ignore this one too ...
",9b1a0272021c5c847e36569722aebc312fd67de3,"(7, '', u'nilearn/mass_univariate/permuted_least_squares.py')"
76,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-04 21:02:41,"Sorry, I thought it was previously requested that I change this.  All of the similar prints from within this function were for `verbose > 0`, so I thought I was asked to tweak this one while I was there.

Please confirm either way, thanks!
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/input_data/nifti_masker.py')"
77,pull_request_commit_comment,476,nilearn,nilearn,bcipolli,2015-03-04 21:03:05,"No problem, it's a huge diff that you've gone over a few times... really thanks!
",9b1a0272021c5c847e36569722aebc312fd67de3,"(4, '', u'nilearn/region.py')"
78,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 21:17:15,"My recollection is that this is a print statement before immediately returning and that you want this only in some edge cases, for which you would set a crazy high verbosity. 

I seem to remember one of such edge cases was if you want to differentiate between the fit taking a long time and the next step in your analysis taking a long time (and not doing any printing when it starts for some stupid reason).
",9b1a0272021c5c847e36569722aebc312fd67de3,"(None, '', u'nilearn/input_data/nifti_masker.py')"
79,pull_request_commit_comment,476,nilearn,nilearn,lesteve,2015-03-04 21:28:44,"Actually I just checked and I misread the comment: there is no header argument in np.savetxt for numpy 1.6, which by the way is probably the older version we are testing on travis-ci.
",9b1a0272021c5c847e36569722aebc312fd67de3,"(154, '', u'nilearn/_utils/testing.py')"
18,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-04 21:29:00,"OK, touched the few that were requested. :)
",nan,nan
19,issue_comment,476,nilearn,nilearn,lesteve,2015-03-04 21:40:43,"> OK, touched the few that were requested. :)

Great stuff! I had something running my computer at work to make sure that all the datasets were downloading cleanly and the examples ran fine with Python 3. I'll double-checked that tomorrow and once this one is merged, we will all have one cheap excuse less to keep using Python 2!
",nan,nan
20,issue_comment,476,nilearn,nilearn,lesteve,2015-03-04 22:10:54,"No clue why the coverage reported by coveralls is misbehaving like this ... 
",nan,nan
21,issue_comment,476,nilearn,nilearn,lesteve,2015-03-04 22:26:07,"The only thing I could find in the travis [log](https://travis-ci.org/nilearn/nilearn/jobs/53106433) 

```
Coverage.py warning: Trace function changed, measurement is likely wrong: None
```

For reference a travis [log](https://travis-ci.org/nilearn/nilearn/jobs/53044084) from master.

The coverage reports from nosetests in both logs do look different. 
",nan,nan
22,issue_comment,476,nilearn,nilearn,lesteve,2015-03-06 08:29:32,"OK I am going to merge this one. Thanks a lot @bcipolli for your continued work on this !

I haven't figured out the whole thing but I convinced myself there is something spurious going on with the coverage. For example I manually checked that some line labeled as missed were actually  executed using 1/0 markers.

A temporary work-around that I found for now: disabling doctests within nose and use the python 3 distribution in Travis.

Note that there is some known undesired interactions between coverage and doctest mentioned [here](http://nose.readthedocs.org/en/latest/plugins/doctests.html#source).

I'll keep investigating to find a more statisfactory long-term solution.
",nan,nan
23,issue_comment,476,nilearn,nilearn,bcipolli,2015-03-06 13:09:05,"Thanks @lesteve for your help on this one!

A note to others that `six` is now a dependency of `nilearn`, so you may need to update your Python install.

Also to those who have outstanding PRs, I recommend restarting the Travis build so that your code can be tested for Python 3.4 compatibility.
",nan,nan
24,issue_comment,476,nilearn,nilearn,GaelVaroquaux,2015-03-06 13:09:43,"Great job! Thanks a lot
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,477,nilearn,nilearn,AlexandreAbraham,2015-03-03 13:11:23,"LGTM
",nan,nan
6,issue_comment,477,nilearn,nilearn,GaelVaroquaux,2015-03-05 08:12:27,"Great job. Thanks

Sent from my phone. Please forgive brevity and mis spelling

On Mar 2, 2015, 21:31, at 21:31, ""Loïc Estève"" notifications@github.com wrote:

> fix #408. The speed-up is achieved mostly by splitting
> test_plot_functions in separate tests
> and thereby reducing the total number of plots done. nosetests
> test_img_plotting.py take ~30s instead of ~70s on my machine.
> You can view, comment on, or merge this pull request online at:
> 
>  https://github.com/nilearn/nilearn/pull/477
> 
> -- Commit Summary --
> - Speed-up plotting tests
> 
> -- File Changes --
> 
>    M nilearn/plotting/tests/test_img_plotting.py (169)
> 
> -- Patch Links --
> 
> https://github.com/nilearn/nilearn/pull/477.patch
> https://github.com/nilearn/nilearn/pull/477.diff
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/pull/477
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,474,nilearn,nilearn,lesteve,2015-03-03 07:37:23,"LGTM, maybe someone who knows the maskers better than I do can have a quick check.
",nan,nan
6,issue_comment,474,nilearn,nilearn,AlexandreAbraham,2015-03-03 08:24:07,"Thanks.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,475,nilearn,nilearn,bcipolli,2015-03-01 15:55:09,"Just to put it out there, if coverage was desired, I only had these ideas to start:
1. Migrate away from `print`: Some of the code uses a `logger` object already, that wraps the `verbose` check (e.g. `nilearn/group_sparse_covariance.py`).  All of the `print` statements could be migrated to using the `logger` object, and a simple check could be made within the `logger` object to see if coveralls is being run (similar to how mock is checked within some `datasets` code, but hopefully done without having to pass a flag).  The downside is that some places in the code have more than just a `print` statement inside the `verbose` check, and this would not trigger those blocks.  And those tend to be more complex code (so in more need of test coverage).
2. Tests currently explicitly pass `verbose=0`.  They could pass import some value or function from `nilearn._utils.testing`, and pass that instead.  The value / function could do the same check as above (perhaps, an environment variable).  One downside of this is that outsiders looking to contribute would be unlikely to figure out they need to do this.
",nan,nan
4,issue_comment,475,nilearn,nilearn,AlexandreAbraham,2015-03-12 10:27:10,"I would say: no we don't want to test it. My experience is that verbosity is enhanced using users feedback. A basic test could be to ensure that increasing verbosity increases the number of output lines but I don't think that it's necessary.
",nan,nan
5,issue_comment,475,nilearn,nilearn,lesteve,2015-03-26 09:43:05,"Agreed, closing this one.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,478,nilearn,nilearn,bcipolli,2015-03-03 18:30:19,"I would suggest to name it `_new_img`, if it's an internal-only / hidden API.  Or, if it's planned to recommend users to use this function, I suggest adding a docstring to `new_img` about what object type is returned.
",nan,nan
6,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-03 19:02:07,"It is already located in `utils` which is hidden. However, I must admit that I didn't get the naming conventions in there (for example `_get_shape`).
",nan,nan
22,pull_request_commit_comment,478,nilearn,nilearn,bthirion,2015-03-03 21:44:37,"dosctring ?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
23,pull_request_commit_comment,478,nilearn,nilearn,bthirion,2015-03-03 21:47:32,"dosctring ?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
7,issue_comment,478,nilearn,nilearn,bthirion,2015-03-03 21:50:56,"Looks good otherwise. I don't see any travis output ?
",nan,nan
8,issue_comment,478,nilearn,nilearn,bthirion,2015-03-03 21:54:33,"There are still many calls to Nifti1Image throughout all the codebase...
",nan,nan
9,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-03 23:36:41,"Yes, I noticed that on my way back home ;). I fixed the last occurences.
",nan,nan
10,issue_comment,478,nilearn,nilearn,lesteve,2015-03-04 08:16:24,"Naming suggestions:
- maybe something like create_img or make_img ?
- about the filename why not nibabel_image.py rather than niimage.py to make it more explicit that it is a nibabel wrapper? Also niimage.py doesn't follow the same naming convention than niimg_conversions.py in _utils
",nan,nan
11,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-04 09:04:45,"> maybe something like create_img or make_img ?

Not a big fan, I prefer `new_img`.

> why not nibabel_image.py

Because we don't want to be tied to nibabel. If one day we change the image format nilearn relies on, all we will have to do is to change the dependency on that file.

> Also niimage.py doesn't follow the same naming convention than niimg_conversions.py in _utils

I agree, `niimg_conversions` is definitely a bad name ;)
",nan,nan
12,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 08:54:39,"I am going to rename niimage -> niimg (but it could be img)

@GaelVaroquaux any thoughts on this one? I'd like to merge it fast as it is just code refactoring.
",nan,nan
24,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 16:29:12,"Can you give us a docstring that says what's in this module?

Also license information as a comment.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
25,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 16:29:49,"Please define input and output types in the docstring.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
26,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 16:30:34,"I tend to have a strong bias against such a wrapper function that does nothing more than the function it wraps. The reason is that it makes the code opaque.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
27,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 16:31:23,"Why? Why such a  one-liner. Why not teach our users to use 'to_filename' (which is a pretty bad method name, but let's move forward.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
28,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-05 18:57:33,"General remark: there appears to be quite some inconsistency in when and how this function is used in nilearn code.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
29,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-05 18:58:44,"rather ""line above""?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
30,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-05 19:00:44,"I might have asked this question before: Why is there no is_niimg(obj) in nilearn? ...one that verifies whether the object is Nifti1Image/iterable/list?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
31,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-05 19:03:17,"> Why such a one-liner.

+1
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
32,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-05 19:07:26,"I like new_img() already.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/plotting/img_plotting.py')"
33,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 19:32:10,"You mean that it is sometimes used from `niimg_conversion` module? I've seen that in the tests, I will fix it. 
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
34,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 19:35:25,"No, I think that this comment refer to the last line of the function.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
35,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 19:36:35,"I think it's because it boils down to loading the data itself so doing the equivalent of `check_niimg`.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
36,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 19:48:40,"As said in the description, this PR does nothing but moving the code around. Since nibabel related functions were scattered all around the code, I moved them all there. While doing that, I seized the occasion to remove all `nibabel` related code and put aliases here. I think this is a good practice to _abstract_ this dependency but I can revert it back to what it was.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
37,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 19:49:49,"This is the purpose of the PR: remove any reference to nibabel all around the code. A `niimg` being an object exposing `get_data()` and `get_affine()` method, I wrapped the call to `to_filename()`.
Also all this code is located in `_utils` so users should not use it.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
38,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 19:51:27,"> This is the purpose of the PR: remove any reference to nibabel all around the
> code.

I don't think that this is a worthwhile goal per-se: it will simply make
the code opaque. It is good thing to explicitely know that we are using
nibabel.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
39,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 20:00:01,"OK, so I can close this PR and we let the code related to nifti images in niimg_conversion.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
40,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 20:34:52,"> OK, so I can close this PR and we let the code related to nifti images in
> niimg_conversion.

Well, maybe this PR was bringing in useful cleanups?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
41,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 20:45:10,"There is no code engineering in this PR, only moving around some code (mainly from niimg_conversion to niimage) and adding a test. If we don't want to isolate nibabel in a file, there is no reason to refactor the code. If we want to keep something from this PR, I think it would be easier to create a new (clean) one.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
42,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 20:46:28,"I have no issue with moving code around. It's just the thin abstractions
introduced that I don't like. Based on my experience of discovering a new
codebase, they render a codebase opaque to an outsider.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
43,pull_request_commit_comment,478,nilearn,nilearn,eickenberg,2015-03-05 20:50:49,"Once the header-related `new_img_like` (or however it will be called) becomes reality, the function name `new_img` will probably be looked for by users that know the former. Yes, this is `__future__` talk :) but in that light this addition seems very much consistent.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
44,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 20:52:41,"> Once the header-related new_img_like (or however it will be called) becomes
> reality, the function name new_img will probably be looked for by users that
> know the former. Yes, this is **future** talk :) but in that light this
> addition seems very much consistent.

OK, then let's tackle this problem now. I don't want to design abstractions
for future usage, as this is a very slippery slope.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
45,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 20:57:52,"> Once the header-related new_img_like (or however it will be called) becomes reality, the function name new_img will probably be looked for by users that know the former.

Do you plan to make `new_img_like` available to the users? I thought that it would be internal cuisine.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
46,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-05 20:58:37,"> Do you plan to make new_img_like available to the users? I thought that it
> would be internal cuisine.

Agreed.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimage.py')"
13,issue_comment,478,nilearn,nilearn,eickenberg,2015-03-05 21:02:26,"In reading through all the changed code, I feel that `new_img` is actually really nice on the eyes. 

@GaelVaroquaux I totally understand your apprehension about thin wrappers since they definitely add a layer, however thin it is. As somebody who has difficulties getting into new codebases and their practices, this type of thing would definitely be an added one for me.

But really, `new_img` seems very elegant to me, at least much more elegant than `nibabel.Nifti1Image` -- which to new users may actually be equally shocking simply by its unwieldiness.

`nibabel.Nifti1Image` still works for anybody who wants to use it, and one can always see `new_img` as a simple alias, so I really think this change is worth it.

Wrt `new_img_like`, maybe tackling it right now is a good idea. Do we need a discussion about the `mode=` that had been put forward? (I am not sure which ones there would be.)
",nan,nan
14,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-05 21:11:14,"You would achieve the same effect by doing: `from nibabel import Nifti1Image as niimg` for example. Aliasing is not the best practice but it is maybe better than a wrapper.
",nan,nan
15,issue_comment,478,nilearn,nilearn,eickenberg,2015-03-05 21:15:24,"I realized that while typing the word _alias_, originally intended to be more figurative than real. Small caps for a class is not cool, and `Niimg` ... would look weird wrt all the other true functions that contain the word `niimg`. I think I am overthinking this.
",nan,nan
16,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 12:55:31,"OK, this PR is back on track again (because I like to nilearn a bit after lunch). I'm afraid that my renaming of the file erased the comments but I will address them when I have time.

Changes:
- Remove the one-liner `save_img` (since SpatialImage provides the `to_filename` method
- Refactor the one-liner `new_img` into `new_img_like` that actually does something. The constructor of the original type of the image is used to be able to support any type (this is the way nibabel handles it). I also put in there some small tweaks.
- Propagate the changes through all the code. Tests are passing but review is welcome as I sometimes had to change things a little bit.
",nan,nan
17,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 13:03:16,"Rebased on master for python3 compliance.
",nan,nan
47,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 14:43:33,"Since SpatialImage should provide `shape` property, I am in favor of removing this one.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
48,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 14:44:08,"Should this be replaced by `isinstance(nibabel.spatialimages.SpatialImage)?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
49,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 14:45:00,"I am not satisfied with that but I don't know how to say here that the type is depending on an input.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
50,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 14:45:42,"This is wrong.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
51,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 15:57:57,"Just cosmit refactoring: I return in this condition instead of having a huge condition block.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(68, '', u'nilearn/_utils/testing.py')"
52,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 15:59:29,"Treating the first file first each time greatly simplify the code.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/image/image.py')"
53,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 15:59:44,"We have to ensure that the mask is bool.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/image/resampling.py')"
54,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-06 16:01:01,"> We have to ensure that the mask is bool.

I think that sklearn.utils.fixes.as_type(mask, np.bool) would be more
memory-friendly.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/image/resampling.py')"
55,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-06 23:42:02,"Memory consumption is the same (we need a boolean copy of img.get_data()). From my experience, direct operations are faster than `astype`.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/image/resampling.py')"
56,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-07 08:22:18,"> Memory consumption is the same (we need a boolean copy of
> img.get_data()).

Because it is impossible to have booleans in nifti, right? Elsewhere it
would indeed be different.

That just reminded me what is the ""right"" way to do it in the nilearn
codebase: _utils.numpy_conversions._asarray(arr, dtype=np.bool). This
code does some tricks to avoid a memory copy when converting from int8 to
bool. Philippe wrote that because he was annoyed that we couldn't store
booleans in nifti files.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/image/resampling.py')"
57,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-07 13:55:51,"Fixed.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/image/resampling.py')"
18,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 15:48:10,"Rebased. Any other objection on this one? I think that I've addressed all the comments and that it is now actually a step forward cleaning code in nilearn ;).
",nan,nan
58,pull_request_commit_comment,478,nilearn,nilearn,eickenberg,2015-03-09 15:56:11,"Is this still necessary?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
59,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-09 17:26:54,"Should the exception type be a bit more specific, like AttributeError?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
60,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-09 17:57:38,"Sorry I don't get this, the only use I could find of using _MNI152Template was without any arguments in the `__init__`.

Also just curious, what's the advantage of having _MNI152Template be an image?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/plotting/img_plotting.py')"
61,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-09 18:02:23,"Should ""Nifti1Image object"" be replaced by ""Image object"" or ""SpatialImage object""?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(20, '', u'nilearn/_utils/niimg.py')"
19,issue_comment,478,nilearn,nilearn,lesteve,2015-03-09 18:06:01,"By the way the error you are seeing in Travis has been fixed in master so you probably want to do a rebase.
",nan,nan
62,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-09 18:58:58,"I agree unless someone comes up with a compelling use case of using an `img` which is not a `nibabel.SpatialImage`.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
63,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-09 19:05:23,"Can you use ""Niimg-like object"" which is the convention we tried to use everywhere else previously? Bonus points if you add the doc URL too.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
64,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-09 19:21:48,"I assumed that new_img_like would only take an `img` object rather than a niimg-like one. Is this added functionality actually used in the code?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
65,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 19:30:22,"Does anybody know what problem solves this function? From what I understand, if the data is memmaped, it loads it into memory. First:
- Why is this behavior needed?
- Why not using directly the functions provided by nibabel to do so?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
66,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 19:30:46,"Not sure if all SpatialImage have a cache...
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(20, '', u'nilearn/_utils/niimg.py')"
67,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 19:31:47,"Ok, I'll wait a bit before changing that part.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
68,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-09 19:32:30,"> Does anybody know what problem solves this function? From what I understand, if
> the data is memmaped, it loads it into memory. First:

I think that the goal is to prevent memory leaks: when 'get_data' is
called, the niftiimage object has the data attached to it. If a reference
is kept on this object, outside of the function, we have a memory leak,
as the function just loaded data that won't be removed.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
69,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 19:33:45,"No idea what is the difference between an `img` and a `niimg-like`.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
70,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-09 19:46:17,"> No idea what is the difference between an img and a niimg-like.

Hint: one is almost like the other. More seriously `img` is passing the `is_img` check (so it is an object with get_data and get_affine at the moment) whereas niimg-like can go through `check_niimg` so can be an `img` or a string pointing to a nifti file plus the variation with the list of nifti filenames. The URL we added in a lot of docstrings is here: http://nilearn.github.io/building_blocks/manipulating_mr_images.html#niimg.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
71,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 20:56:30,"OK. The official nibabel way to do that is `np.array(img.dataobj)`.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
72,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-09 21:17:08,"> OK. The official nibabel way to do that is np.array(img.dataobj).

I don't think that it was possible when we wrote this code. I remember
having a lengthy discussion with Matthew Brett about this.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
73,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-09 22:40:07,"The same of this function is not exacgtly self-explanatory.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(51, '', u'nilearn/_utils/niimg_conversions.py')"
74,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-09 22:41:10,"Merge conflicts?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(12, '', u'nilearn/_utils/testing.py')"
75,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-09 22:43:10,"Merge conflicts?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(8, '', u'nilearn/image/resampling.py')"
76,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 23:27:53,"OK. I have 2 versions of nibabel: 1.3.0 (has no cache) and 2.0 (has cache and dataobj) so I don't know which version is targeted by this code. I try to do the mean on 10 images from ADHD. I limited the memory. Here is the script:

```
from nilearn import datasets
from nilearn.image import mean_img
import resource


def limit_memory(maxsize):
    soft, hard = resource.getrlimit(resource.RLIMIT_AS)
    resource.setrlimit(resource.RLIMIT_AS, (maxsize, hard))


limit_memory(165152864 * 5)
data = datasets.fetch_adhd(n_subjects=10)
mean_img(data.func)
```

Given that paths are passed to `mean_img`, the caching system should not change anything between the versions. Both should be able to do the mean given the memory limit as they only need to load images one by one.

The result is that they both endup in memory error after 8 images. There must be a leak somewhere but I can't find out where. I'll keep the code as-is but we should maybe investigate that and add some tests.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
77,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-09 23:29:43,"> OK. I have 2 versions of nibabel: 1.3.0 (has no cache) and 2.0 (has cache and
> dataobj) so I don't know which version is targeted by this code.

1.3.0 is targetted. 2.0 wasn't out when we wrote this code.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
78,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 23:38:45,"Do you think that we should open an issue about potential memory leaks?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
79,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-09 23:39:41,"> Do you think that we should open an issue about potential memory leaks?

Yes. With the example that you gave. It's a good one.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
80,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-09 23:40:11,"You should reinitialize a few entries of the header. For instance, the cal_max and cal_min. But you should actually go over the nifti documentation to check what the different fields of the header: not all should be copied.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
81,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 23:40:16,">  Is this added functionality actually used in the code?

Yes, but I can easily fix these cases. However, if one day we want to expose it to the user, I guess that eating niimgs will be mandatory.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
82,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 23:40:48,"No, I just added a blank line for cosmetic pruprose.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(12, '', u'nilearn/_utils/testing.py')"
83,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-09 23:41:28,"> Yes, but I can easily fix these cases. However, if one day we want to
> expose it to the user, I guess that eating niimgs will be mandatory.

The danger is that I have the impression here that you are exhausting the
first image of the iterator. So this code has a nasty side effect.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
84,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 23:48:52,"I'd rather not do that in this PR. It has already gone far beyond what I wanted to do and I guess that the question of which header to keep / update / reset will be subject to debate. For the moment, I mimic the behavior of the current state of nilearn.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
85,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-09 23:56:44,"In fact, this code works with a list but not with a generator. This will be the subject of another PR. In the current state, nilearn is absolutely not iterator/generator friendly as first elements are exhausted here and there. My goal with this PR was to clean the code and prepare the ground for further refactorings. I can deal with these problems in this PR of course but it will take more time.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
86,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-10 00:14:26,"Some code like that may help but there will still be a side effect on the generator provided:

```
def _iter_first(first, iterable):
    yield first
    for i in iterable:
        yield i


def sneak_peek(iterable):
    first = next(iterable)
    return _iter_first(first, iterable), first
```
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
87,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-10 06:23:06,"> Some code like that may help but there will still be a side effect on the
> generator provided:

I think that this is better than the current situation, which is too
fragile.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
88,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-10 07:10:51,"> I'd rather not do that in this PR. It has already gone far beyond what I wanted
> to do and I guess that the question of which header to keep / update / reset
> will be subject to debate. 

Well, the problem is that not resetting some values will give you bugs
that are very hard to debug with the softwares that respect these values.

I suggest that you put 'cal_min', 'cal_max' to zero (which means None in
Nifti terms), or better, to the min and max.

In general, I might even do the following:
{'scl_slope':0, 'scl_inter':0, 'glmax':0, 'glmin':0, 'cal_max':0,
'cal_min':0}

Once again: these things are really tricky, and if you don't do it right,
you'll end up with bugs. I am actually very weary of the nifti header.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/_utils/niimg.py')"
89,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-10 07:34:18,"> 1.3.0 is targetted.

then README.rst and nilearn/version.py should be updated. We are currently requiring nibabel 1.1.0 [there](https://github.com/nilearn/nilearn#dependencies).
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
90,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-10 08:25:55,"> ```
> 1.3.0 is targetted.
> ```
> 
> then README.rst and nilearn/version.py should be updated. We are currently
> requiring nibabel 1.1.0 there.

OK, my answer was wrong. The question was: is it version 1.3.0 or version
2.0 that is targetted. I replied 1.3.0 but I should have replied 2.0.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
91,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-10 10:10:23,"Oh we upgrade to 2.0, cool !
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
92,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-10 10:26:48,"Sorry, typo (doing too much email), I meant 1.1. Of course we don't update to 2.0. It's way too recent.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
93,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-10 10:38:25,"I know ;).
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/_utils/niimg.py')"
20,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-11 09:47:39,"Squashed last commits.
",nan,nan
21,issue_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-12 08:48:45,"Sidenote: doc must be rewritten but I will do that after @GaelVaroquaux's #483 has been merged.
",nan,nan
94,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-12 13:06:25,"Could you use the nibabel update header function here (with a try/except if it's not available in old nibabel versions).
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(91, '', u'nilearn/_utils/niimg.py')"
95,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-16 16:35:08,"So, apparently, update_header only takes care of shape/affines and is called automatically at image creation. If we want things to be done the right way, we should implement our own function to update these values.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(91, '', u'nilearn/_utils/niimg.py')"
96,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-17 17:23:44,"Still don't get this.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/plotting/img_plotting.py')"
97,pull_request_commit_comment,478,nilearn,nilearn,GaelVaroquaux,2015-03-17 17:25:23,"> So, apparently, update_header only takes care of shape/affines and is
> called automatically at image creation. If we want things to be done
> the right way, we should implement our own function to update these
> values.

OK, then let's keep what you have.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(91, '', u'nilearn/_utils/niimg.py')"
98,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-18 12:23:33,"What happens is that this template is added to the plots using `add_overlay`. However, `add_overlay` has an epsilon threshold used to remove numerical noise. This threshold is applied to the image, and thus a new image is created using new_img_like. However, the empty constructor in the template forbids allocation using this code:
`ref_img.__class__(data, affine, header=header)`. This is why I chose a polymorphic constructor to solve this problem.

Several options:
- The polymorphic constructor
- Have a custom type that does not allow modifications
- Use a clever code to fallback to Nifti1Image if a constructor fails in `new_img_like`
- Make the template derive from Nifti1Image and make clever code to find a suitable constructor in super classes in `new_img_like`
- Maybe other options I don't see.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(None, '', u'nilearn/plotting/img_plotting.py')"
99,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-18 14:07:13,"Why is that necessary?
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/tests/test_niimg_conversions.py')"
100,pull_request_commit_comment,478,nilearn,nilearn,lesteve,2015-03-18 14:16:59,"I guess so that you can use `bla.shape` rather than `bla.shape()`. Also IIRC properties are not settable by default so that trying `bla.shape = (3, 2, 1)` will fail.
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/tests/test_niimg_conversions.py')"
101,pull_request_commit_comment,478,nilearn,nilearn,AlexandreAbraham,2015-03-18 14:31:39,":octocat: agrees with ""le steve""
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/tests/test_niimg_conversions.py')"
102,pull_request_commit_comment,478,nilearn,nilearn,banilo,2015-03-18 22:48:40,"> agrees with ""le steve""

hey...that's my trick
",4f65e42284f2750f88acd1390d7f74f7ce1110cc,"(19, '', u'nilearn/tests/test_niimg_conversions.py')"
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,479,nilearn,nilearn,lesteve,2015-03-03 14:54:13,"Off the top of my head, the symmetricity check is just checking (adjacency_matrix == adjacency_matrix.T).all().

I guess we need it a bit more clever than that.
",nan,nan
4,issue_comment,479,nilearn,nilearn,eickenberg,2015-03-03 15:28:26,"Make the comparison with `nan_to_num`? E.g.
`tmp=np.nan_to_num(adjacency_matrix)`
 and `all_close(tmp, tmp.T)` (I don't think there is a function
`nan_equals`)? Or is this too ugly?

On Tue, Mar 3, 2015 at 3:54 PM, Loïc Estève notifications@github.com
wrote:

> Off the top of my head, the symmetricity check is just checking
> (adjacency_matrix == adjacency_matrix.T).all().
> 
> I guess we need it a bit more clever than that.
> 
> —
> Reply to this email directly or view it on GitHub
> https://github.com/nilearn/nilearn/issues/479#issuecomment-76959697.
",nan,nan
5,issue_comment,479,nilearn,nilearn,lesteve,2015-03-03 15:35:10,"I thought of that, but there is the edge case of having a NaN in the element (i, j) and a zero in the (j, i) element. The nan_to_num solution won't catch that. In any case it should be fairly simple to fix.
",nan,nan
6,issue_comment,479,nilearn,nilearn,GaelVaroquaux,2015-03-04 06:57:39,"> I thought of that, but there is the edge case of having a NaN in the
> element (i, j) and a zero in the (j, i) element. The nan_to_num
> solution won't catch that. In any case it should be fairly simple to
> fix.

I think that casting nans to zero is a safe bet.
",nan,nan
7,issue_comment,479,nilearn,nilearn,AlexandreAbraham,2015-03-04 13:15:32,"> I think that casting nans to zero is a safe bet.

:+1:
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
