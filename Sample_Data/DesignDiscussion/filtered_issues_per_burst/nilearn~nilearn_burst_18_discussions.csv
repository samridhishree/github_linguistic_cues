Unnamed: 0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
9,issue_comment,84,nilearn,nilearn,pgervais,2013-06-27 07:33:54,"Sorry for the size of the example, but this is currently the only one in NiLearn that can be used for such a computation (all the others are not coregistered).
",nan,nan
10,pull_request_commit_comment,84,nilearn,nilearn,GaelVaroquaux,2013-08-01 13:06:55,"We don't care about non CPython
",21a9ecd7640f92c77dd0bad67ba64e366aefa3ab,"(None, '', u'nilearn/_utils/logger.py')"
4,issue_comment,84,nilearn,nilearn,GaelVaroquaux,2013-08-01 13:10:19,"Let's:

a) Put comments in the file on the limitation of this approach

b) Merge this guy and move on
",nan,nan
6,issue_comment,84,nilearn,nilearn,pgervais,2013-08-29 11:38:42,"I'm going to need this PR very soon. A final review would be appreciated before merging.
",nan,nan
11,pull_request_commit_comment,84,nilearn,nilearn,GaelVaroquaux,2013-08-29 11:49:20,"This should be in the ""notes"" section of the docstring, at the end.
",21a9ecd7640f92c77dd0bad67ba64e366aefa3ab,"(None, '', u'nilearn/_utils/logger.py')"
12,pull_request_commit_comment,84,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:04:39,"I much prefer string formatting to string algebra (+). It seems to me that you could write the few lines above using string formatting (with an if statement, and maybe a temporary string) and that it would be more readable.
",21a9ecd7640f92c77dd0bad67ba64e366aefa3ab,"(None, '', u'nilearn/_utils/logger.py')"
13,pull_request_commit_comment,84,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:18:21,"Shouldn't we capture sys.stdout to do more than smoke testing?
",21a9ecd7640f92c77dd0bad67ba64e366aefa3ab,"(None, '', u'nilearn/tests/test_logger.py')"
5,issue_comment,84,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:19:07,"Good apart from my comments.
",nan,nan
7,issue_comment,84,nilearn,nilearn,pgervais,2013-08-29 16:20:43,"I made a lot of refactoring, corrected a bug. The code is now much clearer indeed.

@GaelVaroquaux when you have a moment, can you tell me if the tests that I added are fine for you?
",nan,nan
8,issue_comment,84,nilearn,nilearn,pgervais,2013-09-02 13:19:53,"Merged by rebasing.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:22:12,"Travis failed... with what looks as a somewhat trivial bug.
",nan,nan
9,issue_comment,100,nilearn,nilearn,pgervais,2013-08-29 12:23:52,"I didn't check the tests before creating the PR. I'll fix that soon.
",nan,nan
16,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:32:55,"This file need a better name and a better title.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
17,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:34:45,"Why these commented lines?
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
18,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:35:13,"We don't do 'if **name**'... in examples, they have to be as simple as possible.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
19,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:36:53,"I don't think that this should be in a function, but should be in the top-level.

I also think that we should be demoing the object, and not the path function.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
20,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:38:15,"The io module has been move to 'input_data'. You probably have some .pyc files that remain on your hard drive.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
10,issue_comment,100,nilearn,nilearn,pgervais,2013-08-29 12:39:53,"I know that looking at the example is the simplest thing to do. And I also know that there is many things to do, including those that you just pointed out. What I really need is feedback on the core of the algorithm...
",nan,nan
21,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:40:44,"The fact that we need this function is telling me that we have a broken API. It is the role of the objects in input_data to do this, and we _shouldn't_ have to define such functions.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
6,issue_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:43:03,">    I know that looking at the example is the simplest thing to do. And I also
>    know that there is many things to do, including those that you just
>    pointed out. What I really need is feedback on the core of the
>    algorithm...

I need to be able to run it to inspect it.
",nan,nan
22,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:45:54,"I think that you missing a whitespace before the "":"", elsewhere the docstring won't be rendered well by the numpy docstring scrapper (that's true for all docstrings).
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
23,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:46:25,"I'd rather use np.empty here.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
24,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:47:32,"I think that you mean 'n_samples, n_features'. Let's stick to the same vocabulary as with the scikit-learn.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
25,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:48:41,"The last argument should be called 'random_state' as in the scikit-learn, and you should use check_random_state to be as flexible as the scikit-learn is with regards to the input argument.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
26,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:49:06,"Capital ""G"" for ""Gaussian"".
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
27,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:51:44,"I think that this function should be in the public API to be used in an example.

Also, I'd like the notion of 'task' to disappear from the codebase: it is machine learning jargon that will not talk to neuroimagers. We could for instance call this function ""generate_group_sparse_gaussian_graphs"", and rename ""n_tasks"" to ""n_subjects"".
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
28,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:55:02,"Once again, I'd rather use np.empty here.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/signal.py')"
29,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:56:25,"It seems to me that a lot of this could be done using sklearn.utils.gen_even_slices.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/signal.py')"
30,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 12:58:59,"Here also, sklearn.utils.gen_even_slices might be useful.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/signal.py')"
31,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:00:16,"I believe that it should be very fast compared to the rest.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
32,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-29 13:00:26,"True, I realized that recently. There's more than this file to fix ...
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
33,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:00:54,"I am thinking that this should be a callable.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(791, '', u'nilearn/group_sparse_covariance.py')"
34,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:01:23,"I think that I'd like the world 'callable' in the first line of the docstring.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
35,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:05:30,"You should make it a dictionary, I believe, as it will make forward evolution easier.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
36,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:06:27,"I believe that this is 'callable or None'. Note also the missing white-space before the semi-colon.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
37,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-29 13:06:30,"This function is not called by the script. It is a remain of some experiment.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
38,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:09:14,"By number of signals, I think that you mean ""n_features"" in machine learning speech. You should have both (say one in parenthesis): I understand that for a layman ""number of signals"" is more intuitive, but ""n_features"" is more precise for a scikit-learn user.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
39,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-29 13:11:03,"That's possible, but is not the point addressed by this PR. Please open an issue.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
40,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:11:31,"I feel that this should be a private function.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
41,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:11:52,"This should also be private, I believe.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
42,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:12:34,"""display"" should probably be renamed ""verbose"", to stick with scikit-learn conventions.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
43,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:14:21,"Do you need to specify n_tasks and n_var? I believe that you can infer them from emp_covs, which would make the signature of this function lighter.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
44,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:16:06,"I think that writing ""Honorio & Samaras"" would be easier to read for the non-expert (I do realize that this is a comment, by still...)
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
45,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:17:46,"The returns is false: there are 3 return arguments.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
46,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:18:32,"longer names would make it much easier to read for people.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
47,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:18:57,"You should be using scipy.linalg, not np.linalg.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
48,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:21:29,"Why do you have to copy omega?
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
49,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 13:22:59,"It would probably help if you would give the shape of the arrays (and is the above an array)
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
50,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-29 13:30:11,"I didn't know about gen_even_slices when I wrote this function. I'll fix it.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/signal.py')"
51,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-29 13:38:13,"What about ""number of features""? Beside, who are we targetting here? The neuroscientist, or the machine learning user? It the former case, the ""task"" input argument should be renamed ""subjects"". 
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
52,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-29 13:51:18,"To keep track of it along iteration. This has been superseded by the probe system. 
BTW this function is never called in the current code, because the stopping criterion relies on something else now. 
However, before dropping this function altogether, it may be interesting to know if the duality gap computation can be useful to someone.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
53,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-29 13:57:00,"The name of the function is also highly annoying. I keep trying to write things like `rho_max = rho_max(emp_covs, n_samples)`. I think `get_rho_max` or `compute_rho_max` would be better. Is there a scikit-learn convention on this matter?
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
54,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 14:14:12,"On Thu, Aug 29, 2013 at 06:38:14AM -0700, Philippe Gervais wrote:

>    What about ""number of features""? Beside, who are we targetting here? The
>    neuroscientist, or the machine learning user? It the former case, the
>    ""task"" input argument should be renamed ""subjects"".

A bit of both. However, feature is very standard, very tasks is less. It
might be useful to put in some places signals in parenthesis, just to
make things easier for people.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
55,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 14:18:58,">    To keep track of it along iteration. This has been superseded by the probe
>    system.

OK, but in the non CV estimator, isn't it used? I would expect that the
dual gap would be a good stopping criterion in this situation. I think
that we had a conversation on that. No use reminding me what the
conclusion were, just go ahead with what you think is right and drop it
if you feel that there is no use for it.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
56,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-29 14:19:54,">    The name of the function is also highly annoying. I keep trying to write
>    things like rho_max = rho_max(emp_covs, n_samples). I think get_rho_max or
>    compute_rho_max would be better. Is there a scikit-learn convention on
>    this matter?

No, but I think that compute_foo is a good name.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
7,issue_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 08:23:48,"I just noticed that the group_sparse_covariance tests are very long running. We should work on making them faster.
",nan,nan
57,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:08:15,"n_var should be n_features
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
58,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:11:22,"Please tell us in one line what this does (alpha_max may not be clear to somebody not knowing the problem well).
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
59,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:14:26,"true_sub = np.empty_like(sub)
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
60,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:21:32,"Honestly, in empirical_covariances, I would give up on the debug features. By definition, the formula gives us SPD matrices. I know that with numerical errors they _might_ not be, but how often have you seen this happen?
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
61,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:34:01,"n_var -> n_features

Also, the shape description should be on line above.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
62,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:38:19,"I think that you are returning too many things. n_subjects and n_var (which should be named n_features) can be trivially inferred from emp_covs. As a side note, I don't believe that you are using those return arguments in your code.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
63,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:40:17,"I would use 'log_likelihood' or 'log_lik' in the name, rather than score, which is not very specific. Same thing about the 'score' word in the first line.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
64,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:41:00,"I think that we need better names, for instance 'log_lik'.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
65,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 10:42:00,"I believe that this is not the loss, but the objective function, which is the sum of a loss and a regularization.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
66,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 11:40:26,"You should inherit from sklearn.base.BaseEstimator
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
67,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 11:43:13,"self.cv_scores and self.cv_alphas should have a trailing underscore, as they are derived from data.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
68,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 11:47:15,"I don't think that random_state is documented. Anyhow, it should be a more versatile input type, and accept also anything that can be a seed. For this, you need to rely on check_random_state from scikit-learn.

Also, your current implementation has a mutable in its function definition. I don't think that it works as you expect: if you call it twice in the same Python function, it won't give the same result.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
69,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-30 11:47:26,"Granted. I wanted to avoid a call to .shape in an loop. This proved useless later on.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
70,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-30 11:50:14,"This function both returns the log-likelihood, and the quantity optimized by the algorithm, which is the opposite of the log-likelihood, penalized. A good common word for these two unrelated quantities was ""score"". In the case of the log-likelihood, it matches scikit-learn's convention.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
71,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-30 11:50:53,"This has been corrected.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
72,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-08-30 11:56:17,">    This function both returns the log-likelihood, and the quantity optimized
>    by the algorithm, which is the opposite of the log-likelihood, penalized.
>    A good common word for these two unrelated quantities was ""score"". In the
>    case of the log-likelihood, it matches scikit-learn's convention.

I'd call it ""..._scores"", in that case.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
73,pull_request_commit_comment,100,nilearn,nilearn,pgervais,2013-08-30 12:48:54,"I fixed this.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/tests/test_group_sparse_covariance.py')"
74,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-03 17:17:31,"Then shouln't it be removed ?
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/_utils/testing.py')"
75,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-03 17:24:37,"len(subjects) = n_subjects. n_samples varies according to the subject
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/_utils/testing.py')"
76,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-03 17:28:53,"So density controls the sparsity of the square root or of the underlying Autoregresive model. May be this could be made more precise.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(142, '', u'nilearn/_utils/testing.py')"
77,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-03 17:44:17," dtype=np.float
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
78,pull_request_commit_comment,100,nilearn,nilearn,GaelVaroquaux,2013-09-03 19:22:22,"Agreed, if it's not used, it should be removed.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/_utils/testing.py')"
79,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-03 21:10:09,"Maybe a comment on Fortan / C ordering somewhere ? Sorry if I missed it.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
80,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-03 21:15:22,"You call them empirical covariance matrices in other docstrings.
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'nilearn/group_sparse_covariance.py')"
11,issue_comment,100,nilearn,nilearn,bthirion,2013-09-03 21:34:29,"Tnx for the nice work, and sorry for bothering you with details. This PR should obviously get in. 
",nan,nan
12,issue_comment,100,nilearn,nilearn,pgervais,2013-09-05 15:46:32,"I'm now starting to clean up the examples that show off GroupSparseCovarianceCV. There are two files that do almost the same thing: `plot_adhd_covariance.py` and `plot_adhd_covariance2.py`. The first loads data for one subject, and compute a CV'd graph lasso. The second loads data for several subjects and compute a CV'd group-sparse covariance. There are in practice only one thing that differs between them: the optimization algorithm. The code is mostly copy-pasted.

I think keeping only the group-sparse one is enough. What do you think?
",nan,nan
13,issue_comment,100,nilearn,nilearn,pgervais,2013-09-05 15:47:46,"Wait. I already have the answer: compare the two algorithms. 
",nan,nan
8,issue_comment,100,nilearn,nilearn,GaelVaroquaux,2013-09-05 16:37:24,"> Wait. I already have the answer: compare the two algorithms.

Yup
",nan,nan
81,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-05 16:46:01,"Could the title be improved to be more explicit (\alpha=...)? 

Otherwise, the example runs well on my box
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'plot_adhd_covariance2.py')"
14,issue_comment,100,nilearn,nilearn,pgervais,2013-09-11 13:12:54,"In the last commits, I added two pages of documentation. One is about functional connectivity analysis with nilearn (in user's guide, under ""unsupervised learning""), the other is a technical description of the implementation of the group-sparse covariance algorithm. The latter is accessible via a link at the very bottom of the former. This link is rather hard to find, it has been done on purpose: the technical page is for developers or machine-learning guys.
",nan,nan
162,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-11 21:08:06,"gives
",47bddb156c7406532560b7c679e430606a162de0,"(152, 152, u'doc/functional_connectivity.rst')"
82,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-11 21:19:22,"convergence
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'doc/developers/group_sparse_covariance.rst')"
83,pull_request_commit_comment,100,nilearn,nilearn,bthirion,2013-09-11 21:22:01,"criterion
",a895fded9e5cc73dd3ce7f03c1896e1fbf7d83ce,"(None, '', u'doc/developers/group_sparse_covariance.rst')"
15,issue_comment,100,nilearn,nilearn,bthirion,2013-09-11 21:31:55,"Besides a couple of typos, everything looks file. Thanks for the documentation.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
29,pull_request_commit_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 08:39:24,"Tell us more in the docstring.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
30,pull_request_commit_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 08:41:28,"We don't need both an mp4 and a animated gif. If the mp4 works reliably, let's drop the gif. This will avoid to have to pull in some visvis code.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
31,pull_request_commit_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 08:43:01,"The following needs more comments. It is somewhat convoluted.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
32,pull_request_commit_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-04 08:43:19,"Video works reliably but requires matplotlib 1.0.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
33,pull_request_commit_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 08:43:35,"I think that you have too many options. Make choices: do multi_scale or do not. Try you must not.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
34,pull_request_commit_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 08:44:14,"Same thing here: just remove the rest period. No need for an if.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
35,pull_request_commit_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 08:46:27,"> Video works reliably but requires matplotlib 1.0.

It was released in January 2011. Let's move on and use it (yes, I am aware
that this won't work on Ubuntu 10.04 LTS)
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
36,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-04 11:26:53,"just tried the script:

Downloading data from
https://www.nitrc.org/frs/download.php/5853/kamitani.tgz?i_agree=1&download_now=1...
Downloaded 62119936 of 161003254 bytes (38.58%, 15.8min remaining)
...done. (597 seconds, 9 min)
extracting data from
/Users/alex/work/src/nilearn/nilearn_data/kamitani/kamitani.tgz...
Error uncompressing file: CRC check failed 0x4928241c != 0x2d831715L
An error occured, fetching aborted. Please see the full log above.

can anybody reproduce?
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
37,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-04 11:46:09,"if I rerun the script it works... don't ask why.
But I get an error when saving the animation.

In [11]: matplotlib.**version**
Out[11]: '1.3.0'

I get:

/Users/alex/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/matplotlib/backends/backend_agg.pyc
in print_raw(self, filename_or_obj, _args, *_kwargs)
    495             close = False
    496         try:
--> 497             renderer._renderer.write_rgba(filename_or_obj)
    498         finally:
    499             if close:

RuntimeError: Error writing to file
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
38,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-04 11:47:24,"if fails also with the gif:

/Users/alex/work/src/nilearn/plot_kamitani_reconstruction.py in fig2data(fig)
    326     # Get the RGB buffer from the figure
    327     w, h = fig.canvas.get_width_height()
--> 328     buf = np.fromstring(fig.canvas.tostring_rgb(), dtype=np.uint8)
    329     buf.shape = (h, w, 3)
    330     return buf

AttributeError: 'FigureCanvasMac' object has no attribute 'tostring_rgb'

On Wed, Sep 4, 2013 at 1:45 PM, Alexandre Gramfort
alexandre.gramfort@m4x.org wrote:

> if I rerun the script it works... don't ask why.
> But I get an error when saving the animation.
> 
> In [11]: matplotlib.**version**
> Out[11]: '1.3.0'
> 
> I get:
> 
> /Users/alex/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/matplotlib/backends/backend_agg.pyc
> in print_raw(self, filename_or_obj, _args, *_kwargs)
>     495             close = False
>     496         try:
> --> 497             renderer._renderer.write_rgba(filename_or_obj)
>     498         finally:
>     499             if close:
> 
> RuntimeError: Error writing to file
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
20,issue_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-04 14:11:33,"@agramfort I have removed the gif generation. Could you try to rerun the script ?
",nan,nan
4,issue_comment,101,nilearn,nilearn,agramfort,2013-09-04 14:33:18,"the movie error remains.

/Users/alex/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/matplotlib/backends/backend_agg.pyc
in print_raw(self, filename_or_obj, _args, *_kwargs)
    495             close = False
    496         try:
--> 497             renderer._renderer.write_rgba(filename_or_obj)
    498         finally:
    499             if close:

RuntimeError: Error writing to file

On Wed, Sep 4, 2013 at 4:11 PM, Alexandre Abraham
notifications@github.comwrote:

> @agramfort https://github.com/agramfort I have removed the gif
> generation. Could you try to rerun the script ?
> 
> —
> Reply to this email directly or view it on GitHubhttps://github.com/nilearn/nilearn/pull/101#issuecomment-23791948
> .
",nan,nan
21,issue_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-04 14:47:13,"Seems like animation saving relies on a system call to ffmpeg and is not very reliable / cross platform...
",nan,nan
13,issue_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 14:59:55,"> Seems like animation saving relies on a system call to ffmpeg and is not very
> reliable / cross platform...

OK, back to gif, then.
",nan,nan
5,issue_comment,101,nilearn,nilearn,agramfort,2013-09-04 15:05:57,"Fails on my box too :-/

Le 4 sept. 2013 à 16:59, Gael Varoquaux notifications@github.com a écrit :

> > Seems like animation saving relies on a system call to ffmpeg and is not very
> > reliable / cross platform...
> 
> OK, back to gif, then.
> —
> Reply to this email directly or view it on GitHub.
",nan,nan
14,issue_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 15:06:44,"> Fails on my box too :-/

But we can fix this if you send us an actual traceback.
",nan,nan
22,issue_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-04 15:08:22,"> OK, back to gif, then.

Gif generation is broken on MacOS too. This is a very old bug that won't be fixed in a near future I think...
https://github.com/matplotlib/matplotlib/issues/531
",nan,nan
15,issue_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-04 15:13:24,"> Gif generation is broken on MacOS too. This is a very old bug that won't be
> fixed in a near future I think...
> matplotlib/matplotlib#531

Then forget the movie, and just do 10 still images.
",nan,nan
23,issue_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-05 11:31:48,"Maybe I could do 10 images and save the movie in a try ... except ?
",nan,nan
16,issue_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-05 13:02:19,"> Maybe I could do 10 images and save the movie in a try ... except ?

No, let's just avoid spending too much time and code on the movie. I
don't think that its value is that high.
",nan,nan
39,pull_request_commit_comment,101,nilearn,nilearn,bthirion,2013-09-14 20:49:57,"Could you explain somewhere why you use OMP ? For the sake of fficiency or because it works well ?
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
40,pull_request_commit_comment,101,nilearn,nilearn,bthirion,2013-09-14 20:52:37,"Sorry, but could you be a bit more precise than just ""Percentage"" ? May be ""Accuracy (percent)""
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
24,issue_comment,101,nilearn,nilearn,bthirion,2013-09-14 20:53:32,"This is good. Thanks for taking time on this.
",nan,nan
41,pull_request_commit_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-14 21:44:17,"Like other examples, I will add a page in the manual to explain. In this case (reconstruction / multiscale strategy), OMP is slightly faster and gives better results than L1 penalized Logistic Regression (these are the two methods with best results among all I tried).
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
42,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-15 18:56:53,"missing ref
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
43,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-15 18:57:16,"or remove section if empty no?
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
44,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-15 18:58:51,"Reconstruction of visual stimuli (Miyawaki et al. 2008)

Kamitani paper is our jargon :)
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
45,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-15 19:01:46,"y_pred = [clf.predict(X_test) for clf in clfs]

is shorter.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
46,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-15 19:02:40,"why the _ prefix? it is weird to have a private function in an example.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
47,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-15 19:03:23,"no video anymore.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
6,issue_comment,101,nilearn,nilearn,agramfort,2013-09-15 19:05:26,"wdyt of naming miyawaki2008 the dataset instead of kamitani? it's more natural to cite the first author.
so fetch_miyawaki2008 etc.

@GaelVaroquaux any thoughts?
",nan,nan
48,pull_request_commit_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-15 19:36:17,"The reference is below in Notes: paper to cite. Maybe we should put it here.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
49,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-15 19:37:16,"I've seen but it's weird to have an empty section
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
50,pull_request_commit_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-15 19:39:21,"We prefer to put explicit loops for people who are not familiar with list comprehension.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
51,pull_request_commit_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-15 19:41:39,"Fixed.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
52,pull_request_commit_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-15 19:41:47,"Fixed.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
53,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-15 19:47:24,"oh well.... it's a detail anyway.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'plot_kamitani_reconstruction.py')"
17,issue_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-15 21:03:01,"Agreed.

> wdyt of naming miyawaki2008 the dataset instead of kamitani? it's more
> natural to cite the first author. so fetch_miyawaki2008 etc.
",nan,nan
25,issue_comment,101,nilearn,nilearn,bthirion,2013-09-15 21:05:37,"+1
",nan,nan
26,issue_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-15 21:23:00,"Done in the code but I'll have to change the file uploaded on nitrc.
",nan,nan
54,pull_request_commit_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-16 11:35:57,"Fixed.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
55,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-16 17:07:03,"I still see the empty section
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
56,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-16 17:07:26,"I'd remove the

## Notes
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
57,pull_request_commit_comment,101,nilearn,nilearn,agramfort,2013-09-16 17:08:19,"the PR is not up to date apparently.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
7,issue_comment,101,nilearn,nilearn,agramfort,2013-09-16 17:10:52,"examples runs fine now

but I get these warnings

plot_miyawaki_reconstruction.py:109: DeprecationWarning: axis != 0 for ndim == 1; this will raise an error in future versions of numpy
  for y, t, l, b in zip(y_train, yt_tall, yt_large, yt_big)]
plot_miyawaki_reconstruction.py:109: DeprecationWarning: axis != 0 for ndim == 1; this will raise an error in future versions of numpy
  for y, t, l, b in zip(y_train, yt_tall, yt_large, yt_big)]
plot_miyawaki_reconstruction.py:109: DeprecationWarning: axis != 0 for ndim == 1; this will raise an error in future versions of numpy
  for y, t, l, b in zip(y_train, yt_tall, yt_large, yt_big)]
plot_miyawaki_reconstruction.py:109: DeprecationWarning: axis != 0 for ndim == 1; this will raise an error in future versions of numpy
",nan,nan
58,pull_request_commit_comment,101,nilearn,nilearn,ogrisel,2013-09-18 09:50:33,"s/kamitani/Miyawaki/g
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
59,pull_request_commit_comment,101,nilearn,nilearn,ogrisel,2013-09-18 09:52:44,"It would be interesting to state the total size of the data files that will be download by calling this function.
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
60,pull_request_commit_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-19 16:16:43,"Fixed. Thanks for the review !
",213d2cbc389dfd64a7b0e9820e465c270ea20abe,"(None, '', u'nilearn/datasets.py')"
27,issue_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-19 16:17:56,"I have completely replaced ""kamitani"" by ""miyawaki2008"". I have also changed the file on the nitrc server.
Warning: I have rebased the PR on master recently.
",nan,nan
28,issue_comment,101,nilearn,nilearn,AlexandreAbraham,2013-09-19 16:31:33,"I have added a progress output in the example script since it takes nearly 4 minutes to run it on my box.

Is everybody OK for merging ?
",nan,nan
18,issue_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-19 20:43:10,"@eickenberg : could you have a look at this PR? You know the science better than most of us. In particular, could you give feedback on the example?
",nan,nan
8,issue_comment,101,nilearn,nilearn,agramfort,2013-09-19 20:47:24,"I am on it. I'll merge in a bit after a tiny cosmit.
",nan,nan
9,issue_comment,101,nilearn,nilearn,agramfort,2013-09-19 20:49:47,"can you grant me commit rights ??? :(
",nan,nan
10,issue_comment,101,nilearn,nilearn,agramfort,2013-09-19 20:50:07,"I cannot push :(
",nan,nan
19,issue_comment,101,nilearn,nilearn,GaelVaroquaux,2013-09-19 20:53:18,"> can you grant me commit rights ??? :(

Tu as été sage?
",nan,nan
11,issue_comment,101,nilearn,nilearn,agramfort,2013-09-19 20:54:49,"> Tu as été sage?

oui papa
",nan,nan
12,issue_comment,101,nilearn,nilearn,agramfort,2013-09-19 20:55:17,"merged by rebase !
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
8,pull_request_commit_comment,79,nilearn,nilearn,AlexandreAbraham,2013-06-16 20:17:05,"Is the regexp match really necessary since we already have the precise list of images ?
",67ff2466d3fa33039092f0224cb59e9eb136e4af,"(71, 1261, u'nisl/datasets.py')"
9,pull_request_commit_comment,79,nilearn,nilearn,AlexandreAbraham,2013-06-16 20:18:55,"A Reference is recommended for downloads: at least the URL of the dataset and, if relevant, the reference paper for the dataset.
",67ff2466d3fa33039092f0224cb59e9eb136e4af,"(41, 1231, u'nisl/datasets.py')"
4,issue_comment,79,nilearn,nilearn,GaelVaroquaux,2013-06-16 23:10:20,">   • SPM auditory single subject (lagacy dataset, bad quality, but good for
>     demos/examples)
>   • SPM Multimodal fmri faces vs scrambled (I worked with @alex senior on this
>     dataset recently)
>   • FSL (FEEDS single subject)

Can we use these in nilearn, or do these require preprocessing, or GLM
estimation that we cannot do in nilearn? If they cannot be used to write
a nilearn example, they should not be included in nilearn, but maybe
rather in pyprocess.
",nan,nan
5,issue_comment,79,nilearn,nilearn,GaelVaroquaux,2013-06-19 15:00:55,"> Yes they need preprocessing, just like NYU rest and openfmri for example.

Than they should probably go in Pypreprocess for now.
",nan,nan
6,issue_comment,79,nilearn,nilearn,pgervais,2013-08-29 11:46:39,"Since the datasets won't process themselves magically, this PR seems to be useless now. I'm closing it.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
