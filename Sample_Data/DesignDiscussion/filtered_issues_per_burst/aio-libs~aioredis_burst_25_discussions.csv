Unnamed: 0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
2,issue_comment,184,aio-libs,aioredis,popravich,2017-01-17 13:20:13,"TODO:
* [ ] add connect timeout
* [ ] test with slow connection",nan,nan
3,issue_comment,184,aio-libs,aioredis,SeavantUUz,2017-04-27 12:25:02,"I met some problem, but I could not support your suggestion. What I had seen, although redis server is fine, aioredis got stuck too.

In redis-py, why you could pass an optional argument to pool, is redis-py chose block queue as its pool's implement. The timeout argument actually is used to tell pool the queue had been empty for specific time. aioredis used deque as its pool's implement, so you can't pass a timeout.

Maybe you pointed in `socket_timeout` or `socket_keepalive` and so on ? I have added part of them into my project, and waiting for conclusion.
",nan,nan
4,issue_comment,184,aio-libs,aioredis,popravich,2017-04-28 07:59:42,"What I mean is that aioredis can stuck for some time (probably long enough) when using pool,
basically, the call to `ConnectionsPool._create_new_connection()` need to have some timeout
otherwise it will block the whole pool.",nan,nan
5,issue_comment,184,aio-libs,aioredis,pfreixes,2017-05-01 07:16:18,"We might be having this issue, I can work on a fix ASAP",nan,nan
6,issue_comment,184,aio-libs,aioredis,pfreixes,2017-05-12 14:19:36,This can be closed.,nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
2,issue_comment,104,aio-libs,aioredis,popravich,2016-01-23 11:57:16,"Hi, I plan to support Redis Sentinel.

There is also other branch [jettify/aioredis](https://github.com/jettify/aioredis/tree/sentinel).
But there are no any Pull Requests yet.
",nan,nan
3,issue_comment,104,aio-libs,aioredis,jettify,2016-01-23 12:42:21,"Hi our solution is working and we are using it. I have plan to make PR
soon, maybe in the middle of next week.

On Sat, Jan 23, 2016, 13:57 Alexey Popravka notifications@github.com
wrote:

> Hi, I plan to support Redis Sentinel.
> 
> There is also other branch jettify/aioredis
> https://github.com/jettify/aioredis/tree/sentinel.
> But there are no any Pull Requests yet.
> 
> ‚Äî
> Reply to this email directly or view it on GitHub
> https://github.com/aio-libs/aioredis/issues/104#issuecomment-174177627.
",nan,nan
4,issue_comment,104,aio-libs,aioredis,ciscorn,2016-01-23 13:10:33,"OK. Does that impl support connection pooling?
",nan,nan
5,issue_comment,104,aio-libs,aioredis,popravich,2017-01-17 09:53:57,Sentinel feature is now available in master branch; still under development but already working.,nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
2,issue_comment,127,aio-libs,aioredis,popravich,2016-05-31 16:40:45,"Hi, @Artimi 
You can simply create one subscriber and subscribe to pattern `*`
and you'll receive all messages for all channels (including channel name to which message is published) 
",nan,nan
3,issue_comment,127,aio-libs,aioredis,popravich,2016-05-31 16:42:44,"See [this test](https://github.com/aio-libs/aioredis/blob/master/tests/pubsub_commands_test.py#L70-L83) for example
",nan,nan
4,issue_comment,127,aio-libs,aioredis,Artimi,2016-06-02 19:40:56,"Hi @popravich 
Thank you for response. I now see that my question is misleading. In my setup I want several subscribers that will listen to subset of channels available in pubsub. For example I will have channels `1, 2, 3, 4` and two subscribers like this:

```
s1: 1, 2
s2: 4
```

I could subscribe to more channels and listen to all of them with `asyncio.gather` but I would need to somehow reset `get` function from my example.
",nan,nan
5,issue_comment,127,aio-libs,aioredis,bharling,2016-10-29 12:16:05,"+1 from me, It would be nice to have a way to just subscribe a single listener coroutine to a dynamic set of channels and receive all messages on those channels without needing to specify which we're listening to. 

In my project, I have a separate system managing which channels are subscribed by a given listening coroutine and it won't know in advance what those channels are. The subscriptions are also added and removed fairly frequently. 

redis-py does allow this I think? ( example linked below ). In their implementation there appears to just be a 'pubsub' object that is channel agnostic and can subscribe and unsubscribe to any number of channels as needed. This is the behaviour I'm looking for really, but in async üëç 

https://gist.github.com/jobliz/2596594
",nan,nan
6,issue_comment,127,aio-libs,aioredis,khazhyk,2016-11-05 21:04:19,"+1, I passed on this library earlier due to lack of being able to subscribe to multiple patterns on a single listener. Listening to '*' is not ideal, and having to have many channel listeners is also not ideal. A system where a subscriber can subscribe to multiple explicit channels (and only those channels) would be great. 
",nan,nan
7,issue_comment,127,aio-libs,aioredis,popravich,2017-01-11 14:38:20,"Hi @Artimi, @bharling, @khazhyk 
Sorry for long silence.
I have just made a new release `v0.3.0` including requested pub/sub feature ‚Äî aioredis.pubsub.Receiver.
It can be used as follows:
```python
from aioredis.pubsub import Receiver

mpsc = Receiver()

async def single_reader():
    while await mpsc.wait_message():
        sender, message = await mpsc.get()
        print(""Got message {!r} from {!r}"", message, sender.name)
# run reader
asyncio.ensure_future(single_reader())
# use mpsc to add channles
await redis.subscribe(
    mpsc.channel('channel:1'),
    mpsc.channel('channel:3'))
# ...and/or patterns
await redis.psubscribe(mpsc.channel('patt*'))
```
",nan,nan
8,issue_comment,127,aio-libs,aioredis,popravich,2017-01-17 09:56:25,"I'm closing this, if you find any issues using this please open a new one.",nan,nan
9,issue_comment,127,aio-libs,aioredis,bharling,2017-02-08 16:55:07,"Thanks - missed your reply, but thanks for the fix, will have a look when i get a chance",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
