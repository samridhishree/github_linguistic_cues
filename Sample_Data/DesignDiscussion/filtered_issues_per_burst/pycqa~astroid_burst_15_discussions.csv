Unnamed: 0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
2,issue_comment,190,pycqa,astroid,pylint-bot,2015-09-22 11:00:04,"_Original comment by_ **Florian Bruhin (BitBucket: [The-Compiler](http://bitbucket.org/The-Compiler), GitHub: @The-Compiler?)**:

---

This has nothing to do with astroid and is a duplicate of [#214 in pylint](https://bitbucket.org/logilab/pylint/issues/214/the-duplicate-code-r0801-cant-be-disabled) to which Claudiu and I already linked you to via IRC and mailinglist...
",nan,nan
3,issue_comment,190,pycqa,astroid,pylint-bot,2015-09-24 18:34:40,"_Original comment by_ **Claudiu Popa (BitBucket: [PCManticore](http://bitbucket.org/PCManticore), GitHub: @PCManticore)**:

---

Thanks, Florian.
",nan,nan
4,issue_comment,190,pycqa,astroid,bittner,2016-10-13 16:53:23,"Interestingly, I do have the same issue today. I have two test classes (in two files) that are almost identical in one place, but this is by design; as usual this with tests, I suppose. How can I disable the `duplicate-code` warning locally?

The issue linked to Bitbucket above is not accessible anymore. -- Please advise.
",nan,nan
5,issue_comment,190,pycqa,astroid,moylop260,2016-10-14 13:00:37,"This issue is a pylint one.
Duplicated with: https://github.com/PyCQA/pylint/issues/214

FYI I'm waiting testers to receive feedback of the following fix: https://github.com/PyCQA/pylint/pull/1055
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
2,issue_comment,286,pycqa,astroid,ceridwen,2015-12-11 22:28:17,"I don't know how easy moving the changes to raw_building into master will be, astroid's code in general is strongly-coupled.  I've been working to try to fix this, and I think one of our major targets in 2.0 should be to decouple the components more and improve the grouping of related code to make future moves like this easier.

I think the question of if we need an astroid 1.5 depends on how long it takes to release 2.0.  At the moment, assuming we can put together a release next spring, I'd be inclined against it.  If we expect astroid 2.0 to take much longer than that, though, we might consider releasing 1.5.  I'm not sure where the cutoff is---astroid 1.4 took a year, IIRC?  If it happens, astroid 1.5 is probably going to involve backporting more major fixes from 2.0, because we're hitting the point where many of these bugs can't be easily fixed by small changes.
",nan,nan
3,issue_comment,286,pycqa,astroid,PCManticore,2015-12-11 23:30:33,"Yeah, astroid 1.4.0 is or should be the outlier here. Its delay was a combination of circumstances, starting from too many features added to pylint and astroid, too many bugs generated by these features and lack of time on my side in certain months. Ideally, it would have been released in June, but rolling new features into pylint and astroid delayed it until the end of the year.

Anyway, waiting one year for 2.0 for instance is not very good, the idea being to push changes to the users that actually make a difference for them, without being locked by a never-ending design phase. My plan is to have 2.0 out by march-april at best, even if it will require to reduce the feature set.

So this means that if you agree and if this sounds good to you as well, that master and 2.0 should be merged together, at least as soon as you consider 2.0 stable with regard to modular-locals changes. Other minor releases could be cherry-picked from it, as it was done for astroid 1.4.0.
",nan,nan
4,issue_comment,286,pycqa,astroid,PCManticore,2016-01-25 11:29:37,"Most likely no. But after it gets stable, I'd like to integrate it in master and make master 2.0. 
",nan,nan
5,issue_comment,286,pycqa,astroid,PCManticore,2016-01-28 16:46:42,"Closing since we know already what we have to do: 2.0 will get merged into master when it gets stable, there won't be any new minor release (meaning no astroid 1.5, but we'll go straight to 2.0).
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,295,pycqa,astroid,ceridwen,2015-12-15 19:20:17,"I know next to nothing about installing Python on Windows, so I don't know if I comment about that, though I support testing on it.   This might be a good place to handle IronPython, since .NET is Windows-native?  For numpy, I still think we should split off most of brain.
",nan,nan
5,issue_comment,295,pycqa,astroid,PCManticore,2015-12-15 19:26:52,"I agree with the splitting, but in my opinion we should do it after switching completely to GitHub (having Travis and AppVeyor working for most of the cases).
",nan,nan
6,issue_comment,295,pycqa,astroid,PCManticore,2015-12-15 19:27:56,"Yeah, we could add IronPython as well, after having the basic blocks integrated.
",nan,nan
7,issue_comment,295,pycqa,astroid,The-Compiler,2015-12-16 05:35:32,"https://ci.appveyor.com/project/pylint-bot/pylint and https://ci.appveyor.com/project/pylint-bot/astroid are up and running. :wink:
",nan,nan
8,issue_comment,295,pycqa,astroid,PCManticore,2015-12-16 08:46:21,"Thanks @The-Compiler ! By the way, I think you need to add the hooks for the project. I pushed a commit, but no build was triggered or am I doing something wrong?
",nan,nan
9,issue_comment,295,pycqa,astroid,PCManticore,2015-12-16 09:10:26,"Let's merge it as is and we'll do a test PR shortly.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,pull_request_commit_comment,297,pycqa,astroid,PCManticore,2015-12-17 18:11:05,"Did you see my comment from https://bitbucket.org/logilab/astroid/pull-requests/98/add-support-for-inference-on-threadinglock/diff regarding transforms vs inference tip?
",1586fb45afa2918977e1f3a764273e9b4f2abeee,"(20, '', u'astroid/brain/brain_stdlib.py')"
5,pull_request_commit_comment,297,pycqa,astroid,lmedioni,2015-12-18 12:35:12,"Sorry. You're right but I'm running out of time... Would it be OK if I modify the module transform to have Lock being a function? 
",1586fb45afa2918977e1f3a764273e9b4f2abeee,"(20, '', u'astroid/brain/brain_stdlib.py')"
3,issue_comment,297,pycqa,astroid,PCManticore,2015-12-21 16:04:33,"Merged with a couple of small changes https://github.com/PyCQA/astroid/commit/af0e3f5658097a21b78e3008854fa02ddbfc0ab3. I changed it to a function, which returns an instance of a lock class.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
4,issue_comment,298,pycqa,astroid,The-Compiler,2015-12-20 12:17:12,"I'm not very familiar with this to be honest... isn't third-party stuff in `dist-packages` or `site-packages` usually?
",nan,nan
5,issue_comment,298,pycqa,astroid,PCManticore,2015-12-20 12:57:45,"Yeah, but on some OSes (Ubuntu for instance), they get installed in /usr/local/lib rather than /usr/lib. I'm not familiar either..
",nan,nan
6,issue_comment,298,pycqa,astroid,dmand,2015-12-20 13:14:13,"IIRC, latest versions of pip install packages into `~/.local/lib`.
",nan,nan
7,issue_comment,298,pycqa,astroid,PCManticore,2015-12-20 13:42:52,"We might solve https://github.com/PyCQA/pylint/issues/536 with a similar change.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
2,issue_comment,299,pycqa,astroid,PCManticore,2015-12-21 15:57:33,"This is something that occurred during the patch release of astroid (1.4.2) and it's already fixed with https://github.com/PyCQA/astroid/commit/8715ea4491e435969d943918fb7a7bca9d95be28. I'm going to create another patch release tonight, sorry for the inconvenience.
",nan,nan
3,issue_comment,299,pycqa,astroid,opalmer,2015-12-21 15:58:36,"Ah ok cool, thanks!  I should have looked at the commit log before opening this heh.
",nan,nan
4,issue_comment,299,pycqa,astroid,PCManticore,2015-12-29 15:09:06,"This is fixed by astroid 1.4.3, I forgot to close the issue when it was released (for a couple of days now).
",nan,nan
5,issue_comment,299,pycqa,astroid,The-Compiler,2015-12-29 17:07:23,"I can confirm the fix - thanks!
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
