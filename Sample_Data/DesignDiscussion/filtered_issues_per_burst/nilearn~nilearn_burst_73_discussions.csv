Unnamed: 0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
5,issue_comment,1053,nilearn,nilearn,banilo,2016-03-10 12:13:57,"Good catch. We should probably get that fixed.
",nan,nan
6,issue_comment,1053,nilearn,nilearn,KamalakerDadi,2016-07-06 12:27:29,"I am trying to figure out how to change csv file corrected for white spaces. How can I ?
",nan,nan
3,issue_comment,1053,nilearn,nilearn,GaelVaroquaux,2016-07-06 12:29:19,"> I am trying to figure out how to change csv file corrected for white
> spaces. How can I ?

What is the question: do you want to change the file that is hosted on
the website?
",nan,nan
7,issue_comment,1053,nilearn,nilearn,KamalakerDadi,2016-07-06 12:31:02,"In general, How can I solve this issue ?

> What is the question: do you want to change the file that is hosted on the website?

Yes, Can I ?
",nan,nan
4,issue_comment,1053,nilearn,nilearn,GaelVaroquaux,2016-07-06 12:33:04,"> ```
> What is the question: do you want to change the file that is hosted
> on the website?
> ```
> 
> Yes, Can I ?

No, you can upload a new one, but not override the present one.
",nan,nan
8,issue_comment,1053,nilearn,nilearn,KamalakerDadi,2016-07-08 12:01:04,"> No, you can upload a new one

Ok. I have managed to upload in nitrc. PR ?
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
5,issue_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-10 12:32:41,"Two things:

First, the mechanism used to turn off globbing should also turn this off.

Second, in terms of avoiding user error, I think that one think that we could do is that if len(os.path.split(dirname)) > 1, we should check if the base directory exists. If it doesn't exist, we should bail out, and give a very explicit error message. That error message should check if the path has been expanded, and if so explain what has happened to the user, and how to avoid this (for instance with '~""). That way, if a user gets path expansion by mistake, he/she understand what is going on.
",nan,nan
11,issue_comment,1054,nilearn,nilearn,aabadie,2016-03-10 13:38:44,"> Two things

Done
",nan,nan
12,issue_comment,1054,nilearn,nilearn,aabadie,2016-03-10 13:39:53,"> give a very explicit error message. That error message should check if the path has been expanded, and if so explain what has happened to the user, and how to avoid this (for instance with '~""). That way, if a user gets path expansion by mistake, he/she understand what is going on.

I think I missed the second part of this point. Will update my changes.
",nan,nan
13,issue_comment,1054,nilearn,nilearn,aabadie,2016-03-10 14:19:22,"@GaelVaroquaux, to me there's no real problem with adding  `os.path.expanduser`. In fact, the problem comes from Memory which doesn't user `os.path.expanduser`. Also note that Memory [always creates ](https://github.com/joblib/joblib/blob/master/joblib/memory.py#L830) cache path if it doesn't exists.

My conclusion is:
1. to always use `os.path.expanduser`
2. to also use `os.path.expanduser` in  joblib.Memory 
",nan,nan
6,issue_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-10 14:22:19,"> @GaelVaroquaux, to me there's no real problem with adding os.path.expanduser.
> In fact, the problem comes from Memory which doesn't user os.path.expanduser.
> Also note that Memory always creates cache path if it doesn't exists.
> 
> My conclusion is:
> 1. to always use os.path.expanduser

I disagree: what if a user (ie windows user) has a '~' in a directory
name. That user will be very very surprised, and will not understand
what's going on.

> 1. to also use os.path.expanduser in joblib.Memory

There is no globbing/expansion logic in joblib. I don't want to add any.
It's not the feeling of the library.
",nan,nan
14,issue_comment,1054,nilearn,nilearn,aabadie,2016-03-10 15:32:13,"> what if a user (ie windows user) has a '~' in a directory name. That user will be very very surprised, and will not understand what's going on.

Reading the [doc](https://docs.python.org/2/library/os.path.html#os.path.expanduser), only initial `~` is taken in to account. On windows, `~` might be used by the system at the end of long paths. It will be fine.
If the user created a directory starting with `~`, to me this is because he is looking for troubles, this is a very rare case.

> There is no globbing/expansion logic in joblib. I don't want to add any. It's not the feeling of the library.

Ok
",nan,nan
19,issue_comment,1054,nilearn,nilearn,AlexandreAbraham,2016-03-10 15:37:57,"> If the user created a directory starting with ~, to me this is because he is looking for troubles, this is a very rare case.

Agreed. However, as a Windows developper, I will never ever try to use `~` to reach home, my first reflex (if I am agnostic to Python path policy) would be to use `%UserProfile%`. In that case, `expandvars` is far more important than `expanduser`.

Given that this cross-platform case is very poorly handled by Python, I agree with Gael to the fact that we should let the user find its own path (how poetic).
",nan,nan
22,pull_request_commit_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-10 15:44:36,"Naming suggest CacheMixinTest, this is not really a Mock.
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/tests/test_cache_mixin.py')"
15,issue_comment,1054,nilearn,nilearn,aabadie,2016-03-10 17:15:28,"@GaelVaroquaux, I pushed a couple of commits that should work on CI and implement most of your requirements. Let me know if it's ok.

@AlexandreAbraham, about the  `expandvars`, I agree that it would be great. Maybe another PR ?
",nan,nan
7,issue_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-10 18:06:22,"> @AlexandreAbraham, about the expandvars, I agree that it could be great. Maybe another PR ?

I actually didn't get what you mean here.
",nan,nan
20,issue_comment,1054,nilearn,nilearn,AlexandreAbraham,2016-03-10 21:23:05,"> I actually didn't get what you mean here.

I was just saying that, on Windows, the canonical way to refer to the home directory is to use the environment variable `%UserProfile%` and thus, applying `expandvars` on the path is more important than applying `expandpath`. This was to underline the fact that `expandpath` is not mandatory and that, in any case, there is no ""good"" way in python to handle path. But I did not mean to integrate it, I meant that this should be left to the user.
",nan,nan
8,issue_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-10 21:24:16,"> I was just saying that, on Windows, the canonical way to refer to the home
> directory is to use the environment variable %UserProfile% and thus, applying
> expandvars on the path is more important than applying expandpath. This was to
> underline the fact that expandpath is not mandatory and that, in any case,
> there is no ""good"" way in python to handle path. But I did not mean to
> integrate it, I meant that this should be left to the user.

OK. 99.9% of our Windows users will not even understand the discussion,
so we can safely skip.
",nan,nan
21,issue_comment,1054,nilearn,nilearn,AlexandreAbraham,2016-03-10 21:30:08,"Windows users will probably use `right click on the folder > properties > absolute path` so, no worries!
",nan,nan
16,issue_comment,1054,nilearn,nilearn,aabadie,2016-03-11 11:53:50,"@GaelVaroquaux, @AlexandreAbraham, All tests passed. Can you make a quick review ?
",nan,nan
17,issue_comment,1054,nilearn,nilearn,aabadie,2016-03-15 09:14:10,"Ping @AlexandreAbraham, @GaelVaroquaux, for review :)
",nan,nan
23,pull_request_commit_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-15 20:11:14,"Here you should probably mention the variable to disable this behavior
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
9,issue_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-15 20:13:47,"One small comment on the error message.  But aside from that,  +1 to merge
",nan,nan
24,pull_request_commit_comment,1054,nilearn,nilearn,AlexandreAbraham,2016-03-15 21:50:56,"Is this case really necessary? Isn't that handled by joblib?
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
25,pull_request_commit_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-15 21:51:58,"> Is this case really necessary? Isn't that handled by joblib?

No: joblib creates it, including if the subdirectories don't exist.
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
26,pull_request_commit_comment,1054,nilearn,nilearn,AlexandreAbraham,2016-03-15 21:56:44,"So why raising an error ? If I understand the code well, my usecase the most common, ie `memory='cache/something'` is going to raise an error.
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
27,pull_request_commit_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-15 21:58:13,"> So why raising an error ? If I understand the code well, my usecase the most
> common, ie memory='cache' is going to raise an error.

Nope. Because we raise an error only if the directory one step above
doesn't exist. Ie ""tmp/cache"" would raise an error if tmp does not
exists.
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
28,pull_request_commit_comment,1054,nilearn,nilearn,AlexandreAbraham,2016-03-15 22:07:51,"Precisely, I don't see why we should raise an error in a case that is considered valid by joblib. I don't see the rationale.
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
29,pull_request_commit_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-15 22:08:34,"> Precisely, I don't see why we should raise an error in a case that is
> considered valid by joblib. I don't see the rationale.

Typos lead to creation of random paths across the file system.
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
30,pull_request_commit_comment,1054,nilearn,nilearn,aabadie,2016-03-16 08:41:43,"I pushed the error message change suggested by @GaelVaroquaux. 
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
31,pull_request_commit_comment,1054,nilearn,nilearn,AlexandreAbraham,2016-03-16 09:05:55,"I always thought of joblib as a random path generator anyway :P.
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
32,pull_request_commit_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-16 09:10:20,"> I always thought of joblib as a random path generator anyway :P.

pseudo random, sir! It isn't coupled to a shot-noise sensor.
",d89a2bb7c8e049fe9847fa8bf5160123893fe6ec,"(None, '', u'nilearn/_utils/cache_mixin.py')"
18,issue_comment,1054,nilearn,nilearn,aabadie,2016-03-17 15:41:13,"@GaelVaroquaux @AlexandreAbraham , all checks are green. Maybe we can merge this one ?
",nan,nan
10,issue_comment,1054,nilearn,nilearn,GaelVaroquaux,2016-03-17 15:42:02,"Yup! Merging
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
6,issue_comment,1045,nilearn,nilearn,lesteve,2016-03-03 15:18:51,"It looks like the bug mentioned in https://github.com/nilearn/nilearn/issues/712 has been fixed since. See http://www.sphinx-doc.org/en/stable/changes.html#release-1-3-2-released-nov-29-2015 and search for autosummary. So in principle we don't need to use sphinx=1.2.3 anymore. Maybe worth investigating.
",nan,nan
5,issue_comment,1045,nilearn,nilearn,aabadie,2016-03-09 15:10:45,"@GaelVaroquaux, @lesteve, I pushed a fix for generating the documentation with python 3.5 on circle ci. It works now. Can you verify the generated documentation is ok ? https://circle-artifacts.com/gh/aabadie/nilearn/300/artifacts/0/home/ubuntu/nilearn/doc/_build/html/index.html
",nan,nan
7,issue_comment,1045,nilearn,nilearn,lesteve,2016-03-09 15:34:37,"The doc looks fine if you compare [old CircleCI build with sphinx 1.3.1](https://circle-artifacts.com/gh/nilearn/nilearn/150/artifacts/0/home/ubuntu/nilearn/doc/_build/html/modules/reference.html#module-nilearn.datasets) vs [this PR build](https://circle-artifacts.com/gh/aabadie/nilearn/300/artifacts/0/home/ubuntu/nilearn/doc/_build/html/modules/reference.html#module-nilearn.datasets).
",nan,nan
9,pull_request_commit_comment,1045,nilearn,nilearn,lesteve,2016-03-10 08:31:20,"This is slightly weird that you need to add that, but let's move on !
",1b78f1813593581debc67321542d8118b8add2e7,"(7, '', u'doc/conf.py')"
8,issue_comment,1045,nilearn,nilearn,lesteve,2016-03-10 08:31:43,"LGTM merging !
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
3,issue_comment,1000,nilearn,nilearn,GaelVaroquaux,2016-02-19 14:54:12,"We can't have a build matrix. That would be too costly. 

I might be convinced to change the default python to 3 on circle,  though

Sent from my phone. Please forgive brevity and mis spelling

On Feb 19, 2016, 15:50, at 15:50, Arthur Mensch notifications@github.com wrote:

> Given the issue #999 #998, it would be a good idea to run the example
> set in Python 3. Does CircleCI allows build matrix ?
> 
> By the way this is the issue #1000, cheers
> 
> ---
> 
> Reply to this email directly or view it on GitHub:
> https://github.com/nilearn/nilearn/issues/1000
",nan,nan
4,issue_comment,1000,nilearn,nilearn,lesteve,2016-03-02 14:27:47,"Have you tried running the examples examples/02_decoding/plot_mixed_gambles_space_net.py with python 3 ?
",nan,nan
5,issue_comment,1000,nilearn,nilearn,lesteve,2016-03-02 14:56:59,"Have you seen that @arthurmensch opened the issue #998 and #999? Looks like you fixed #999 already maybe you want to open a PR for it.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
