Unnamed: 0,rectype,issueid,project_owner,project_name,actor,time,text,action,title
4,issue_comment,268,idan,oauthlib,whit537,2014-09-17 15:52:43,"Hmm ... Facebook also doesn't include a `token_type`, which is hard-required in [`validate_token_parameters`](https://github.com/idan/oauthlib/blob/8fcceae9ef2d6e3c0cdf38b12ac71bc538dd6432/oauthlib/oauth2/rfc6749/parameters.py#L315-L316). Raising an exception seems to me to violate the [robustness principle](http://en.wikipedia.org/wiki/Robustness_principle):

> [C]ode that sends commands or data to other machines (or to other programs on the same machine) should conform completely to the specifications, but code that receives input should accept non-conformant input as long as the meaning is clear.

In `Client` we [default](https://github.com/idan/oauthlib/blob/8fcceae9ef2d6e3c0cdf38b12ac71bc538dd6432/oauthlib/oauth2/rfc6749/clients/base.py#L34) to a token type of `Bearer`, and we [gracefully degrade](https://github.com/idan/oauthlib/blob/8fcceae9ef2d6e3c0cdf38b12ac71bc538dd6432/oauthlib/oauth2/rfc6749/clients/base.py#L182-L183) if `token_type` is not present in the params [passed](https://github.com/idan/oauthlib/blob/8fcceae9ef2d6e3c0cdf38b12ac71bc538dd6432/oauthlib/oauth2/rfc6749/clients/web_application.py#L272) to `_populate_attributes` after calling `parse_token_response` (under which we call `validate_token_parameters`). I can see raising if there is no access token: the meaning would not be clear in that case. For `token_type` I think we should raise only if the developer wants strict parsing.
",nan,nan
5,issue_comment,268,idan,oauthlib,whit537,2014-09-17 18:29:59,"Okay! Ready for review. :-)
",nan,nan
6,issue_comment,268,idan,oauthlib,whit537,2014-09-17 18:30:27,"cc: @ib-lundgren @idan @singingwolfboy @gulopine
",nan,nan
7,issue_comment,268,idan,oauthlib,singingwolfboy,2014-09-18 15:07:52,"LGTM, but you should document the `OAUTHLIB_STRICT_TOKEN_TYPE` envvar somewhere.
",nan,nan
11,pull_request_commit_comment,268,idan,oauthlib,ib-lundgren,2014-09-22 13:05:31,"Maybe we should simply add token type Bearer here in non-strict mode. Ideally logging that so was done on DEBUG level.
",c49028af26b89ebdc08a72d3cebbf553fa0ddef6,"(41, '', u'oauthlib/oauth2/rfc6749/parameters.py')"
8,issue_comment,268,idan,oauthlib,ib-lundgren,2014-09-22 13:13:28,"Looks good :) 

Maybe add a comment in http://oauthlib.readthedocs.org/en/latest/oauth2/clients/client.html  (change docs as you like btw).
",nan,nan
12,pull_request_commit_comment,268,idan,oauthlib,whit537,2014-09-22 13:36:53,"I figured we could depend on the default behavior of the calling class, as described [above](https://github.com/idan/oauthlib/pull/268#issuecomment-55915122).
",c49028af26b89ebdc08a72d3cebbf553fa0ddef6,"(41, '', u'oauthlib/oauth2/rfc6749/parameters.py')"
13,pull_request_commit_comment,268,idan,oauthlib,ib-lundgren,2014-09-22 13:39:13,"Fair enough.
",c49028af26b89ebdc08a72d3cebbf553fa0ddef6,"(41, '', u'oauthlib/oauth2/rfc6749/parameters.py')"
9,issue_comment,268,idan,oauthlib,whit537,2014-09-22 14:08:12,"@ib-lundgren It seemed better to add documentation to http://oauthlib.readthedocs.org/en/latest/oauth2/tokens/tokens.html. Look okay to you? :-)
",nan,nan
10,issue_comment,268,idan,oauthlib,whit537,2014-09-22 14:43:15,"Yay! Thanks @ib-lundgren! :D
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
2,issue_comment,267,idan,oauthlib,ib-lundgren,2014-09-22 13:02:03,"I've worked around this in requests-oauthlib by converting facebook to json encoding but never yet got around to doing a semi-intelligent fixing of responses directly in oauthlib. 
",nan,nan
3,issue_comment,267,idan,oauthlib,whit537,2014-09-22 13:58:12,"@ib-lundgren Glad to hear I wasn't the first to run into this issue! I couldn't imagine I was the first to try using `oauthlib` (via `requests-oauthlib`) with Facebook. :-)
",nan,nan
4,issue_comment,267,idan,oauthlib,whit537,2014-09-22 14:15:12,"And I did consider casting to JSON in the Facebook case, but that could only really happen in the `requests-oauthlib` layer. It seemed better to push this behavior down further, so that, on the one hand, other libraries also depending on `oauthlib` will get the fix, and on the other, we can be robust in the face of other providers besides Facebook that use the old, non-JSON behavior.
",nan,nan
 , , , , , , , , , 
 , , , , , , , , , 
