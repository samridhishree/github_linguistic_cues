,rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text,Test,formatted_time
2,issue_closed,400,pycqa,astroid,rogalski,2017-03-01 18:47:31,,closed issue,Asynchronous comprehensions,,N,2017-02-07 21:49:58
4,pull_request_merged,400,pycqa,astroid,rogalski,2017-03-01 18:47:31,Asynchronous comprehensions,bf3d6876c310b39d045f6338ec8b93d2b1967072,Pull request merge from rogalski/astroid:async_comprehensions to PyCQA/astroid:master,asynchron comprehens,N,2017-02-07 21:54:01
5,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 21:54:01,"
[![Coverage Status](https://coveralls.io/builds/10042723/badge)](https://coveralls.io/builds/10042723)

Coverage decreased (-2.03%) to 87.275% when pulling **edee41c6ffbc7fddbfada91b7d0b069a46b6d648 on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,,coverag statu coverag decreas 203 87275 pull edee41c6ffbc7fddbfada91b7d0b069a46b6d648 rogalskiasynccomprehens 9ee1f58ba91a52148829a781f3bfcff6f659139 pycqamast,N,2017-02-07 21:57:34
6,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 21:57:34,"
[![Coverage Status](https://coveralls.io/builds/10042781/badge)](https://coveralls.io/builds/10042781)

Coverage decreased (-2.03%) to 87.275% when pulling **df99e25f292aa987f6c533f461666095781e6eed on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,,coverag statu coverag decreas 203 87275 pull df99e25f292aa987f6c533f461666095781e6e rogalskiasynccomprehens 9ee1f58ba91a52148829a781f3bfcff6f659139 pycqamast,N,2017-02-07 22:01:48
7,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:01:48,"
[![Coverage Status](https://coveralls.io/builds/10042803/badge)](https://coveralls.io/builds/10042803)

Coverage increased (+0.008%) to 89.311% when pulling **df99e25f292aa987f6c533f461666095781e6eed on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,,coverag statu coverag increas 0008 89311 pull df99e25f292aa987f6c533f461666095781e6e rogalskiasynccomprehens 9ee1f58ba91a52148829a781f3bfcff6f659139 pycqamast,N,2017-02-07 22:09:01
8,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:09:01,"
[![Coverage Status](https://coveralls.io/builds/10042923/badge)](https://coveralls.io/builds/10042923)

Coverage increased (+0.008%) to 89.311% when pulling **30dad28076353d8890b6542e60117d6205fc97ba on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,,coverag statu coverag increas 0008 89311 pull 30dad28076353d8890b6542e60117d6205fc97ba rogalskiasynccomprehens 9ee1f58ba91a52148829a781f3bfcff6f659139 pycqamast,N,2017-02-07 22:09:01
9,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:09:01,"
[![Coverage Status](https://coveralls.io/builds/10042923/badge)](https://coveralls.io/builds/10042923)

Coverage increased (+0.008%) to 89.311% when pulling **30dad28076353d8890b6542e60117d6205fc97ba on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,,coverag statu coverag increas 0008 89311 pull 30dad28076353d8890b6542e60117d6205fc97ba rogalskiasynccomprehens 9ee1f58ba91a52148829a781f3bfcff6f659139 pycqamast,N,2017-02-07 22:09:01
10,issue_comment,400,pycqa,astroid,coveralls,2017-02-07 22:09:01,"
[![Coverage Status](https://coveralls.io/builds/10042923/badge)](https://coveralls.io/builds/10042923)

Coverage increased (+0.008%) to 89.311% when pulling **30dad28076353d8890b6542e60117d6205fc97ba on rogalski:async_comprehensions** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,,coverag statu coverag increas 0008 89311 pull 30dad28076353d8890b6542e60117d6205fc97ba rogalskiasynccomprehens 9ee1f58ba91a52148829a781f3bfcff6f659139 pycqamast,N,2017-02-07 22:09:01
20,pull_request_commit_comment,400,pycqa,astroid,PCManticore,2017-02-09 08:24:25,"A comment should be enough here. If I remember correctly, docstrings have special meaning in unittests.",714abcc4758ff2120a0824533a2d075a8a57da69,"(None, '', u'astroid/tests/unittest_python3.py')",A comment enough If I rememb correctli docstr special mean unittest,N,2017-02-07 21:49:36
21,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-07 21:49:36,Initial support for asynchronous comprehensions,d50417eea03d2e0098f4309166acc4aff652f51b,,initi support asynchron comprehens,N,2017-02-07 21:53:20
22,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-07 21:53:20,"Fix obvious regression for older interpreters, remove redundant comment",edee41c6ffbc7fddbfada91b7d0b069a46b6d648,,fix obviou regress older interpret remov redund comment,N,2017-02-07 21:56:43
23,pull_request_commit,400,pycqa,astroid,rogalski,2017-02-07 21:56:43,Fix regression part2: add default value for getattr (...),df99e25f292aa987f6c533f461666095781e6eed,,fix regress part2 add default valu getattr,N,2017-02-07 22:04:10
19,issue_comment,394,pycqa,astroid,coveralls,2017-01-31 08:05:30,"
[![Coverage Status](https://coveralls.io/builds/9919171/badge)](https://coveralls.io/builds/9919171)

Coverage increased (+0.02%) to 89.326% when pulling **437560727e58b738c660b273c85bcea5badb4e71 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 002 89326 pull 437560727e58b738c660b273c85bcea5badb4e71 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-05 13:54:18
20,issue_comment,394,pycqa,astroid,rr-,2017-02-05 13:54:18,"Updated~ (made separate commit to ease the review, it's to be squashed at later time)",,,updat made separ commit eas review squash later time,N,2017-02-05 13:59:03
21,issue_comment,394,pycqa,astroid,coveralls,2017-02-05 13:59:03,"
[![Coverage Status](https://coveralls.io/builds/10001677/badge)](https://coveralls.io/builds/10001677)

Coverage increased (+0.03%) to 89.332% when pulling **b7c88492163f36559dad3c673b81566f48ab03a2 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89332 pull b7c88492163f36559dad3c673b81566f48ab03a2 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-05 13:59:03
22,issue_comment,394,pycqa,astroid,coveralls,2017-02-05 13:59:03,"
[![Coverage Status](https://coveralls.io/builds/10001677/badge)](https://coveralls.io/builds/10001677)

Coverage increased (+0.03%) to 89.332% when pulling **b7c88492163f36559dad3c673b81566f48ab03a2 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89332 pull b7c88492163f36559dad3c673b81566f48ab03a2 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-05 13:59:03
23,issue_comment,394,pycqa,astroid,coveralls,2017-02-05 13:59:03,"
[![Coverage Status](https://coveralls.io/builds/10001677/badge)](https://coveralls.io/builds/10001677)

Coverage increased (+0.03%) to 89.332% when pulling **b7c88492163f36559dad3c673b81566f48ab03a2 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89332 pull b7c88492163f36559dad3c673b81566f48ab03a2 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-05 13:59:03
24,issue_comment,394,pycqa,astroid,coveralls,2017-02-05 13:59:03,"
[![Coverage Status](https://coveralls.io/builds/10001677/badge)](https://coveralls.io/builds/10001677)

Coverage increased (+0.03%) to 89.332% when pulling **b7c88492163f36559dad3c673b81566f48ab03a2 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89332 pull b7c88492163f36559dad3c673b81566f48ab03a2 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-05 13:59:03
25,issue_comment,394,pycqa,astroid,coveralls,2017-02-05 13:59:03,"
[![Coverage Status](https://coveralls.io/builds/10001677/badge)](https://coveralls.io/builds/10001677)

Coverage increased (+0.03%) to 89.332% when pulling **b7c88492163f36559dad3c673b81566f48ab03a2 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89332 pull b7c88492163f36559dad3c673b81566f48ab03a2 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 15:44:06
26,issue_comment,394,pycqa,astroid,ceridwen,2017-02-07 15:44:06,"I'm going to merge this tomorrow or so if there are no more comments, unless someone else wants to do it.  The remaining CI failure looks like a misconfiguration of pylint somehow.",,,Im go merg tomorrow comment unless someon els want the remain CI failur look like misconfigur pylint somehow,N,2017-02-07 16:51:19
27,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 16:51:19,"
[![Coverage Status](https://coveralls.io/builds/10036976/badge)](https://coveralls.io/builds/10036976)

Coverage increased (+0.03%) to 89.335% when pulling **5bd21c2d1caaf4783a3b07892c1690c3f8629f6c on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89335 pull 5bd21c2d1caaf4783a3b07892c1690c3f8629f6c rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 16:51:19
28,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 16:51:19,"
[![Coverage Status](https://coveralls.io/builds/10036976/badge)](https://coveralls.io/builds/10036976)

Coverage increased (+0.03%) to 89.335% when pulling **5bd21c2d1caaf4783a3b07892c1690c3f8629f6c on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89335 pull 5bd21c2d1caaf4783a3b07892c1690c3f8629f6c rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 16:51:19
29,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 16:51:19,"
[![Coverage Status](https://coveralls.io/builds/10036976/badge)](https://coveralls.io/builds/10036976)

Coverage increased (+0.03%) to 89.335% when pulling **5bd21c2d1caaf4783a3b07892c1690c3f8629f6c on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89335 pull 5bd21c2d1caaf4783a3b07892c1690c3f8629f6c rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 16:54:27
30,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 16:54:27,"
[![Coverage Status](https://coveralls.io/builds/10037020/badge)](https://coveralls.io/builds/10037020)

Coverage increased (+0.03%) to 89.335% when pulling **5bd21c2d1caaf4783a3b07892c1690c3f8629f6c on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89335 pull 5bd21c2d1caaf4783a3b07892c1690c3f8629f6c rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 17:02:18
31,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 17:02:18,"
[![Coverage Status](https://coveralls.io/builds/10037203/badge)](https://coveralls.io/builds/10037203)

Coverage increased (+0.03%) to 89.335% when pulling **f39ab6377dce29292f8e8b8867f571b1e99eb73a on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89335 pull f39ab6377dce29292f8e8b8867f571b1e99eb73a rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 20:45:53
32,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 20:45:53,"
[![Coverage Status](https://coveralls.io/builds/10041540/badge)](https://coveralls.io/builds/10041540)

Coverage increased (+0.03%) to 89.335% when pulling **275ff6135e7befc807e0f6169a7c5b7b69a15d48 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89335 pull 275ff6135e7befc807e0f6169a7c5b7b69a15d48 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:35:57
33,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:35:57,"
[![Coverage Status](https://coveralls.io/builds/10043400/badge)](https://coveralls.io/builds/10043400)

Coverage increased (+0.03%) to 89.336% when pulling **462925a0942847272744b1742a6bbfc4e83d38b1 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89336 pull 462925a0942847272744b1742a6bbfc4e83d38b1 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:35:57
34,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:35:57,"
[![Coverage Status](https://coveralls.io/builds/10043400/badge)](https://coveralls.io/builds/10043400)

Coverage increased (+0.03%) to 89.336% when pulling **462925a0942847272744b1742a6bbfc4e83d38b1 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89336 pull 462925a0942847272744b1742a6bbfc4e83d38b1 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:35:57
35,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:35:57,"
[![Coverage Status](https://coveralls.io/builds/10043400/badge)](https://coveralls.io/builds/10043400)

Coverage increased (+0.03%) to 89.336% when pulling **462925a0942847272744b1742a6bbfc4e83d38b1 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89336 pull 462925a0942847272744b1742a6bbfc4e83d38b1 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:35:58
36,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:35:58,"
[![Coverage Status](https://coveralls.io/builds/10043400/badge)](https://coveralls.io/builds/10043400)

Coverage increased (+0.03%) to 89.336% when pulling **462925a0942847272744b1742a6bbfc4e83d38b1 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89336 pull 462925a0942847272744b1742a6bbfc4e83d38b1 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:35:58
37,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:35:58,"
[![Coverage Status](https://coveralls.io/builds/10043400/badge)](https://coveralls.io/builds/10043400)

Coverage increased (+0.03%) to 89.336% when pulling **462925a0942847272744b1742a6bbfc4e83d38b1 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 003 89336 pull 462925a0942847272744b1742a6bbfc4e83d38b1 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:38:28
38,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:38:28,"
[![Coverage Status](https://coveralls.io/builds/10043441/badge)](https://coveralls.io/builds/10043441)

Coverage increased (+0.05%) to 89.351% when pulling **ddc652e44fc1c9946cf9439aecaea3d82d217ff8 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 005 89351 pull ddc652e44fc1c9946cf9439aecaea3d82d217ff8 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:38:28
39,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:38:28,"
[![Coverage Status](https://coveralls.io/builds/10043441/badge)](https://coveralls.io/builds/10043441)

Coverage increased (+0.05%) to 89.351% when pulling **ddc652e44fc1c9946cf9439aecaea3d82d217ff8 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 005 89351 pull ddc652e44fc1c9946cf9439aecaea3d82d217ff8 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:38:28
40,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:38:28,"
[![Coverage Status](https://coveralls.io/builds/10043441/badge)](https://coveralls.io/builds/10043441)

Coverage increased (+0.05%) to 89.351% when pulling **ddc652e44fc1c9946cf9439aecaea3d82d217ff8 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 005 89351 pull ddc652e44fc1c9946cf9439aecaea3d82d217ff8 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:38:28
41,issue_comment,394,pycqa,astroid,coveralls,2017-02-07 22:38:28,"
[![Coverage Status](https://coveralls.io/builds/10043441/badge)](https://coveralls.io/builds/10043441)

Coverage increased (+0.05%) to 89.351% when pulling **ddc652e44fc1c9946cf9439aecaea3d82d217ff8 on rr-:annassign** into **d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 on PyCQA:master**.
",,,coverag statu coverag increas 005 89351 pull ddc652e44fc1c9946cf9439aecaea3d82d217ff8 rrannassign d0b5acdfebcdda5c949584c32a8cbc0f31d5cf25 pycqamast,N,2017-02-07 22:38:28
43,issue_comment,394,pycqa,astroid,PCManticore,2017-02-09 08:14:11,"I merged this manually, with a couple of small changes, such as putting ``simple`` in ``_other_fields``, instead of ``_astroid_fields``. Thank you so much @rr- for your contribution!",,,I merg manual coupl small chang put simpl otherfield instead astroidfield thank much rr contribut,N,2017-02-05 10:49:09
44,pull_request_commit_comment,394,pycqa,astroid,rogalski,2017-02-05 10:49:09,"Please extend test suite for more complex cases found in [PEP526](https://www.python.org/dev/peps/pep-0526/):

```
primes: List[int] = []

captain: str  # Note: no initial value!

class Starship:
    stats: ClassVar[Dict[str, int]] = {}
```",ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/tests/unittest_nodes.py')",pleas extend test suit complex case found pep526,Y,2017-02-05 10:50:09
45,pull_request_commit_comment,394,pycqa,astroid,rogalski,2017-02-05 10:50:09,Consider using `test_utils.require_version` decorator.,ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/tests/unittest_nodes.py')",consid use decor,N,2017-02-05 10:57:14
46,pull_request_commit_comment,394,pycqa,astroid,rogalski,2017-02-05 10:57:14,"this likely should be named `target`, not `targets`. Annotated assign cannot be done anyway:

```
>>> (a, b): (int, int)
  File ""<stdin>"", line 1
SyntaxError: only single target (not tuple) can be annotated
```

Also, `help(_ast.AnnAssign)` yields:

    _fields = ('target', 'annotation', 'value', 'simple')

Astroid is supposed to be superset of `ast` and should be consistent with it. I'll recommend changing `_astroid_fields` value quoted above.

[PEP](https://www.python.org/dev/peps/pep-0526/#runtime-effects-of-type-annotations) also mentions _simple name_, but I don't think it affects us in any way.",ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/node_classes.py')",like name annot assign cannot done anyway also yield field target annot valu simpl astroid suppos superset consist ill recommend chang valu quot pep also mention simpl name I dont think affect us way,N,2017-02-07 15:53:00
47,pull_request_commit_comment,394,pycqa,astroid,rogalski,2017-02-07 15:53:00,"we should add `simple` and change ordering to be in conformance with built-in `ast`.

```
>>> ast.parse('a: int').body[0]._fields
('target', 'annotation', 'value', 'simple')
```",ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/node_classes.py')",add chang order conform builtin,N,2017-02-07 15:54:05
48,pull_request_commit_comment,394,pycqa,astroid,rogalski,2017-02-07 15:54:05,maybe actually indenting it and using `textwrap.dedent` will look slightly nicer in a code.,ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/tests/unittest_nodes.py')",mayb actual indent use look slightli nicer code,N,2017-02-07 15:55:42
49,pull_request_commit_comment,394,pycqa,astroid,rogalski,2017-02-07 15:55:42,"Just a nitpick, test cases should be correct, let's use type specification for both keys and values: `Dict[str, str]`",ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/tests/unittest_nodes.py')",just nitpick test case correct let use type specif key valu,Y,2017-02-07 16:31:01
50,pull_request_commit_comment,394,pycqa,astroid,PCManticore,2017-02-07 16:31:01,visit an*,ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/rebuilder.py')",visit,N,2017-02-07 21:32:11
51,pull_request_commit_comment,394,pycqa,astroid,rogalski,2017-02-07 21:32:11,"@PCManticore just before merging it - is it correct way to do it (creation of fake Const node)?

I encountered a very similar situation during implementation of [async comprehensions] support for astroid. ",ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/rebuilder.py')",pcmanticor merg correct way creation fake const node I encount similar situat implement async comprehens support astroid,N,2017-02-07 21:36:45
52,pull_request_commit_comment,394,pycqa,astroid,PCManticore,2017-02-07 21:36:45,"Mm, now that you mention this, we can probably call ``visit_const`` instead of building it on our own. Thanks for finding this.",ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/rebuilder.py')",Mm mention probabl call visitconst instead build thank find,N,2017-02-07 21:39:53
53,pull_request_commit_comment,394,pycqa,astroid,ceridwen,2017-02-07 21:39:53,"Something I just noticed: which of these fields are optional in the standard-library ast nodes?  I'm assuming that the annotation, target, and value fields aren't, but I haven't looked at 3.6 myself.  Whatever fields aren't optional should have required arguments.  There's legacy code that requires that it be possible to build some AST nodes without having all the mandatory fields set, but this is bad practice, and we shouldn't be carrying it forward to new nodes.",ddc652e44fc1c9946cf9439aecaea3d82d217ff8,"(None, '', u'astroid/node_classes.py')",someth I notic field option standardlibrari ast node Im assum annot target valu field arent I havent look 36 whatev field arent option requir argument there legaci code requir possibl build ast node without mandatori field set bad practic shouldnt carri forward new node,N,2017-02-07 21:45:18
55,pull_request_commit,394,pycqa,astroid,rr-,2017-01-30 08:45:55,Add support for annotated assignment nodes,437560727e58b738c660b273c85bcea5badb4e71,,add support annot assign node,N,2017-02-05 13:53:56
56,pull_request_commit,394,pycqa,astroid,rr-,2017-02-05 13:53:56,review fixes,b7c88492163f36559dad3c673b81566f48ab03a2,,review fix,N,2017-02-07 16:45:20
57,pull_request_commit,394,pycqa,astroid,rr-,2017-02-07 16:45:20,review fixes (II),60b384f8668b588f33cd03ef92820f06b3ba21c4,,review fix II,N,2017-02-07 16:47:18
58,pull_request_commit,394,pycqa,astroid,rr-,2017-02-07 16:47:18,add changelog entry,5bd21c2d1caaf4783a3b07892c1690c3f8629f6c,,add changelog entri,N,2017-02-07 16:57:06
59,pull_request_commit,394,pycqa,astroid,rr-,2017-02-07 16:57:06,fix indentation,f39ab6377dce29292f8e8b8867f571b1e99eb73a,,fix indent,N,2017-02-07 20:41:17
60,pull_request_commit,394,pycqa,astroid,rr-,2017-02-07 20:41:17,fix too long line,275ff6135e7befc807e0f6169a7c5b7b69a15d48,,fix long line,N,2017-02-07 22:30:59
61,pull_request_commit,394,pycqa,astroid,rr-,2017-02-07 22:30:59,make non-optional arguments required,462925a0942847272744b1742a6bbfc4e83d38b1,,make nonopt argument requir,N,2017-02-07 22:32:47
2,issue_closed,402,pycqa,astroid,PCManticore,2017-02-09 07:55:59,,closed issue,Fix metaclass detection when multiple keyword arguments are used in ClassDef,,N,2017-02-08 20:37:54
4,pull_request_merged,402,pycqa,astroid,PCManticore,2017-02-09 07:55:59,Fix metaclass detection when multiple keyword arguments are used in ClassDef,563031aaf13a44adc8db4f8d0ab8020d550aae00,Pull request merge from rogalski/astroid:fix_metaclass_when_multiple_keywords to PyCQA/astroid:master,fix metaclass detect multipl keyword argument use classdef,N,2017-02-08 20:43:08
5,issue_comment,402,pycqa,astroid,coveralls,2017-02-08 20:43:08,"
[![Coverage Status](https://coveralls.io/builds/10061482/badge)](https://coveralls.io/builds/10061482)

Coverage remained the same at 89.304% when pulling **d7ca7e88e697c5aa94265f07cf966d48201f77d6 on rogalski:fix_metaclass_when_multiple_keywords** into **9ee1f58ba91a52148829a781f3bfcff6f659139e on PyCQA:master**.
",,,coverag statu coverag remain 89304 pull d7ca7e88e697c5aa94265f07cf966d48201f77d6 rogalskifixmetaclasswhenmultiplekeyword 9ee1f58ba91a52148829a781f3bfcff6f659139 pycqamast,N,2017-02-08 20:43:08
7,pull_request_commit_comment,402,pycqa,astroid,PCManticore,2017-02-09 07:55:18,"Ah, wonder how the tests were passing.",d7ca7e88e697c5aa94265f07cf966d48201f77d6,"(5, '', u'astroid/rebuilder.py')",Ah wonder test pass,Y,2017-02-08 20:34:46
8,pull_request_commit,402,pycqa,astroid,rogalski,2017-02-08 20:34:46,Add failing test,2f0f32abb1b7d336f1823dead2f3f94975928a81,,add fail test,N,2017-02-08 20:35:49
9,pull_request_commit,402,pycqa,astroid,rogalski,2017-02-08 20:35:49,rebuilder: fix metaclass detection when multiple keywords are used in ClassDef,74daf09a0131b31a2dda95d8ea011192cd9cd9fb,,rebuild fix metaclass detect multipl keyword use classdef,N,2017-02-08 20:37:04
