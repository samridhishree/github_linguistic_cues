,rectype,issueid,project_owner,project_name,actor,time,text,action,title,clean_text,Test,formatted_time
2,issue_closed,774,nilearn,nilearn,GaelVaroquaux,2016-06-12 14:48:04,,closed issue,[WIP] ENH: faster faasta (for TV-l1),,N,2015-09-03 21:44:00
5,issue_comment,774,nilearn,nilearn,eickenberg,2015-09-04 07:30:11,"> According to circle-ci, we've lost at least 1.1% accuracy in TV-L1/haxby.

Interesting, that means the change in dgap tolerance schedule has changed something about the convergence of the optimizer (for better or worse on the training set, with impact on the test set)

As for numerical accuracy: Couldn't `saxpy` already do the trick? It may in general be faster to work with `float32` here.
",,,interest mean chang dgap toler schedul chang someth converg optim better wors train set impact test set As numer accuraci couldnt alreadi trick It may gener faster work,Y,2015-09-03 22:03:18
6,pull_request_commit_comment,774,nilearn,nilearn,eickenberg,2015-09-03 22:03:18,"I recall from the ADMM version that this assignment to `z` was necessary there, too. If this operation really is in place, it wouldn't need the assignment to `z`. Does it work without it?
",fb3d73e4c1c626379e84f11bc860e535b14531bc,"(16, '', u'nilearn/decoding/fista.py')",I recal admm version assign necessari If oper realli place wouldnt need assign doe work without,N,2015-09-03 22:05:48
13,pull_request_commit_comment,774,nilearn,nilearn,dohmatob,2015-09-04 07:45:27,"ok, it seems `dgap_tol = abs(energy_delta) / (i + 1.)` was itself a heuristic, and so no 'harm' is done. Ignore previous comment.
",fb3d73e4c1c626379e84f11bc860e535b14531bc,"(26, '', u'nilearn/decoding/fista.py')",ok seem heurist harm done ignor previou comment,N,2015-09-03 21:37:01
